;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 10/11/2017 21:29:05
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF74  	GOTO        232
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_baseTime:
;gerenciamentoNTarefas.c,65 :: 		void baseTime() {
;gerenciamentoNTarefas.c,67 :: 		if(baseT1 == 2) {
0x001C	0x0E00      	MOVLW       0
0x001E	0x181C      	XORWF       _baseT1+1, 0 
0x0020	0xE102      	BNZ         L__baseTime17
0x0022	0x0E02      	MOVLW       2
0x0024	0x181B      	XORWF       _baseT1, 0 
L__baseTime17:
0x0026	0xE103      	BNZ         L_baseTime3
;gerenciamentoNTarefas.c,68 :: 		baseT1 = 0;
0x0028	0x6A1B      	CLRF        _baseT1 
0x002A	0x6A1C      	CLRF        _baseT1+1 
;gerenciamentoNTarefas.c,69 :: 		output01 = ~output01;
0x002C	0x708A      	BTG         LATB0_bit, 0 
;gerenciamentoNTarefas.c,70 :: 		}
L_baseTime3:
;gerenciamentoNTarefas.c,72 :: 		if(baseT2 == 10) {
0x002E	0x0E00      	MOVLW       0
0x0030	0x181A      	XORWF       _baseT2+1, 0 
0x0032	0xE102      	BNZ         L__baseTime18
0x0034	0x0E0A      	MOVLW       10
0x0036	0x1819      	XORWF       _baseT2, 0 
L__baseTime18:
0x0038	0xE103      	BNZ         L_baseTime4
;gerenciamentoNTarefas.c,73 :: 		baseT2 = 0;
0x003A	0x6A19      	CLRF        _baseT2 
0x003C	0x6A1A      	CLRF        _baseT2+1 
;gerenciamentoNTarefas.c,74 :: 		output02 = ~output02;
0x003E	0x728A      	BTG         LATB1_bit, 1 
;gerenciamentoNTarefas.c,75 :: 		}
L_baseTime4:
;gerenciamentoNTarefas.c,76 :: 		}
L_end_baseTime:
0x0040	0x0012      	RETURN      0
; end of _baseTime
_checkT0:
;gerenciamentoNTarefas.c,53 :: 		void checkT0() {
;gerenciamentoNTarefas.c,54 :: 		if(TMR0IF_bit) {
0x0042	0xA4F2      	BTFSS       TMR0IF_bit, 2 
0x0044	0xD00A      	BRA         L_checkT02
;gerenciamentoNTarefas.c,55 :: 		TMR0IF_bit = 0x00;
0x0046	0x94F2      	BCF         TMR0IF_bit, 2 
;gerenciamentoNTarefas.c,56 :: 		TMR0H = 0x3C;
0x0048	0x0E3C      	MOVLW       60
0x004A	0x6ED7      	MOVWF       TMR0H 
;gerenciamentoNTarefas.c,57 :: 		TMR0L = 0xB0;
0x004C	0x0EB0      	MOVLW       176
0x004E	0x6ED6      	MOVWF       TMR0L 
;gerenciamentoNTarefas.c,58 :: 		baseT1++;
0x0050	0x4A1B      	INFSNZ      _baseT1, 1 
0x0052	0x2A1C      	INCF        _baseT1+1, 1 
;gerenciamentoNTarefas.c,59 :: 		baseT2++;
0x0054	0x4A19      	INFSNZ      _baseT2, 1 
0x0056	0x2A1A      	INCF        _baseT2+1, 1 
;gerenciamentoNTarefas.c,61 :: 		baseTime();
0x0058	0xDFE1      	RCALL       _baseTime
;gerenciamentoNTarefas.c,62 :: 		}
L_checkT02:
;gerenciamentoNTarefas.c,63 :: 		}
L_end_checkT0:
0x005A	0x0012      	RETURN      0
; end of _checkT0
_checkT1:
;gerenciamentoNTarefas.c,78 :: 		void checkT1() {
;gerenciamentoNTarefas.c,79 :: 		if(TMR1IF_bit) {
0x005C	0xA09E      	BTFSS       TMR1IF_bit, 0 
0x005E	0xD01C      	BRA         L_checkT15
;gerenciamentoNTarefas.c,80 :: 		TMR1IF_bit = 0x00;
0x0060	0x909E      	BCF         TMR1IF_bit, 0 
;gerenciamentoNTarefas.c,81 :: 		TMR1H = 0x3C;
0x0062	0x0E3C      	MOVLW       60
0x0064	0x6ECF      	MOVWF       TMR1H 
;gerenciamentoNTarefas.c,82 :: 		TMR1L = 0xB0;
0x0066	0x0EB0      	MOVLW       176
0x0068	0x6ECE      	MOVWF       TMR1L 
;gerenciamentoNTarefas.c,83 :: 		baseTMR01++;
0x006A	0x4A17      	INFSNZ      _baseTMR01, 1 
0x006C	0x2A18      	INCF        _baseTMR01+1, 1 
;gerenciamentoNTarefas.c,84 :: 		if(baseTMR01 == 10) {
0x006E	0x0E00      	MOVLW       0
0x0070	0x1818      	XORWF       _baseTMR01+1, 0 
0x0072	0xE102      	BNZ         L__checkT120
0x0074	0x0E0A      	MOVLW       10
0x0076	0x1817      	XORWF       _baseTMR01, 0 
L__checkT120:
0x0078	0xE10F      	BNZ         L_checkT16
;gerenciamentoNTarefas.c,85 :: 		baseTMR01 = 0;
0x007A	0x6A17      	CLRF        _baseTMR01 
0x007C	0x6A18      	CLRF        _baseTMR01+1 
;gerenciamentoNTarefas.c,86 :: 		motorControl++;
0x007E	0x4A15      	INFSNZ      _motorControl, 1 
0x0080	0x2A16      	INCF        _motorControl+1, 1 
;gerenciamentoNTarefas.c,87 :: 		if(motorControl == 5) {
0x0082	0x0E00      	MOVLW       0
0x0084	0x1816      	XORWF       _motorControl+1, 0 
0x0086	0xE102      	BNZ         L__checkT121
0x0088	0x0E05      	MOVLW       5
0x008A	0x1815      	XORWF       _motorControl, 0 
L__checkT121:
0x008C	0xE105      	BNZ         L_checkT17
;gerenciamentoNTarefas.c,88 :: 		motorControl = 6;
0x008E	0x0E06      	MOVLW       6
0x0090	0x6E15      	MOVWF       _motorControl 
0x0092	0x0E00      	MOVLW       0
0x0094	0x6E16      	MOVWF       _motorControl+1 
;gerenciamentoNTarefas.c,89 :: 		motor = 0x00;
0x0096	0x968A      	BCF         LATB3_bit, 3 
;gerenciamentoNTarefas.c,90 :: 		}
L_checkT17:
;gerenciamentoNTarefas.c,91 :: 		}
L_checkT16:
;gerenciamentoNTarefas.c,92 :: 		}
L_checkT15:
;gerenciamentoNTarefas.c,93 :: 		}
L_end_checkT1:
0x0098	0x0012      	RETURN      0
; end of _checkT1
_readButton:
;gerenciamentoNTarefas.c,95 :: 		void readButton() {
;gerenciamentoNTarefas.c,96 :: 		if(!button) flagButton = 0x01;
0x009A	0xAA81      	BTFSS       RB5_bit, 5 
0x009C	0x801D      	BSF         _flagButton, BitPos(_flagButton+0) 
L_readButton8:
;gerenciamentoNTarefas.c,97 :: 		if(button && flagButton) {
0x009E	0xAA81      	BTFSS       RB5_bit, 5 
0x00A0	0xD006      	BRA         L_readButton11
0x00A2	0xA01D      	BTFSS       _flagButton, BitPos(_flagButton+0) 
0x00A4	0xD004      	BRA         L_readButton11
L__readButton12:
;gerenciamentoNTarefas.c,98 :: 		flagButton = 0x00;
0x00A6	0x901D      	BCF         _flagButton, BitPos(_flagButton+0) 
;gerenciamentoNTarefas.c,99 :: 		motor = 0x01;
0x00A8	0x868A      	BSF         LATB3_bit, 3 
;gerenciamentoNTarefas.c,100 :: 		motorControl = 0x00;
0x00AA	0x6A15      	CLRF        _motorControl 
0x00AC	0x6A16      	CLRF        _motorControl+1 
;gerenciamentoNTarefas.c,101 :: 		}
L_readButton11:
;gerenciamentoNTarefas.c,102 :: 		}
L_end_readButton:
0x00AE	0x0012      	RETURN      0
; end of _readButton
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x00B0	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x00B2	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x00B6	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x00B8	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x00BA	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x00BC	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x00BE	0x0012      	RETURN      0
; end of ___CC2DW
_configureMcu:
;gerenciamentoNTarefas.c,40 :: 		void configureMcu() {
;gerenciamentoNTarefas.c,41 :: 		ADCON1 = 0x01; // Todas IOs digitais
0x00C0	0x0E01      	MOVLW       1
0x00C2	0x6EC1      	MOVWF       ADCON1 
;gerenciamentoNTarefas.c,42 :: 		TRISB = 0xF0;  //Configura de RB0 à RB3 como saída
0x00C4	0x0EF0      	MOVLW       240
0x00C6	0x6E93      	MOVWF       TRISB 
;gerenciamentoNTarefas.c,43 :: 		LATB = 0xF0;  //Inicializa o LATB
0x00C8	0x0EF0      	MOVLW       240
0x00CA	0x6E8A      	MOVWF       LATB 
;gerenciamentoNTarefas.c,44 :: 		TMR0H = 0x3C;   // Carrega registradores com valor 15536
0x00CC	0x0E3C      	MOVLW       60
0x00CE	0x6ED7      	MOVWF       TMR0H 
;gerenciamentoNTarefas.c,45 :: 		TMR0L = 0xB0;
0x00D0	0x0EB0      	MOVLW       176
0x00D2	0x6ED6      	MOVWF       TMR0L 
;gerenciamentoNTarefas.c,46 :: 		T0CON = 0x82; // Timer 0,  16 bits, prescaler 1:8
0x00D4	0x0E82      	MOVLW       130
0x00D6	0x6ED5      	MOVWF       T0CON 
;gerenciamentoNTarefas.c,47 :: 		TMR1H = 0x3C;  // Carrega registradores com valor 15536
0x00D8	0x0E3C      	MOVLW       60
0x00DA	0x6ECF      	MOVWF       TMR1H 
;gerenciamentoNTarefas.c,48 :: 		TMR1L = 0xB0;
0x00DC	0x0EB0      	MOVLW       176
0x00DE	0x6ECE      	MOVWF       TMR1L 
;gerenciamentoNTarefas.c,49 :: 		T1CON = 0xF1; // Timer 1,  16 bits, prescaler 1:8
0x00E0	0x0EF1      	MOVLW       241
0x00E2	0x6ECD      	MOVWF       T1CON 
;gerenciamentoNTarefas.c,50 :: 		flagButton = 0x00;
0x00E4	0x901D      	BCF         _flagButton, BitPos(_flagButton+0) 
;gerenciamentoNTarefas.c,51 :: 		}
L_end_configureMcu:
0x00E6	0x0012      	RETURN      0
; end of _configureMcu
_main:
0x00E8	0x0E06      	MOVLW       6
0x00EA	0x6E15      	MOVWF       _motorControl 
0x00EC	0x6A16      	CLRF        22 
0x00EE	0x6A17      	CLRF        _baseTMR01 
0x00F0	0x6A18      	CLRF        24 
0x00F2	0x6A19      	CLRF        _baseT2 
0x00F4	0x6A1A      	CLRF        26 
0x00F6	0x6A1B      	CLRF        _baseT1 
0x00F8	0x6A1C      	CLRF        28 
;gerenciamentoNTarefas.c,29 :: 		void main() {
;gerenciamentoNTarefas.c,30 :: 		configureMcu();
0x00FA	0xDFE2      	RCALL       _configureMcu
;gerenciamentoNTarefas.c,31 :: 		while(1) {
L_main0:
;gerenciamentoNTarefas.c,32 :: 		readButton();
0x00FC	0xDFCE      	RCALL       _readButton
;gerenciamentoNTarefas.c,33 :: 		checkT0();
0x00FE	0xDFA1      	RCALL       _checkT0
;gerenciamentoNTarefas.c,34 :: 		checkT1();
0x0100	0xDFAD      	RCALL       _checkT1
;gerenciamentoNTarefas.c,35 :: 		}
0x0102	0xD7FC      	BRA         L_main0
;gerenciamentoNTarefas.c,36 :: 		}
L_end_main:
0x0104	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [38]    _baseTime
0x0042      [26]    _checkT0
0x005C      [62]    _checkT1
0x009A      [22]    _readButton
0x00B0      [16]    ___CC2DW
0x00C0      [40]    _configureMcu
0x00E8      [30]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    R0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    FLASH_Write_32_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    R1
0x0001       [1]    I2C1_Rd_tmp_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_byteToRead_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Write_32_SaveINTCON_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    __Lib_USB_genHID_memset_usb_pp_L0
0x0002       [2]    __Lib_USB_genHID_memset_usb_int_pp_L0
0x0003       [2]    memmove_tt_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [1]    R3
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    __Lib_USB_genHID_USB_CtrlTrf_Tx_Service_byteToSend_L0
0x0003       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_i_L0
0x0003       [1]    MM_Init_i_L0
0x0004       [2]    __Lib_USB_genHID_USB_Get_Status_Handler_p_L2
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [1]    R4
0x0004       [2]    strcat_cp_L0
0x0004       [2]    __Lib_USB_genHID_USB_Std_Feature_Req_Handler_p_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    __Lib_USB_genHID_USB_Transfer_Packet_handle_L0
0x0004       [2]    __Lib_USB_genHID_USB_Transfer_Packet_Int_handle_L0
0x0005       [2]    __Lib_USB_genHID_USB_Configure_Endpoint_handle_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    R5
0x0006       [1]    R6
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [1]    R9
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _motorControl
0x0017       [2]    _baseTMR01
0x0019       [2]    _baseT2
0x001B       [2]    _baseT1
0x001D       [0]    _flagButton
0x0F81       [0]    RB5_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB0_bit
0x0F93       [1]    TRISB
0x0F9E       [0]    TMR1IF_bit
0x0FC1       [1]    ADCON1
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [0]    TMR0IF_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_checkT02
  L_baseTime3
  L_baseTime4
  L_checkT15
  L_checkT16
  L_checkT17
  L_readButton8
  L_readButton9
  L_readButton10
  L_readButton11
  L__readButton12
  L_end_main
  _main
  L_end_configureMcu
  _configureMcu
  L_end_checkT0
  _checkT0
  L_end_baseTime
  _baseTime
  L__baseTime17
  L__baseTime18
  L_end_checkT1
  _checkT1
  L__checkT120
  L__checkT121
  L_end_readButton
  _readButton
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
