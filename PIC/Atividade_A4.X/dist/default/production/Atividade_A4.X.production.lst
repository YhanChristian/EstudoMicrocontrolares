

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 28 23:38:59 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74   000000                     
    75                           ; Version 2.40
    76                           ; Generated 17/11/2021 GMT
    77                           ; 
    78                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F4520 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     _CCP2CON	set	4026
   111   000000                     _ADRESL	set	4035
   112   000000                     _ADRESH	set	4036
   113   000000                     _ADCON2	set	4032
   114   000000                     _TRISB	set	3987
   115   000000                     _TRISC	set	3988
   116   000000                     _T2CONbits	set	4042
   117   000000                     _ADCON0	set	4034
   118   000000                     _GO_nDONE	set	32273
   119   000000                     _TRISA	set	3986
   120   000000                     _ADCON1	set	4033
   121   000000                     _TMR0L	set	4054
   122   000000                     _TMR0H	set	4055
   123   000000                     _INTCONbits	set	4082
   124   000000                     _ADON	set	32272
   125   000000                     _PORTC	set	3970
   126   000000                     _LATB	set	3978
   127   000000                     _T2CON	set	4042
   128   000000                     _PR2	set	4043
   129   000000                     _CCPR2L	set	4027
   130   000000                     _CCP1CON	set	4029
   131   000000                     _CCPR1L	set	4030
   132   000000                     _T0CON	set	4053
   133   000000                     _TMR2	set	4044
   134   000000                     _TRISE	set	3990
   135   000000                     _TRISD	set	3989
   136   000000                     _LATC	set	3979
   137   000000                     _PORTEbits	set	3972
   138   000000                     _PORTDbits	set	3971
   139                           
   140                           	psect	smallconst
   141   000600                     __psmallconst:
   142                           	callstack 0
   143   000600  00                 	db	0
   144   000601                     STR_6:
   145   000601  44                 	db	68	;'D'
   146   000602  75                 	db	117	;'u'
   147   000603  74                 	db	116	;'t'
   148   000604  79                 	db	121	;'y'
   149   000605  28                 	db	40
   150   000606  25                 	db	37
   151   000607  25                 	db	37
   152   000608  29                 	db	41
   153   000609  3A                 	db	58	;':'
   154   00060A  20                 	db	32
   155   00060B  25                 	db	37
   156   00060C  2E                 	db	46
   157   00060D  32                 	db	50	;'2'
   158   00060E  66                 	db	102	;'f'
   159   00060F  00                 	db	0
   160   000610                     STR_4:
   161   000610  59                 	db	89	;'Y'
   162   000611  68                 	db	104	;'h'
   163   000612  61                 	db	97	;'a'
   164   000613  6E                 	db	110	;'n'
   165   000614  20                 	db	32
   166   000615  43                 	db	67	;'C'
   167   000616  68                 	db	104	;'h'
   168   000617  72                 	db	114	;'r'
   169   000618  69                 	db	105	;'i'
   170   000619  73                 	db	115	;'s'
   171   00061A  74                 	db	116	;'t'
   172   00061B  69                 	db	105	;'i'
   173   00061C  61                 	db	97	;'a'
   174   00061D  6E                 	db	110	;'n'
   175   00061E  00                 	db	0
   176   00061F                     STR_2:
   177   00061F  50                 	db	80	;'P'
   178   000620  50                 	db	80	;'P'
   179   000621  47                 	db	71	;'G'
   180   000622  20                 	db	32
   181   000623  45                 	db	69	;'E'
   182   000624  6D                 	db	109	;'m'
   183   000625  62                 	db	98	;'b'
   184   000626  61                 	db	97	;'a'
   185   000627  72                 	db	114	;'r'
   186   000628  63                 	db	99	;'c'
   187   000629  61                 	db	97	;'a'
   188   00062A  64                 	db	100	;'d'
   189   00062B  6F                 	db	111	;'o'
   190   00062C  73                 	db	115	;'s'
   191   00062D  00                 	db	0
   192   00062E                     STR_5:
   193   00062E  41                 	db	65	;'A'
   194   00062F  44                 	db	68	;'D'
   195   000630  43                 	db	67	;'C'
   196   000631  20                 	db	32
   197   000632  28                 	db	40
   198   000633  56                 	db	86	;'V'
   199   000634  29                 	db	41
   200   000635  3A                 	db	58	;':'
   201   000636  20                 	db	32
   202   000637  25                 	db	37
   203   000638  2E                 	db	46
   204   000639  31                 	db	49	;'1'
   205   00063A  66                 	db	102	;'f'
   206   00063B  00                 	db	0
   207   00063C                     STR_1:
   208   00063C  55                 	db	85	;'U'
   209   00063D  4E                 	db	78	;'N'
   210   00063E  49                 	db	73	;'I'
   211   00063F  46                 	db	70	;'F'
   212   000640  45                 	db	69	;'E'
   213   000641  53                 	db	83	;'S'
   214   000642  50                 	db	80	;'P'
   215   000643  20                 	db	32
   216   000644  32                 	db	50	;'2'
   217   000645  30                 	db	48	;'0'
   218   000646  32                 	db	50	;'2'
   219   000647  33                 	db	51	;'3'
   220   000648  00                 	db	0
   221   000649                     STR_3:
   222   000649  41                 	db	65	;'A'
   223   00064A  74                 	db	116	;'t'
   224   00064B  69                 	db	105	;'i'
   225   00064C  76                 	db	118	;'v'
   226   00064D  69                 	db	105	;'i'
   227   00064E  64                 	db	100	;'d'
   228   00064F  61                 	db	97	;'a'
   229   000650  64                 	db	100	;'d'
   230   000651  65                 	db	101	;'e'
   231   000652  20                 	db	32
   232   000653  41                 	db	65	;'A'
   233   000654  34                 	db	52	;'4'
   234   000655  00                 	db	0
   235   000656                     STR_8:
   236   000656  69                 	db	105	;'i'
   237   000657  6E                 	db	110	;'n'
   238   000658  66                 	db	102	;'f'
   239   000659  00                 	db	0
   240   00065A                     STR_11:
   241   00065A  6E                 	db	110	;'n'
   242   00065B  61                 	db	97	;'a'
   243   00065C  6E                 	db	110	;'n'
   244   00065D  00                 	db	0
   245   00065E  25                 	db	37
   246   00065F  23                 	db	35
   247   000660  78                 	db	120	;'x'
   248   000661  00                 	db	0
   249   000662  00                 	db	0	; dummy byte at the end
   250   000000                     
   251                           ; #config settings
   252                           
   253                           	psect	cinit
   254   003B5A                     __pcinit:
   255                           	callstack 0
   256   003B5A                     start_initialization:
   257                           	callstack 0
   258   003B5A                     __initialization:
   259                           	callstack 0
   260                           
   261                           ; Clear objects allocated to BANK1 (96 bytes)
   262   003B5A  EE01  F000         	lfsr	0,__pbssBANK1
   263   003B5E  0E60               	movlw	96
   264   003B60                     clear_0:
   265   003B60  6AEE               	clrf	postinc0,c
   266   003B62  06E8               	decf	wreg,f,c
   267   003B64  E1FD               	bnz	clear_0
   268                           
   269                           ; Clear objects allocated to BANK0 (3 bytes)
   270   003B66  0100               	movlb	0
   271   003B68  6BFF               	clrf	(__pbssBANK0+2)& (0+255),b
   272   003B6A  6BFE               	clrf	(__pbssBANK0+1)& (0+255),b
   273   003B6C  6BFD               	clrf	__pbssBANK0& (0+255),b
   274                           
   275                           ; Clear objects allocated to COMRAM (1 bytes)
   276   003B6E  6A7D               	clrf	__pbssCOMRAM& (0+255),c
   277   003B70                     end_of_initialization:
   278                           	callstack 0
   279   003B70                     __end_of__initialization:
   280                           	callstack 0
   281   003B70  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   282   003B72  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   283   003B74  0E00               	movlw	low (__Lmediumconst shr (0+16))
   284   003B76  6EF8               	movwf	tblptru,c
   285   003B78  0100               	movlb	0
   286   003B7A  EFEE  F01D         	goto	_main	;jump to C main() function
   287                           
   288                           	psect	bssCOMRAM
   289   00007D                     __pbssCOMRAM:
   290                           	callstack 0
   291   00007D                     _flags:
   292                           	callstack 0
   293   00007D                     	ds	1
   294                           
   295                           	psect	bssBANK0
   296   0000FD                     __pbssBANK0:
   297                           	callstack 0
   298   0000FD                     _gstTimer1Seg:
   299                           	callstack 0
   300   0000FD                     	ds	3
   301                           
   302                           	psect	bssBANK1
   303   000100                     __pbssBANK1:
   304                           	callstack 0
   305   000100                     floorf@F526:
   306                           	callstack 0
   307   000100                     	ds	4
   308   000104                     ___fpclassifyf@F465:
   309                           	callstack 0
   310   000104                     	ds	4
   311   000108                     _nout:
   312                           	callstack 0
   313   000108                     	ds	2
   314   00010A                     _width:
   315                           	callstack 0
   316   00010A                     	ds	2
   317   00010C                     _prec:
   318                           	callstack 0
   319   00010C                     	ds	2
   320   00010E                     _errno:
   321                           	callstack 0
   322   00010E                     	ds	2
   323   000110                     _dbuf:
   324                           	callstack 0
   325   000110                     	ds	80
   326                           
   327                           	psect	cstackBANK0
   328   000080                     __pcstackBANK0:
   329                           	callstack 0
   330   000080                     efgtoa@ne:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x0
   334   000080                     	ds	2
   335   000082                     efgtoa@p:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x2
   339   000082                     	ds	2
   340   000084                     efgtoa@t:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x4
   344   000084                     	ds	2
   345   000086                     _efgtoa$1156:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x6
   349   000086                     	ds	2
   350   000088                     efgtoa@pp:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x8
   354   000088                     	ds	1
   355   000089                     efgtoa@mode:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x9
   359   000089                     	ds	1
   360   00008A                     efgtoa@nmode:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0xA
   364   00008A                     	ds	1
   365   00008B                     efgtoa@d:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0xB
   369   00008B                     	ds	2
   370   00008D                     efgtoa@m:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xD
   374   00008D                     	ds	2
   375   00008F                     efgtoa@e:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0xF
   379   00008F                     	ds	2
   380   000091                     efgtoa@w:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x11
   384   000091                     	ds	2
   385   000093                     efgtoa@ou:
   386                           	callstack 0
   387                           
   388                           ; 4 bytes @ 0x13
   389   000093                     	ds	4
   390   000097                     efgtoa@i:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x17
   394   000097                     	ds	2
   395   000099                     efgtoa@h:
   396                           	callstack 0
   397                           
   398                           ; 4 bytes @ 0x19
   399   000099                     	ds	4
   400   00009D                     efgtoa@l:
   401                           	callstack 0
   402                           
   403                           ; 4 bytes @ 0x1D
   404   00009D                     	ds	4
   405   0000A1                     efgtoa@sign:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x21
   409   0000A1                     	ds	1
   410   0000A2                     efgtoa@n:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x22
   414   0000A2                     	ds	2
   415   0000A4                     efgtoa@g:
   416                           	callstack 0
   417                           
   418                           ; 4 bytes @ 0x24
   419   0000A4                     	ds	4
   420   0000A8                     efgtoa@u:
   421                           	callstack 0
   422                           
   423                           ; 4 bytes @ 0x28
   424   0000A8                     	ds	4
   425   0000AC                     ?_snprintf:
   426                           	callstack 0
   427   0000AC                     snprintf@s:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x2C
   431   0000AC                     	ds	2
   432   0000AE                     snprintf@n:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x2E
   436   0000AE                     	ds	2
   437   0000B0                     snprintf@fmt:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x30
   441   0000B0                     	ds	6
   442   0000B6                     _snprintf$1046:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x36
   446   0000B6                     	ds	2
   447   0000B8                     snprintf@ap:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x38
   451   0000B8                     	ds	2
   452   0000BA                     snprintf@cnt:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x3A
   456   0000BA                     	ds	2
   457   0000BC                     snprintf@f:
   458                           	callstack 0
   459                           
   460                           ; 11 bytes @ 0x3C
   461   0000BC                     	ds	11
   462   0000C7                     DispSystemParam@fAdcVoltage:
   463                           	callstack 0
   464                           
   465                           ; 4 bytes @ 0x47
   466   0000C7                     	ds	4
   467   0000CB                     DispSystemParam@fPercentDuty:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x4B
   471   0000CB                     	ds	4
   472   0000CF                     DispSystemParam@szAdcVoltageDisp:
   473                           	callstack 0
   474                           
   475                           ; 16 bytes @ 0x4F
   476   0000CF                     	ds	16
   477   0000DF                     DispSystemParam@szPercentDutyDisp:
   478                           	callstack 0
   479                           
   480                           ; 16 bytes @ 0x5F
   481   0000DF                     	ds	16
   482   0000EF                     SystemControl@fVoltage:
   483                           	callstack 0
   484                           
   485                           ; 4 bytes @ 0x6F
   486   0000EF                     	ds	4
   487   0000F3                     SystemControl@fPercentDuty:
   488                           	callstack 0
   489                           
   490                           ; 4 bytes @ 0x73
   491   0000F3                     	ds	4
   492   0000F7                     _SystemControl$198:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x77
   496   0000F7                     	ds	2
   497   0000F9                     SystemControl@iResult:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x79
   501   0000F9                     	ds	2
   502   0000FB                     SystemControl@iValue:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x7B
   506   0000FB                     	ds	2
   507                           
   508                           	psect	cstackCOMRAM
   509   000001                     __pcstackCOMRAM:
   510                           	callstack 0
   511   000001                     ?_iAnalogRead:
   512                           	callstack 0
   513   000001                     ?_iConfigADC:
   514                           	callstack 0
   515   000001                     ?_iConfigPWM:
   516                           	callstack 0
   517   000001                     ?_strlen:
   518                           	callstack 0
   519   000001                     ?___fpclassifyf:
   520                           	callstack 0
   521   000001                     ?_isdigit:
   522                           	callstack 0
   523   000001                     ?_isspace:
   524                           	callstack 0
   525   000001                     ?___wmul:
   526                           	callstack 0
   527   000001                     ?___awdiv:
   528                           	callstack 0
   529   000001                     ?___fladd:
   530                           	callstack 0
   531   000001                     ?_labs:
   532                           	callstack 0
   533   000001                     ?___flneg:
   534                           	callstack 0
   535   000001                     ?___xxtofl:
   536                           	callstack 0
   537   000001                     LcdOut@c:
   538                           	callstack 0
   539   000001                     iConfigADC@iNumChannels:
   540                           	callstack 0
   541   000001                     iAnalogRead@iChannel:
   542                           	callstack 0
   543   000001                     iConfigPWM@iNumPin:
   544                           	callstack 0
   545   000001                     pinMode@pcTris:
   546                           	callstack 0
   547   000001                     digitalWrite@pcLat:
   548                           	callstack 0
   549   000001                     digitalRead@pcPort:
   550                           	callstack 0
   551   000001                     ___wmul@multiplier:
   552                           	callstack 0
   553   000001                     ___awdiv@dividend:
   554                           	callstack 0
   555   000001                     memset@dest:
   556                           	callstack 0
   557   000001                     isdigit@c:
   558                           	callstack 0
   559   000001                     isspace@c:
   560                           	callstack 0
   561   000001                     memcpy@d1:
   562                           	callstack 0
   563   000001                     fputc@c:
   564                           	callstack 0
   565   000001                     strcpy@dest:
   566                           	callstack 0
   567   000001                     strlen@s:
   568                           	callstack 0
   569   000001                     ___fleq@ff1:
   570                           	callstack 0
   571   000001                     ___flneg@f1:
   572                           	callstack 0
   573   000001                     ___fladd@b:
   574                           	callstack 0
   575   000001                     ___xxtofl@val:
   576                           	callstack 0
   577   000001                     ___fpclassifyf@x:
   578                           	callstack 0
   579   000001                     labs@a:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x0
   583   000001                     	ds	1
   584   000002                     ??_LcdCmd:
   585   000002                     LcdPutChar@temp:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x1
   589   000002                     	ds	1
   590   000003                     ??_iAnalogRead:
   591   000003                     ??_iConfigADC:
   592   000003                     ??_iConfigPWM:
   593   000003                     ??_isdigit:
   594   000003                     ??_isspace:
   595   000003                     pinMode@uiPin:
   596                           	callstack 0
   597   000003                     digitalWrite@uiPin:
   598                           	callstack 0
   599   000003                     digitalRead@uiPin:
   600                           	callstack 0
   601   000003                     LcdCmd@c:
   602                           	callstack 0
   603   000003                     LcdPutChar@y:
   604                           	callstack 0
   605   000003                     ___wmul@multiplicand:
   606                           	callstack 0
   607   000003                     ___awdiv@divisor:
   608                           	callstack 0
   609   000003                     memset@c:
   610                           	callstack 0
   611   000003                     memcpy@s1:
   612                           	callstack 0
   613   000003                     fputc@fp:
   614                           	callstack 0
   615   000003                     strcpy@src:
   616                           	callstack 0
   617   000003                     strlen@a:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x2
   621   000003                     	ds	1
   622   000004                     ??_LcdInit:
   623   000004                     ??_digitalRead:
   624   000004                     pinMode@fMode:
   625                           	callstack 0
   626   000004                     digitalWrite@fState:
   627                           	callstack 0
   628   000004                     LcdSetCursor@y:
   629                           	callstack 0
   630   000004                     LcdPutChar@c:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x3
   634   000004                     	ds	1
   635   000005                     ??_fputc:
   636   000005                     ??___fpclassifyf:
   637   000005                     ??_labs:
   638   000005                     ??_pinMode:
   639   000005                     ??_digitalWrite:
   640   000005                     ??___xxtofl:
   641   000005                     LcdSetCursor@x:
   642                           	callstack 0
   643   000005                     ___awdiv@counter:
   644                           	callstack 0
   645   000005                     _isspace$1235:
   646                           	callstack 0
   647   000005                     LcdPutStr@str:
   648                           	callstack 0
   649   000005                     ___wmul@product:
   650                           	callstack 0
   651   000005                     memset@n:
   652                           	callstack 0
   653   000005                     memcpy@n:
   654                           	callstack 0
   655   000005                     strcpy@s:
   656                           	callstack 0
   657   000005                     ___fleq@ff2:
   658                           	callstack 0
   659   000005                     ___fladd@a:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0x4
   663   000005                     	ds	1
   664   000006                     LcdSetCursor@k:
   665                           	callstack 0
   666   000006                     ___awdiv@sign:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x5
   670   000006                     	ds	1
   671   000007                     ??_LcdPutStr:
   672   000007                     ??_memset:
   673   000007                     ?_atoi:
   674                           	callstack 0
   675   000007                     LcdSetCursor@j:
   676                           	callstack 0
   677   000007                     ___awdiv@quotient:
   678                           	callstack 0
   679   000007                     atoi@s:
   680                           	callstack 0
   681   000007                     memcpy@d:
   682                           	callstack 0
   683   000007                     strcpy@d:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x6
   687   000007                     	ds	1
   688   000008                     ??_setLedsOn:
   689   000008                     changeBuzzerState@fState:
   690                           	callstack 0
   691   000008                     LcdSetCursor@temp:
   692                           	callstack 0
   693   000008                     configOutputs@i:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x7
   697   000008                     	ds	1
   698   000009                     ??___fladd:
   699   000009                     ??_atoi:
   700   000009                     ??___fleq:
   701   000009                     ___xxtofl@sign:
   702                           	callstack 0
   703   000009                     LcdPutStr@i:
   704                           	callstack 0
   705   000009                     memset@k:
   706                           	callstack 0
   707   000009                     ___fpclassifyf@e:
   708                           	callstack 0
   709   000009                     memcpy@s:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x8
   713   000009                     	ds	1
   714   00000A                     ___xxtofl@exp:
   715                           	callstack 0
   716   00000A                     fputs@s:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x9
   720   00000A                     	ds	1
   721   00000B                     ??_MsgInicialLcd:
   722   00000B                     setLedsOn@uiNumLeds:
   723                           	callstack 0
   724   00000B                     memcpy@tmp:
   725                           	callstack 0
   726   00000B                     memset@s:
   727                           	callstack 0
   728   00000B                     ___xxtofl@arg:
   729                           	callstack 0
   730   00000B                     ___fpclassifyf@u:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0xA
   734   00000B                     	ds	1
   735   00000C                     setLedsOn@i:
   736                           	callstack 0
   737   00000C                     atoi@neg:
   738                           	callstack 0
   739   00000C                     fputs@fp:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0xB
   743   00000C                     	ds	1
   744   00000D                     ___fladd@signs:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0xC
   748   00000D                     	ds	1
   749   00000E                     ___fladd@aexp:
   750                           	callstack 0
   751   00000E                     fputs@c:
   752                           	callstack 0
   753   00000E                     atoi@n:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0xD
   757   00000E                     	ds	1
   758   00000F                     ?___fldiv:
   759                           	callstack 0
   760   00000F                     ___fladd@bexp:
   761                           	callstack 0
   762   00000F                     fputs@i:
   763                           	callstack 0
   764   00000F                     ___fldiv@b:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0xE
   768   00000F                     	ds	1
   769   000010                     ___fladd@grs:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0xF
   773   000010                     	ds	1
   774   000011                     ?_pad:
   775                           	callstack 0
   776   000011                     pad@fp:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x10
   780   000011                     	ds	2
   781   000013                     pad@buf:
   782                           	callstack 0
   783   000013                     ___fldiv@a:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x12
   787   000013                     	ds	2
   788   000015                     pad@p:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x14
   792   000015                     	ds	2
   793   000017                     ??___fldiv:
   794   000017                     ??_pad:
   795                           
   796                           ; 1 bytes @ 0x16
   797   000017                     	ds	1
   798   000018                     pad@i:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x17
   802   000018                     	ds	2
   803   00001A                     pad@w:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x19
   807   00001A                     	ds	1
   808   00001B                     ___fldiv@rem:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x1A
   812   00001B                     	ds	4
   813   00001F                     ___fldiv@sign:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x1E
   817   00001F                     	ds	1
   818   000020                     ___fldiv@new_exp:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x1F
   822   000020                     	ds	2
   823   000022                     ___fldiv@grs:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x21
   827   000022                     	ds	4
   828   000026                     ___fldiv@bexp:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x25
   832   000026                     	ds	1
   833   000027                     ___fldiv@aexp:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x26
   837   000027                     	ds	1
   838   000028                     ?___flmul:
   839                           	callstack 0
   840   000028                     ?_floorf:
   841                           	callstack 0
   842   000028                     ___flmul@b:
   843                           	callstack 0
   844   000028                     floorf@x:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x27
   848   000028                     	ds	4
   849   00002C                     ??_floorf:
   850   00002C                     ___flmul@a:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x2B
   854   00002C                     	ds	4
   855   000030                     ??___flmul:
   856                           
   857                           ; 1 bytes @ 0x2F
   858   000030                     	ds	2
   859   000032                     floorf@m:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x31
   863   000032                     	ds	2
   864   000034                     ___flmul@sign:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x33
   868   000034                     	ds	1
   869   000035                     ___flmul@grs:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x34
   873   000035                     	ds	1
   874   000036                     floorf@e:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x35
   878   000036                     	ds	2
   879   000038                     floorf@u:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0x37
   883   000038                     	ds	1
   884   000039                     ___flmul@aexp:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0x38
   888   000039                     	ds	1
   889   00003A                     ___flmul@bexp:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x39
   893   00003A                     	ds	1
   894   00003B                     ___flmul@prod:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x3A
   898   00003B                     	ds	4
   899   00003F                     ___flmul@temp:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x3E
   903   00003F                     	ds	2
   904   000041                     ?___flsub:
   905                           	callstack 0
   906   000041                     ?_fGetVoltage:
   907                           	callstack 0
   908   000041                     ?_fGetPercentDuty:
   909                           	callstack 0
   910   000041                     ?___fltol:
   911                           	callstack 0
   912   000041                     fGetVoltage@iValue:
   913                           	callstack 0
   914   000041                     fGetPercentDuty@iValue:
   915                           	callstack 0
   916   000041                     ___flge@ff1:
   917                           	callstack 0
   918   000041                     ___fltol@f1:
   919                           	callstack 0
   920   000041                     ___flsub@b:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x40
   924   000041                     	ds	4
   925   000045                     ??___fltol:
   926   000045                     ___flge@ff2:
   927                           	callstack 0
   928   000045                     ___flsub@a:
   929                           	callstack 0
   930                           
   931                           ; 4 bytes @ 0x44
   932   000045                     	ds	4
   933   000049                     ??___flge:
   934   000049                     ___fltol@sign1:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x48
   938   000049                     	ds	1
   939   00004A                     ___fltol@exp1:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x49
   943   00004A                     	ds	1
   944   00004B                     ?_iPWMSetDuty:
   945                           	callstack 0
   946   00004B                     iPWMSetDuty@iNumPin:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x4A
   950   00004B                     	ds	2
   951   00004D                     ?_efgtoa:
   952                           	callstack 0
   953   00004D                     iPWMSetDuty@iDuty:
   954                           	callstack 0
   955   00004D                     efgtoa@fp:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x4C
   959   00004D                     	ds	2
   960   00004F                     ??_iPWMSetDuty:
   961   00004F                     efgtoa@f:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x4E
   965   00004F                     	ds	4
   966   000053                     efgtoa@c:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x52
   970   000053                     	ds	1
   971   000054                     ??_efgtoa:
   972                           
   973                           ; 1 bytes @ 0x53
   974   000054                     	ds	2
   975   000056                     ?_vfpfcnvrt:
   976                           	callstack 0
   977   000056                     vfpfcnvrt@fp:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x55
   981   000056                     	ds	2
   982   000058                     vfpfcnvrt@fmt:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x57
   986   000058                     	ds	2
   987   00005A                     vfpfcnvrt@ap:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x59
   991   00005A                     	ds	2
   992   00005C                     ??_vfpfcnvrt:
   993                           
   994                           ; 1 bytes @ 0x5B
   995   00005C                     	ds	3
   996   00005F                     vfpfcnvrt@convarg:
   997                           	callstack 0
   998                           
   999                           ; 8 bytes @ 0x5E
  1000   00005F                     	ds	8
  1001   000067                     vfpfcnvrt@c:
  1002                           	callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x66
  1005   000067                     	ds	1
  1006   000068                     vfpfcnvrt@cp:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x67
  1010   000068                     	ds	2
  1011   00006A                     ?_vfprintf:
  1012                           	callstack 0
  1013   00006A                     vfprintf@fp:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x69
  1017   00006A                     	ds	2
  1018   00006C                     vfprintf@fmt:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x6B
  1022   00006C                     	ds	2
  1023   00006E                     vfprintf@ap:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x6D
  1027   00006E                     	ds	2
  1028   000070                     vfprintf@cfmt:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x6F
  1032   000070                     	ds	2
  1033   000072                     ??_snprintf:
  1034                           
  1035                           ; 1 bytes @ 0x71
  1036   000072                     	ds	3
  1037   000075                     setup@fInitVoltage:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x74
  1041   000075                     	ds	4
  1042   000079                     setup@fInitPwmDuty:
  1043                           	callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x78
  1046   000079                     	ds	4
  1047   00007D                     
  1048                           ; 1 bytes @ 0x7C
  1049 ;;
  1050 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1051 ;;
  1052 ;; *************** function _main *****************
  1053 ;; Defined at:
  1054 ;;		line 170 in file "main.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1068 ;;      Params:         0       0       0       0       0       0       0
  1069 ;;      Locals:         0       0       0       0       0       0       0
  1070 ;;      Temps:          0       0       0       0       0       0       0
  1071 ;;      Totals:         0       0       0       0       0       0       0
  1072 ;;Total ram usage:        0 bytes
  1073 ;; Hardware stack levels required when called: 11
  1074 ;; This function calls:
  1075 ;;		_SystemControl
  1076 ;;		_setup
  1077 ;; This function is called by:
  1078 ;;		Startup code after reset
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text0
  1083   003BDC                     __ptext0:
  1084                           	callstack 0
  1085   003BDC                     _main:
  1086                           	callstack 20
  1087   003BDC                     
  1088                           ;main.c: 173:     setup();
  1089   003BDC  EC75  F01A         	call	_setup	;wreg free
  1090   003BE0                     l79:
  1091                           
  1092                           ;main.c: 181:         SystemControl();
  1093   003BE0  ECDC  F012         	call	_SystemControl	;wreg free
  1094   003BE4  EFF0  F01D         	goto	l79
  1095   003BE8  EF07  F000         	goto	start
  1096   003BEC                     __end_of_main:
  1097                           	callstack 0
  1098                           
  1099 ;; *************** function _setup *****************
  1100 ;; Defined at:
  1101 ;;		line 138 in file "main.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;		None
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  fInitPwmDuty    4  120[COMRAM] float 
  1106 ;;  fInitVoltage    4  116[COMRAM] float 
  1107 ;;  iSt             2    0        int 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1117 ;;      Params:         0       0       0       0       0       0       0
  1118 ;;      Locals:         8       0       0       0       0       0       0
  1119 ;;      Temps:          0       0       0       0       0       0       0
  1120 ;;      Totals:         8       0       0       0       0       0       0
  1121 ;;Total ram usage:        8 bytes
  1122 ;; Hardware stack levels used: 1
  1123 ;; Hardware stack levels required when called: 10
  1124 ;; This function calls:
  1125 ;;		_ConfigTimerZeroISR
  1126 ;;		_DispSystemParam
  1127 ;;		_MsgInicialLcd
  1128 ;;		_configOutputs
  1129 ;;		_iConfigADC
  1130 ;;		_iConfigPWM
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text1
  1137   0034EA                     __ptext1:
  1138                           	callstack 0
  1139   0034EA                     _setup:
  1140                           	callstack 20
  1141   0034EA                     
  1142                           ;main.c: 141:     float fInitVoltage, fInitPwmDuty;;main.c: 142:     fInitVoltage = fIni
      +                          tPwmDuty = 0.0;
  1143   0034EA  0E00               	movlw	0
  1144   0034EC  6E79               	movwf	setup@fInitPwmDuty^0,c
  1145   0034EE  0E00               	movlw	0
  1146   0034F0  6E7A               	movwf	(setup@fInitPwmDuty+1)^0,c
  1147   0034F2  0E00               	movlw	0
  1148   0034F4  6E7B               	movwf	(setup@fInitPwmDuty+2)^0,c
  1149   0034F6  0E00               	movlw	0
  1150   0034F8  6E7C               	movwf	(setup@fInitPwmDuty+3)^0,c
  1151   0034FA  C079  F075         	movff	setup@fInitPwmDuty,setup@fInitVoltage
  1152   0034FE  C07A  F076         	movff	setup@fInitPwmDuty+1,setup@fInitVoltage+1
  1153   003502  C07B  F077         	movff	setup@fInitPwmDuty+2,setup@fInitVoltage+2
  1154   003506  C07C  F078         	movff	setup@fInitPwmDuty+3,setup@fInitVoltage+3
  1155   00350A                     
  1156                           ;main.c: 145:     configOutputs();
  1157   00350A  EC46  F019         	call	_configOutputs	;wreg free
  1158   00350E  0E00               	movlw	0
  1159   003510  6E02               	movwf	(iConfigADC@iNumChannels+1)^0,c
  1160   003512  0E01               	movlw	1
  1161   003514  6E01               	movwf	iConfigADC@iNumChannels^0,c
  1162   003516  EC87  F019         	call	_iConfigADC	;wreg free
  1163   00351A  0E00               	movlw	0
  1164   00351C  6E02               	movwf	(iConfigPWM@iNumPin+1)^0,c
  1165   00351E  0E02               	movlw	2
  1166   003520  6E01               	movwf	iConfigPWM@iNumPin^0,c
  1167   003522  EC05  F019         	call	_iConfigPWM	;wreg free
  1168   003526                     
  1169                           ;main.c: 160:     MsgInicialLcd();
  1170   003526  EC30  F018         	call	_MsgInicialLcd	;wreg free
  1171   00352A                     
  1172                           ;main.c: 163:     DispSystemParam(fInitVoltage, fInitPwmDuty);
  1173   00352A  C075  F0C7         	movff	setup@fInitVoltage,DispSystemParam@fAdcVoltage
  1174   00352E  C076  F0C8         	movff	setup@fInitVoltage+1,DispSystemParam@fAdcVoltage+1
  1175   003532  C077  F0C9         	movff	setup@fInitVoltage+2,DispSystemParam@fAdcVoltage+2
  1176   003536  C078  F0CA         	movff	setup@fInitVoltage+3,DispSystemParam@fAdcVoltage+3
  1177   00353A  C079  F0CB         	movff	setup@fInitPwmDuty,DispSystemParam@fPercentDuty
  1178   00353E  C07A  F0CC         	movff	setup@fInitPwmDuty+1,DispSystemParam@fPercentDuty+1
  1179   003542  C07B  F0CD         	movff	setup@fInitPwmDuty+2,DispSystemParam@fPercentDuty+2
  1180   003546  C07C  F0CE         	movff	setup@fInitPwmDuty+3,DispSystemParam@fPercentDuty+3
  1181   00354A  EC7A  F017         	call	_DispSystemParam	;wreg free
  1182   00354E                     
  1183                           ;main.c: 166:     ConfigTimerZeroISR();
  1184   00354E  ECDB  F01D         	call	_ConfigTimerZeroISR	;wreg free
  1185   003552  0012               	return		;funcret
  1186   003554                     __end_of_setup:
  1187                           	callstack 0
  1188                           
  1189 ;; *************** function _iConfigPWM *****************
  1190 ;; Defined at:
  1191 ;;		line 19 in file "pwm.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  iNumPin         2    0[COMRAM] int 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  2    0[COMRAM] int 
  1198 ;; Registers used:
  1199 ;;		wreg, status,2, status,0
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1205 ;;      Params:         2       0       0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0       0       0
  1207 ;;      Temps:          2       0       0       0       0       0       0
  1208 ;;      Totals:         4       0       0       0       0       0       0
  1209 ;;Total ram usage:        4 bytes
  1210 ;; Hardware stack levels used: 1
  1211 ;; Hardware stack levels required when called: 1
  1212 ;; This function calls:
  1213 ;;		Nothing
  1214 ;; This function is called by:
  1215 ;;		_setup
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text2
  1220   00320A                     __ptext2:
  1221                           	callstack 0
  1222   00320A                     _iConfigPWM:
  1223                           	callstack 28
  1224   00320A                     
  1225                           ;pwm.c: 23:     switch (iNumPin) {
  1226   00320A  EF15  F019         	goto	l4377
  1227   00320E                     l4367:
  1228                           
  1229                           ;pwm.c: 25:             CCP2CON = 0x0F;
  1230   00320E  0E0F               	movlw	15
  1231   003210  6EBA               	movwf	186,c	;volatile
  1232                           
  1233                           ;pwm.c: 26:             break;
  1234   003212  EF2B  F019         	goto	l4379
  1235   003216                     l4369:
  1236                           
  1237                           ;pwm.c: 28:             CCP1CON = 0x0F;
  1238   003216  0E0F               	movlw	15
  1239   003218  6EBD               	movwf	189,c	;volatile
  1240                           
  1241                           ;pwm.c: 29:             break;
  1242   00321A  EF2B  F019         	goto	l4379
  1243   00321E                     l4371:
  1244                           
  1245                           ;pwm.c: 31:             return PWM_INV_PARAM;
  1246   00321E  0E0B               	movlw	11
  1247   003220  6E02               	movwf	(?_iConfigPWM+1)^0,c
  1248   003222  0EB9               	movlw	185
  1249   003224  6E01               	movwf	?_iConfigPWM^0,c
  1250   003226  EF45  F019         	goto	l139
  1251   00322A                     l4377:
  1252   00322A  C001  F003         	movff	iConfigPWM@iNumPin,??_iConfigPWM
  1253   00322E  C002  F004         	movff	iConfigPWM@iNumPin+1,??_iConfigPWM+1
  1254                           
  1255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1256                           ; Switch size 1, requested type "simple"
  1257                           ; Number of cases is 1, Range of values is 0 to 0
  1258                           ; switch strategies available:
  1259                           ; Name         Instructions Cycles
  1260                           ; simple_byte            4     3 (average)
  1261                           ;	Chosen strategy is simple_byte
  1262   003232  5004               	movf	(??_iConfigPWM+1)^0,w,c
  1263   003234  0A00               	xorlw	0	; case 0
  1264   003236  B4D8               	btfsc	status,2,c
  1265   003238  EF20  F019         	goto	l4721
  1266   00323C  EF0F  F019         	goto	l4371
  1267   003240                     l4721:
  1268                           
  1269                           ; Switch size 1, requested type "simple"
  1270                           ; Number of cases is 2, Range of values is 1 to 2
  1271                           ; switch strategies available:
  1272                           ; Name         Instructions Cycles
  1273                           ; simple_byte            7     4 (average)
  1274                           ;	Chosen strategy is simple_byte
  1275   003240  5003               	movf	??_iConfigPWM^0,w,c
  1276   003242  0A01               	xorlw	1	; case 1
  1277   003244  B4D8               	btfsc	status,2,c
  1278   003246  EF07  F019         	goto	l4367
  1279   00324A  0A03               	xorlw	3	; case 2
  1280   00324C  B4D8               	btfsc	status,2,c
  1281   00324E  EF0B  F019         	goto	l4369
  1282   003252  EF0F  F019         	goto	l4371
  1283   003256                     l4379:
  1284                           
  1285                           ;pwm.c: 36:     PR2 = ("%#x", (20E6 / (8E3 * 4 * 16)) - 1);
  1286   003256  0E26               	movlw	38
  1287   003258  6ECB               	movwf	203,c	;volatile
  1288   00325A                     
  1289                           ;pwm.c: 39:     TRISC &= ~(1 << iNumPin);
  1290   00325A  C001  F003         	movff	iConfigPWM@iNumPin,??_iConfigPWM
  1291   00325E  0E01               	movlw	1
  1292   003260  6E04               	movwf	(??_iConfigPWM+1)^0,c
  1293   003262  2A03               	incf	??_iConfigPWM^0,f,c
  1294   003264  EF36  F019         	goto	u4594
  1295   003268                     u4595:
  1296   003268  90D8               	bcf	status,0,c
  1297   00326A  3604               	rlcf	(??_iConfigPWM+1)^0,f,c
  1298   00326C                     u4594:
  1299   00326C  2E03               	decfsz	??_iConfigPWM^0,f,c
  1300   00326E  EF34  F019         	goto	u4595
  1301   003272  5004               	movf	(??_iConfigPWM+1)^0,w,c
  1302   003274  0AFF               	xorlw	255
  1303   003276  1694               	andwf	148,f,c	;volatile
  1304   003278                     
  1305                           ;pwm.c: 42:     T2CON = 0x03;
  1306   003278  0E03               	movlw	3
  1307   00327A  6ECA               	movwf	202,c	;volatile
  1308   00327C                     
  1309                           ;pwm.c: 43:     TMR2 = 0;
  1310   00327C  0E00               	movlw	0
  1311   00327E  6ECC               	movwf	204,c	;volatile
  1312   003280                     
  1313                           ;pwm.c: 44:     T2CONbits.TMR2ON = 1;
  1314   003280  84CA               	bsf	202,2,c	;volatile
  1315   003282                     
  1316                           ;pwm.c: 46:     return PWM_OK;
  1317   003282  0E00               	movlw	0
  1318   003284  6E02               	movwf	(?_iConfigPWM+1)^0,c
  1319   003286  0E00               	movlw	0
  1320   003288  6E01               	movwf	?_iConfigPWM^0,c
  1321   00328A                     l139:
  1322   00328A  0012               	return		;funcret
  1323   00328C                     __end_of_iConfigPWM:
  1324                           	callstack 0
  1325                           
  1326 ;; *************** function _iConfigADC *****************
  1327 ;; Defined at:
  1328 ;;		line 19 in file "adc.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  iNumChannels    2    0[COMRAM] int 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  2    0[COMRAM] int 
  1335 ;; Registers used:
  1336 ;;		wreg, status,2, status,0
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1342 ;;      Params:         2       0       0       0       0       0       0
  1343 ;;      Locals:         0       0       0       0       0       0       0
  1344 ;;      Temps:          2       0       0       0       0       0       0
  1345 ;;      Totals:         4       0       0       0       0       0       0
  1346 ;;Total ram usage:        4 bytes
  1347 ;; Hardware stack levels used: 1
  1348 ;; Hardware stack levels required when called: 1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_setup
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text3
  1357   00330E                     __ptext3:
  1358                           	callstack 0
  1359   00330E                     _iConfigADC:
  1360                           	callstack 28
  1361   00330E                     
  1362                           ;adc.c: 22:     if(iNumChannels < 1 || iNumChannels > 4) {
  1363   00330E  BE02               	btfsc	(iConfigADC@iNumChannels+1)^0,7,c
  1364   003310  EF92  F019         	goto	u4561
  1365   003314  5002               	movf	(iConfigADC@iNumChannels+1)^0,w,c
  1366   003316  E108               	bnz	u4560
  1367   003318  0401               	decf	iConfigADC@iNumChannels^0,w,c
  1368   00331A  A0D8               	btfss	status,0,c
  1369   00331C  EF92  F019         	goto	u4561
  1370   003320  EF94  F019         	goto	u4560
  1371   003324                     u4561:
  1372   003324  EFA2  F019         	goto	l4353
  1373   003328                     u4560:
  1374   003328  BE02               	btfsc	(iConfigADC@iNumChannels+1)^0,7,c
  1375   00332A  EFA0  F019         	goto	u4571
  1376   00332E  5002               	movf	(iConfigADC@iNumChannels+1)^0,w,c
  1377   003330  E109               	bnz	u4570
  1378   003332  0E05               	movlw	5
  1379   003334  5C01               	subwf	iConfigADC@iNumChannels^0,w,c
  1380   003336  A0D8               	btfss	status,0,c
  1381   003338  EFA0  F019         	goto	u4571
  1382   00333C  EFA2  F019         	goto	u4570
  1383   003340                     u4571:
  1384   003340  EFA8  F019         	goto	l101
  1385   003344                     u4570:
  1386   003344                     l4353:
  1387                           
  1388                           ;adc.c: 23:         return ADC_INV_PARAM;
  1389   003344  0E07               	movlw	7
  1390   003346  6E02               	movwf	(?_iConfigADC+1)^0,c
  1391   003348  0ED1               	movlw	209
  1392   00334A  6E01               	movwf	?_iConfigADC^0,c
  1393   00334C  EFC5  F019         	goto	l104
  1394   003350                     l101:
  1395                           
  1396                           ;adc.c: 26:     ADON |= 0x01;
  1397   003350  80C2               	bsf	4034,0,c	;volatile
  1398   003352                     
  1399                           ;adc.c: 29:     ADCON1 = (ADCON1 & 0xF0) | (unsigned char)(0x0F - iNumChannels);
  1400   003352  5001               	movf	iConfigADC@iNumChannels^0,w,c
  1401   003354  080F               	sublw	15
  1402   003356  6E03               	movwf	??_iConfigADC^0,c
  1403   003358  50C1               	movf	193,w,c	;volatile
  1404   00335A  0BF0               	andlw	240
  1405   00335C  1003               	iorwf	??_iConfigADC^0,w,c
  1406   00335E  6EC1               	movwf	193,c	;volatile
  1407                           
  1408                           ;adc.c: 32:     TRISA |= (0x0F << (4 - iNumChannels));
  1409   003360  5001               	movf	iConfigADC@iNumChannels^0,w,c
  1410   003362  0804               	sublw	4
  1411   003364  6E03               	movwf	??_iConfigADC^0,c
  1412   003366  0E0F               	movlw	15
  1413   003368  6E04               	movwf	(??_iConfigADC+1)^0,c
  1414   00336A  2A03               	incf	??_iConfigADC^0,f,c
  1415   00336C  EFBA  F019         	goto	u4584
  1416   003370                     u4585:
  1417   003370  90D8               	bcf	status,0,c
  1418   003372  3604               	rlcf	(??_iConfigADC+1)^0,f,c
  1419   003374                     u4584:
  1420   003374  2E03               	decfsz	??_iConfigADC^0,f,c
  1421   003376  EFB8  F019         	goto	u4585
  1422   00337A  5004               	movf	(??_iConfigADC+1)^0,w,c
  1423   00337C  1292               	iorwf	146,f,c	;volatile
  1424   00337E                     
  1425                           ;adc.c: 38:     ADCON2 = 0x95;
  1426   00337E  0E95               	movlw	149
  1427   003380  6EC0               	movwf	192,c	;volatile
  1428   003382                     
  1429                           ;adc.c: 40:     return ADC_OK;
  1430   003382  0E00               	movlw	0
  1431   003384  6E02               	movwf	(?_iConfigADC+1)^0,c
  1432   003386  0E00               	movlw	0
  1433   003388  6E01               	movwf	?_iConfigADC^0,c
  1434   00338A                     l104:
  1435   00338A  0012               	return		;funcret
  1436   00338C                     __end_of_iConfigADC:
  1437                           	callstack 0
  1438                           
  1439 ;; *************** function _configOutputs *****************
  1440 ;; Defined at:
  1441 ;;		line 43 in file "outputs.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  i               2    7[COMRAM] int 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1455 ;;      Params:         0       0       0       0       0       0       0
  1456 ;;      Locals:         2       0       0       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0       0       0
  1458 ;;      Totals:         2       0       0       0       0       0       0
  1459 ;;Total ram usage:        2 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; Hardware stack levels required when called: 2
  1462 ;; This function calls:
  1463 ;;		_digitalWrite
  1464 ;;		_pinMode
  1465 ;; This function is called by:
  1466 ;;		_setup
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text4
  1471   00328C                     __ptext4:
  1472                           	callstack 0
  1473   00328C                     _configOutputs:
  1474                           	callstack 27
  1475   00328C                     
  1476                           ;outputs.c: 44:     int i = 0;
  1477   00328C  0E00               	movlw	0
  1478   00328E  6E09               	movwf	(configOutputs@i+1)^0,c
  1479   003290  0E00               	movlw	0
  1480   003292  6E08               	movwf	configOutputs@i^0,c
  1481                           
  1482                           ;outputs.c: 46:     for (i = GPIO_LED_0; i < MAX_LEDS; i++) {
  1483   003294  0E00               	movlw	0
  1484   003296  6E09               	movwf	(configOutputs@i+1)^0,c
  1485   003298  0E00               	movlw	0
  1486   00329A  6E08               	movwf	configOutputs@i^0,c
  1487   00329C                     l4341:
  1488                           
  1489                           ;outputs.c: 47:         pinMode(&TRISB, (uint8_t) i, 0);
  1490   00329C  0E93               	movlw	147
  1491   00329E  6E01               	movwf	pinMode@pcTris^0,c
  1492   0032A0  0E0F               	movlw	15
  1493   0032A2  6E02               	movwf	(pinMode@pcTris+1)^0,c
  1494   0032A4  C008  F003         	movff	configOutputs@i,pinMode@uiPin
  1495   0032A8  0E00               	movlw	0
  1496   0032AA  6E04               	movwf	pinMode@fMode^0,c
  1497   0032AC  EC10  F01B         	call	_pinMode	;wreg free
  1498                           
  1499                           ;outputs.c: 48:         digitalWrite(&LATB, (uint8_t) i, 0);
  1500   0032B0  0E8A               	movlw	138
  1501   0032B2  6E01               	movwf	digitalWrite@pcLat^0,c
  1502   0032B4  0E0F               	movlw	15
  1503   0032B6  6E02               	movwf	(digitalWrite@pcLat+1)^0,c
  1504   0032B8  C008  F003         	movff	configOutputs@i,digitalWrite@uiPin
  1505   0032BC  0E00               	movlw	0
  1506   0032BE  6E04               	movwf	digitalWrite@fState^0,c
  1507   0032C0  ECA6  F01B         	call	_digitalWrite	;wreg free
  1508   0032C4                     
  1509                           ;outputs.c: 49:     }
  1510   0032C4  4A08               	infsnz	configOutputs@i^0,f,c
  1511   0032C6  2A09               	incf	(configOutputs@i+1)^0,f,c
  1512   0032C8  BE09               	btfsc	(configOutputs@i+1)^0,7,c
  1513   0032CA  EF70  F019         	goto	u4551
  1514   0032CE  5009               	movf	(configOutputs@i+1)^0,w,c
  1515   0032D0  E109               	bnz	u4550
  1516   0032D2  0E08               	movlw	8
  1517   0032D4  5C08               	subwf	configOutputs@i^0,w,c
  1518   0032D6  A0D8               	btfss	status,0,c
  1519   0032D8  EF70  F019         	goto	u4551
  1520   0032DC  EF72  F019         	goto	u4550
  1521   0032E0                     u4551:
  1522   0032E0  EF4E  F019         	goto	l4341
  1523   0032E4                     u4550:
  1524   0032E4                     
  1525                           ;outputs.c: 51:     pinMode(&TRISC, 1, 0);
  1526   0032E4  0E94               	movlw	148
  1527   0032E6  6E01               	movwf	pinMode@pcTris^0,c
  1528   0032E8  0E0F               	movlw	15
  1529   0032EA  6E02               	movwf	(pinMode@pcTris+1)^0,c
  1530   0032EC  0E01               	movlw	1
  1531   0032EE  6E03               	movwf	pinMode@uiPin^0,c
  1532   0032F0  0E00               	movlw	0
  1533   0032F2  6E04               	movwf	pinMode@fMode^0,c
  1534   0032F4  EC10  F01B         	call	_pinMode	;wreg free
  1535                           
  1536                           ;outputs.c: 52:     digitalWrite(&LATC, 1, 0);
  1537   0032F8  0E8B               	movlw	139
  1538   0032FA  6E01               	movwf	digitalWrite@pcLat^0,c
  1539   0032FC  0E0F               	movlw	15
  1540   0032FE  6E02               	movwf	(digitalWrite@pcLat+1)^0,c
  1541   003300  0E01               	movlw	1
  1542   003302  6E03               	movwf	digitalWrite@uiPin^0,c
  1543   003304  0E00               	movlw	0
  1544   003306  6E04               	movwf	digitalWrite@fState^0,c
  1545   003308  ECA6  F01B         	call	_digitalWrite	;wreg free
  1546   00330C  0012               	return		;funcret
  1547   00330E                     __end_of_configOutputs:
  1548                           	callstack 0
  1549                           
  1550 ;; *************** function _pinMode *****************
  1551 ;; Defined at:
  1552 ;;		line 18 in file "outputs.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  pcTris          2    0[COMRAM] PTR volatile unsigned ch
  1555 ;;		 -> TRISB(1), TRISC(1), 
  1556 ;;  uiPin           1    2[COMRAM] unsigned char 
  1557 ;;  fMode           1    3[COMRAM] _Bool 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;		None
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1569 ;;      Params:         4       0       0       0       0       0       0
  1570 ;;      Locals:         0       0       0       0       0       0       0
  1571 ;;      Temps:          3       0       0       0       0       0       0
  1572 ;;      Totals:         7       0       0       0       0       0       0
  1573 ;;Total ram usage:        7 bytes
  1574 ;; Hardware stack levels used: 1
  1575 ;; Hardware stack levels required when called: 1
  1576 ;; This function calls:
  1577 ;;		Nothing
  1578 ;; This function is called by:
  1579 ;;		_configOutputs
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text5
  1584   003620                     __ptext5:
  1585                           	callstack 0
  1586   003620                     _pinMode:
  1587                           	callstack 27
  1588   003620                     
  1589                           ;outputs.c: 19:     if (!fMode) {
  1590   003620  5004               	movf	pinMode@fMode^0,w,c
  1591   003622  A4D8               	btfss	status,2,c
  1592   003624  EF16  F01B         	goto	u4301
  1593   003628  EF18  F01B         	goto	u4300
  1594   00362C                     u4301:
  1595   00362C  EF2F  F01B         	goto	l4169
  1596   003630                     u4300:
  1597   003630                     
  1598                           ;outputs.c: 21:         *pcTris &= ~(1 << uiPin);
  1599   003630  C003  F005         	movff	pinMode@uiPin,??_pinMode
  1600   003634  0E01               	movlw	1
  1601   003636  6E06               	movwf	(??_pinMode+1)^0,c
  1602   003638  2A05               	incf	??_pinMode^0,f,c
  1603   00363A  EF21  F01B         	goto	u4314
  1604   00363E                     u4315:
  1605   00363E  90D8               	bcf	status,0,c
  1606   003640  3606               	rlcf	(??_pinMode+1)^0,f,c
  1607   003642                     u4314:
  1608   003642  2E05               	decfsz	??_pinMode^0,f,c
  1609   003644  EF1F  F01B         	goto	u4315
  1610   003648  5006               	movf	(??_pinMode+1)^0,w,c
  1611   00364A  0AFF               	xorlw	255
  1612   00364C  6E07               	movwf	(??_pinMode+2)^0,c
  1613   00364E  C001  FFD9         	movff	pinMode@pcTris,fsr2l
  1614   003652  C002  FFDA         	movff	pinMode@pcTris+1,fsr2h
  1615   003656  5007               	movf	(??_pinMode+2)^0,w,c
  1616   003658  16DF               	andwf	indf2,f,c
  1617                           
  1618                           ;outputs.c: 22:     } else {
  1619   00365A  EF41  F01B         	goto	l164
  1620   00365E                     l4169:
  1621                           
  1622                           ;outputs.c: 24:         *pcTris |= (1 << uiPin);
  1623   00365E  C003  F005         	movff	pinMode@uiPin,??_pinMode
  1624   003662  0E01               	movlw	1
  1625   003664  6E06               	movwf	(??_pinMode+1)^0,c
  1626   003666  2A05               	incf	??_pinMode^0,f,c
  1627   003668  EF38  F01B         	goto	u4324
  1628   00366C                     u4325:
  1629   00366C  90D8               	bcf	status,0,c
  1630   00366E  3606               	rlcf	(??_pinMode+1)^0,f,c
  1631   003670                     u4324:
  1632   003670  2E05               	decfsz	??_pinMode^0,f,c
  1633   003672  EF36  F01B         	goto	u4325
  1634   003676  C001  FFD9         	movff	pinMode@pcTris,fsr2l
  1635   00367A  C002  FFDA         	movff	pinMode@pcTris+1,fsr2h
  1636   00367E  5006               	movf	(??_pinMode+1)^0,w,c
  1637   003680  12DF               	iorwf	indf2,f,c
  1638   003682                     l164:
  1639   003682  0012               	return		;funcret
  1640   003684                     __end_of_pinMode:
  1641                           	callstack 0
  1642                           
  1643 ;; *************** function _MsgInicialLcd *****************
  1644 ;; Defined at:
  1645 ;;		line 53 in file "main.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1659 ;;      Params:         0       0       0       0       0       0       0
  1660 ;;      Locals:         0       0       0       0       0       0       0
  1661 ;;      Temps:          2       0       0       0       0       0       0
  1662 ;;      Totals:         2       0       0       0       0       0       0
  1663 ;;Total ram usage:        2 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; Hardware stack levels required when called: 4
  1666 ;; This function calls:
  1667 ;;		_LcdClear
  1668 ;;		_LcdInit
  1669 ;;		_LcdPutStr
  1670 ;;		_LcdSetCursor
  1671 ;; This function is called by:
  1672 ;;		_setup
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text6
  1677   003060                     __ptext6:
  1678                           	callstack 0
  1679   003060                     _MsgInicialLcd:
  1680                           	callstack 25
  1681   003060                     
  1682                           ;main.c: 55:     LcdInit();
  1683   003060  ECC6  F019         	call	_LcdInit	;wreg free
  1684                           
  1685                           ;main.c: 57:     LcdSetCursor(1, 3);
  1686   003064  0E03               	movlw	3
  1687   003066  6E04               	movwf	LcdSetCursor@y^0,c
  1688   003068  0E01               	movlw	1
  1689   00306A  ECDD  F01A         	call	_LcdSetCursor
  1690   00306E                     
  1691                           ;main.c: 58:     LcdPutStr("UNIFESP 2023");
  1692   00306E  0E3C               	movlw	low STR_1
  1693   003070  6E05               	movwf	LcdPutStr@str^0,c
  1694   003072  0E06               	movlw	high STR_1
  1695   003074  6E06               	movwf	(LcdPutStr@str+1)^0,c
  1696   003076  ECC2  F018         	call	_LcdPutStr	;wreg free
  1697   00307A                     
  1698                           ;main.c: 59:     LcdSetCursor(2, 2);
  1699   00307A  0E02               	movlw	2
  1700   00307C  6E04               	movwf	LcdSetCursor@y^0,c
  1701   00307E  0E02               	movlw	2
  1702   003080  ECDD  F01A         	call	_LcdSetCursor
  1703                           
  1704                           ;main.c: 60:     LcdPutStr("PPG Embarcados");
  1705   003084  0E1F               	movlw	low STR_2
  1706   003086  6E05               	movwf	LcdPutStr@str^0,c
  1707   003088  0E06               	movlw	high STR_2
  1708   00308A  6E06               	movwf	(LcdPutStr@str+1)^0,c
  1709   00308C  ECC2  F018         	call	_LcdPutStr	;wreg free
  1710   003090                     
  1711                           ;main.c: 61:     _delay((unsigned long)((2000)*(20E6/4000.0)));
  1712   003090  0E33               	movlw	51
  1713   003092  6E0C               	movwf	(??_MsgInicialLcd+1)^0,c
  1714   003094  0EBB               	movlw	187
  1715   003096  6E0B               	movwf	??_MsgInicialLcd^0,c
  1716   003098  0EE0               	movlw	224
  1717   00309A                     u4777:
  1718   00309A  2EE8               	decfsz	wreg,f,c
  1719   00309C  D7FE               	bra	u4777
  1720   00309E  2E0B               	decfsz	??_MsgInicialLcd^0,f,c
  1721   0030A0  D7FC               	bra	u4777
  1722   0030A2  2E0C               	decfsz	(??_MsgInicialLcd+1)^0,f,c
  1723   0030A4  D7FA               	bra	u4777
  1724   0030A6                     
  1725                           ;main.c: 64:     LcdClear();
  1726   0030A6  ECF6  F01D         	call	_LcdClear	;wreg free
  1727   0030AA                     
  1728                           ;main.c: 67:     LcdSetCursor(1, 3);
  1729   0030AA  0E03               	movlw	3
  1730   0030AC  6E04               	movwf	LcdSetCursor@y^0,c
  1731   0030AE  0E01               	movlw	1
  1732   0030B0  ECDD  F01A         	call	_LcdSetCursor
  1733   0030B4                     
  1734                           ;main.c: 68:     LcdPutStr("Atividade A4");
  1735   0030B4  0E49               	movlw	low STR_3
  1736   0030B6  6E05               	movwf	LcdPutStr@str^0,c
  1737   0030B8  0E06               	movlw	high STR_3
  1738   0030BA  6E06               	movwf	(LcdPutStr@str+1)^0,c
  1739   0030BC  ECC2  F018         	call	_LcdPutStr	;wreg free
  1740   0030C0                     
  1741                           ;main.c: 69:     LcdSetCursor(2, 2);
  1742   0030C0  0E02               	movlw	2
  1743   0030C2  6E04               	movwf	LcdSetCursor@y^0,c
  1744   0030C4  0E02               	movlw	2
  1745   0030C6  ECDD  F01A         	call	_LcdSetCursor
  1746   0030CA                     
  1747                           ;main.c: 70:     LcdPutStr("Yhan Christian");
  1748   0030CA  0E10               	movlw	low STR_4
  1749   0030CC  6E05               	movwf	LcdPutStr@str^0,c
  1750   0030CE  0E06               	movlw	high STR_4
  1751   0030D0  6E06               	movwf	(LcdPutStr@str+1)^0,c
  1752   0030D2  ECC2  F018         	call	_LcdPutStr	;wreg free
  1753   0030D6                     
  1754                           ;main.c: 71:     _delay((unsigned long)((2000)*(20E6/4000.0)));
  1755   0030D6  0E33               	movlw	51
  1756   0030D8  6E0C               	movwf	(??_MsgInicialLcd+1)^0,c
  1757   0030DA  0EBB               	movlw	187
  1758   0030DC  6E0B               	movwf	??_MsgInicialLcd^0,c
  1759   0030DE  0EE0               	movlw	224
  1760   0030E0                     u4787:
  1761   0030E0  2EE8               	decfsz	wreg,f,c
  1762   0030E2  D7FE               	bra	u4787
  1763   0030E4  2E0B               	decfsz	??_MsgInicialLcd^0,f,c
  1764   0030E6  D7FC               	bra	u4787
  1765   0030E8  2E0C               	decfsz	(??_MsgInicialLcd+1)^0,f,c
  1766   0030EA  D7FA               	bra	u4787
  1767   0030EC                     
  1768                           ;main.c: 74:     LcdClear();
  1769   0030EC  ECF6  F01D         	call	_LcdClear	;wreg free
  1770   0030F0  0012               	return		;funcret
  1771   0030F2                     __end_of_MsgInicialLcd:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _LcdInit *****************
  1775 ;; Defined at:
  1776 ;;		line 50 in file "lcd.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1790 ;;      Params:         0       0       0       0       0       0       0
  1791 ;;      Locals:         0       0       0       0       0       0       0
  1792 ;;      Temps:          1       0       0       0       0       0       0
  1793 ;;      Totals:         1       0       0       0       0       0       0
  1794 ;;Total ram usage:        1 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 3
  1797 ;; This function calls:
  1798 ;;		_LcdCmd
  1799 ;; This function is called by:
  1800 ;;		_MsgInicialLcd
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text7
  1805   00338C                     __ptext7:
  1806                           	callstack 0
  1807   00338C                     _LcdInit:
  1808                           	callstack 25
  1809   00338C                     
  1810                           ;lcd.c: 52:     (TRISD &= ~0xF0);
  1811   00338C  0E0F               	movlw	15
  1812   00338E  1695               	andwf	149,f,c	;volatile
  1813                           
  1814                           ;lcd.c: 55:     (TRISE &= ~0x06);
  1815   003390  0EF9               	movlw	249
  1816   003392  1696               	andwf	150,f,c	;volatile
  1817   003394                     
  1818                           ;lcd.c: 58:     LcdCmd(0x00);
  1819   003394  0E00               	movlw	0
  1820   003396  ECBF  F01D         	call	_LcdCmd
  1821   00339A                     
  1822                           ;lcd.c: 61:     _delay((unsigned long)((20)*(20E6/4000.0)));
  1823   00339A  0E82               	movlw	130
  1824   00339C  6E04               	movwf	??_LcdInit^0,c
  1825   00339E  0EDE               	movlw	222
  1826   0033A0                     u4797:
  1827   0033A0  2EE8               	decfsz	wreg,f,c
  1828   0033A2  D7FE               	bra	u4797
  1829   0033A4  2E04               	decfsz	??_LcdInit^0,f,c
  1830   0033A6  D7FC               	bra	u4797
  1831   0033A8                     
  1832                           ;lcd.c: 63:     LcdCmd(0x03);
  1833   0033A8  0E03               	movlw	3
  1834   0033AA  ECBF  F01D         	call	_LcdCmd
  1835   0033AE                     
  1836                           ;lcd.c: 64:     _delay((unsigned long)((5)*(20E6/4000.0)));
  1837   0033AE  0E21               	movlw	33
  1838   0033B0  6E04               	movwf	??_LcdInit^0,c
  1839   0033B2  0E76               	movlw	118
  1840   0033B4                     u4807:
  1841   0033B4  2EE8               	decfsz	wreg,f,c
  1842   0033B6  D7FE               	bra	u4807
  1843   0033B8  2E04               	decfsz	??_LcdInit^0,f,c
  1844   0033BA  D7FC               	bra	u4807
  1845   0033BC  D000               	nop2	
  1846   0033BE                     
  1847                           ;lcd.c: 65:     LcdCmd(0x03);
  1848   0033BE  0E03               	movlw	3
  1849   0033C0  ECBF  F01D         	call	_LcdCmd
  1850   0033C4                     
  1851                           ;lcd.c: 66:     _delay((unsigned long)((11)*(20E6/4000.0)));
  1852   0033C4  0E48               	movlw	72
  1853   0033C6  6E04               	movwf	??_LcdInit^0,c
  1854   0033C8  0E6C               	movlw	108
  1855   0033CA                     u4817:
  1856   0033CA  2EE8               	decfsz	wreg,f,c
  1857   0033CC  D7FE               	bra	u4817
  1858   0033CE  2E04               	decfsz	??_LcdInit^0,f,c
  1859   0033D0  D7FC               	bra	u4817
  1860   0033D2  D000               	nop2	
  1861   0033D4                     
  1862                           ;lcd.c: 67:     LcdCmd(0x03);
  1863   0033D4  0E03               	movlw	3
  1864   0033D6  ECBF  F01D         	call	_LcdCmd
  1865   0033DA                     
  1866                           ;lcd.c: 70:     LcdCmd(0x02);
  1867   0033DA  0E02               	movlw	2
  1868   0033DC  ECBF  F01D         	call	_LcdCmd
  1869   0033E0                     
  1870                           ;lcd.c: 71:     LcdCmd(0x02);
  1871   0033E0  0E02               	movlw	2
  1872   0033E2  ECBF  F01D         	call	_LcdCmd
  1873   0033E6                     
  1874                           ;lcd.c: 72:     LcdCmd(0x08);
  1875   0033E6  0E08               	movlw	8
  1876   0033E8  ECBF  F01D         	call	_LcdCmd
  1877   0033EC                     
  1878                           ;lcd.c: 73:     LcdCmd(0x00);
  1879   0033EC  0E00               	movlw	0
  1880   0033EE  ECBF  F01D         	call	_LcdCmd
  1881   0033F2                     
  1882                           ;lcd.c: 74:     LcdCmd(0x0C);
  1883   0033F2  0E0C               	movlw	12
  1884   0033F4  ECBF  F01D         	call	_LcdCmd
  1885   0033F8                     
  1886                           ;lcd.c: 75:     LcdCmd(0x00);
  1887   0033F8  0E00               	movlw	0
  1888   0033FA  ECBF  F01D         	call	_LcdCmd
  1889   0033FE                     
  1890                           ;lcd.c: 76:     LcdCmd(0x06);
  1891   0033FE  0E06               	movlw	6
  1892   003400  ECBF  F01D         	call	_LcdCmd
  1893   003404  0012               	return		;funcret
  1894   003406                     __end_of_LcdInit:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _LcdClear *****************
  1898 ;; Defined at:
  1899 ;;		line 79 in file "lcd.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1913 ;;      Params:         0       0       0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0
  1916 ;;      Totals:         0       0       0       0       0       0       0
  1917 ;;Total ram usage:        0 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 3
  1920 ;; This function calls:
  1921 ;;		_LcdCmd
  1922 ;; This function is called by:
  1923 ;;		_MsgInicialLcd
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text8
  1928   003BEC                     __ptext8:
  1929                           	callstack 0
  1930   003BEC                     _LcdClear:
  1931                           	callstack 25
  1932   003BEC                     
  1933                           ;lcd.c: 80:     LcdCmd(0x00);
  1934   003BEC  0E00               	movlw	0
  1935   003BEE  ECBF  F01D         	call	_LcdCmd
  1936                           
  1937                           ;lcd.c: 81:     LcdCmd(0x01);
  1938   003BF2  0E01               	movlw	1
  1939   003BF4  ECBF  F01D         	call	_LcdCmd
  1940   003BF8  0012               	return		;funcret
  1941   003BFA                     __end_of_LcdClear:
  1942                           	callstack 0
  1943                           
  1944 ;; *************** function _ConfigTimerZeroISR *****************
  1945 ;; Defined at:
  1946 ;;		line 19 in file "interrupts.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1960 ;;      Params:         0       0       0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0
  1963 ;;      Totals:         0       0       0       0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_setup
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text9
  1975   003BB6                     __ptext9:
  1976                           	callstack 0
  1977   003BB6                     _ConfigTimerZeroISR:
  1978                           	callstack 28
  1979   003BB6                     
  1980                           ;interrupts.c: 29:     T0CON = 0x84;
  1981   003BB6  0E84               	movlw	132
  1982   003BB8  6ED5               	movwf	213,c	;volatile
  1983                           
  1984                           ;interrupts.c: 32:     TMR0H = 0x66;
  1985   003BBA  0E66               	movlw	102
  1986   003BBC  6ED7               	movwf	215,c	;volatile
  1987                           
  1988                           ;interrupts.c: 33:     TMR0L = 0x5A;
  1989   003BBE  0E5A               	movlw	90
  1990   003BC0  6ED6               	movwf	214,c	;volatile
  1991   003BC2                     
  1992                           ;interrupts.c: 36:     INTCONbits.TMR0IE = 1;
  1993   003BC2  8AF2               	bsf	242,5,c	;volatile
  1994   003BC4                     
  1995                           ;interrupts.c: 39:     INTCONbits.GIE = 1;
  1996   003BC4  8EF2               	bsf	242,7,c	;volatile
  1997   003BC6                     
  1998                           ;interrupts.c: 42:     INTCONbits.TMR0IF = 0;
  1999   003BC6  94F2               	bcf	242,2,c	;volatile
  2000   003BC8  0012               	return		;funcret
  2001   003BCA                     __end_of_ConfigTimerZeroISR:
  2002                           	callstack 0
  2003                           
  2004 ;; *************** function _SystemControl *****************
  2005 ;; Defined at:
  2006 ;;		line 99 in file "main.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  fPercentDuty    4  115[BANK0 ] float 
  2011 ;;  fVoltage        4  111[BANK0 ] float 
  2012 ;;  iValue          2  123[BANK0 ] int 
  2013 ;;  iResult         2  121[BANK0 ] int 
  2014 ;;  iSt             2    0        int 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2024 ;;      Params:         0       0       0       0       0       0       0
  2025 ;;      Locals:         0      14       0       0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0       0       0
  2027 ;;      Totals:         0      14       0       0       0       0       0
  2028 ;;Total ram usage:       14 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 10
  2031 ;; This function calls:
  2032 ;;		_DispSystemParam
  2033 ;;		___awdiv
  2034 ;;		_changeBuzzerState
  2035 ;;		_fGetPercentDuty
  2036 ;;		_fGetVoltage
  2037 ;;		_iAnalogRead
  2038 ;;		_iPWMSetDuty
  2039 ;;		_readBuzzerState
  2040 ;;		_setLedsOn
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text10
  2047   0025B8                     __ptext10:
  2048                           	callstack 0
  2049   0025B8                     _SystemControl:
  2050                           	callstack 20
  2051   0025B8  0E00               	movlw	0
  2052   0025BA  0100               	movlb	0	; () banked
  2053   0025BC  6FFA               	movwf	(SystemControl@iResult+1)& (0+255),b
  2054   0025BE  0E00               	movlw	0
  2055   0025C0  6FF9               	movwf	SystemControl@iResult& (0+255),b
  2056   0025C2  0E00               	movlw	0
  2057   0025C4  6FF3               	movwf	SystemControl@fPercentDuty& (0+255),b
  2058   0025C6  0E00               	movlw	0
  2059   0025C8  6FF4               	movwf	(SystemControl@fPercentDuty+1)& (0+255),b
  2060   0025CA  0E00               	movlw	0
  2061   0025CC  6FF5               	movwf	(SystemControl@fPercentDuty+2)& (0+255),b
  2062   0025CE  0E00               	movlw	0
  2063   0025D0  6FF6               	movwf	(SystemControl@fPercentDuty+3)& (0+255),b
  2064                           
  2065                           ;main.c: 105:     if (gstTimer1Seg.fTimerOverflow) {
  2066   0025D2  51FF               	movf	(_gstTimer1Seg+2)& (0+255),w,b
  2067   0025D4  B4D8               	btfsc	status,2,c
  2068   0025D6  EFEF  F012         	goto	u4661
  2069   0025DA  EFF1  F012         	goto	u4660
  2070   0025DE                     u4661:
  2071   0025DE  EF85  F013         	goto	l69
  2072   0025E2                     u4660:
  2073   0025E2                     
  2074                           ; BSR set to: 0
  2075                           ;main.c: 107:         iValue = iAnalogRead(0);
  2076   0025E2  0E00               	movlw	0
  2077   0025E4  6E02               	movwf	(iAnalogRead@iChannel+1)^0,c
  2078   0025E6  0E00               	movlw	0
  2079   0025E8  6E01               	movwf	iAnalogRead@iChannel^0,c
  2080   0025EA  EC74  F01B         	call	_iAnalogRead	;wreg free
  2081   0025EE  C001  F0FB         	movff	?_iAnalogRead,SystemControl@iValue
  2082   0025F2  C002  F0FC         	movff	?_iAnalogRead+1,SystemControl@iValue+1
  2083   0025F6  0E00               	movlw	0
  2084   0025F8  6E4C               	movwf	(iPWMSetDuty@iNumPin+1)^0,c
  2085   0025FA  0E02               	movlw	2
  2086   0025FC  6E4B               	movwf	iPWMSetDuty@iNumPin^0,c
  2087   0025FE  C0FB  F04D         	movff	SystemControl@iValue,iPWMSetDuty@iDuty
  2088   002602  C0FC  F04E         	movff	SystemControl@iValue+1,iPWMSetDuty@iDuty+1
  2089   002606  ECB5  F015         	call	_iPWMSetDuty	;wreg free
  2090   00260A                     
  2091                           ;main.c: 116:         if (iValue > 0) {
  2092   00260A  0100               	movlb	0	; () banked
  2093   00260C  BFFC               	btfsc	(SystemControl@iValue+1)& (0+255),7,b
  2094   00260E  EF11  F013         	goto	u4671
  2095   002612  51FC               	movf	(SystemControl@iValue+1)& (0+255),w,b
  2096   002614  E108               	bnz	u4670
  2097   002616  05FB               	decf	SystemControl@iValue& (0+255),w,b
  2098   002618  A0D8               	btfss	status,0,c
  2099   00261A  EF11  F013         	goto	u4671
  2100   00261E  EF13  F013         	goto	u4670
  2101   002622                     u4671:
  2102   002622  EF24  F013         	goto	l4461
  2103   002626                     u4670:
  2104   002626                     
  2105                           ; BSR set to: 0
  2106                           ;main.c: 117:             iResult = (iValue / 128) + 1;
  2107   002626  C0FB  F001         	movff	SystemControl@iValue,___awdiv@dividend
  2108   00262A  C0FC  F002         	movff	SystemControl@iValue+1,___awdiv@dividend+1
  2109   00262E  0E00               	movlw	0
  2110   002630  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2111   002632  0E80               	movlw	128
  2112   002634  6E03               	movwf	___awdiv@divisor^0,c
  2113   002636  EC18  F017         	call	___awdiv	;wreg free
  2114   00263A  0E01               	movlw	1
  2115   00263C  2401               	addwf	?___awdiv^0,w,c
  2116   00263E  0100               	movlb	0	; () banked
  2117   002640  6FF9               	movwf	SystemControl@iResult& (0+255),b
  2118   002642  0E00               	movlw	0
  2119   002644  2002               	addwfc	(?___awdiv+1)^0,w,c
  2120   002646  6FFA               	movwf	(SystemControl@iResult+1)& (0+255),b
  2121   002648                     l4461:
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;main.c: 119:         setLedsOn((uint8_t) iResult);
  2125   002648  51F9               	movf	SystemControl@iResult& (0+255),w,b
  2126   00264A  EC42  F01B         	call	_setLedsOn
  2127   00264E                     
  2128                           ;main.c: 122:         changeBuzzerState((iResult == 8) ?!readBuzzerState() : 0);
  2129   00264E  0E08               	movlw	8
  2130   002650  0100               	movlb	0	; () banked
  2131   002652  19F9               	xorwf	SystemControl@iResult& (0+255),w,b
  2132   002654  11FA               	iorwf	(SystemControl@iResult+1)& (0+255),w,b
  2133   002656  B4D8               	btfsc	status,2,c
  2134   002658  EF30  F013         	goto	u4681
  2135   00265C  EF32  F013         	goto	u4680
  2136   002660                     u4681:
  2137   002660  EF38  F013         	goto	l4467
  2138   002664                     u4680:
  2139   002664                     
  2140                           ; BSR set to: 0
  2141   002664  0E00               	movlw	0
  2142   002666  6FF8               	movwf	(_SystemControl$198+1)& (0+255),b
  2143   002668  0E00               	movlw	0
  2144   00266A  6FF7               	movwf	_SystemControl$198& (0+255),b
  2145   00266C  EF47  F013         	goto	l68
  2146   002670                     l4467:
  2147                           
  2148                           ; BSR set to: 0
  2149   002670  ECE5  F01D         	call	_readBuzzerState	;wreg free
  2150   002674  0900               	iorlw	0
  2151   002676  B4D8               	btfsc	status,2,c
  2152   002678  EF40  F013         	goto	u4691
  2153   00267C  EF43  F013         	goto	u4690
  2154   002680                     u4691:
  2155   002680  0E01               	movlw	1
  2156   002682  EF44  F013         	goto	u4700
  2157   002686                     u4690:
  2158   002686  0E00               	movlw	0
  2159   002688                     u4700:
  2160   002688  0100               	movlb	0	; () banked
  2161   00268A  6FF7               	movwf	_SystemControl$198& (0+255),b
  2162   00268C  6BF8               	clrf	(_SystemControl$198+1)& (0+255),b
  2163   00268E                     l68:
  2164                           
  2165                           ; BSR set to: 0
  2166   00268E  51F7               	movf	_SystemControl$198& (0+255),w,b
  2167   002690  11F8               	iorwf	(_SystemControl$198+1)& (0+255),w,b
  2168   002692  A4D8               	btfss	status,2,c
  2169   002694  EF4E  F013         	goto	u4711
  2170   002698  EF51  F013         	goto	u4710
  2171   00269C                     u4711:
  2172   00269C  0E01               	movlw	1
  2173   00269E  EF52  F013         	goto	u4720
  2174   0026A2                     u4710:
  2175   0026A2  0E00               	movlw	0
  2176   0026A4                     u4720:
  2177   0026A4  ECCF  F01D         	call	_changeBuzzerState
  2178   0026A8                     
  2179                           ;main.c: 125:         fVoltage = fGetVoltage(iValue);
  2180   0026A8  C0FB  F041         	movff	SystemControl@iValue,fGetVoltage@iValue
  2181   0026AC  C0FC  F042         	movff	SystemControl@iValue+1,fGetVoltage@iValue+1
  2182   0026B0  EC03  F01A         	call	_fGetVoltage	;wreg free
  2183   0026B4  C041  F0EF         	movff	?_fGetVoltage,SystemControl@fVoltage
  2184   0026B8  C042  F0F0         	movff	?_fGetVoltage+1,SystemControl@fVoltage+1
  2185   0026BC  C043  F0F1         	movff	?_fGetVoltage+2,SystemControl@fVoltage+2
  2186   0026C0  C044  F0F2         	movff	?_fGetVoltage+3,SystemControl@fVoltage+3
  2187   0026C4                     
  2188                           ;main.c: 128:         fPercentDuty = fGetPercentDuty(iValue);
  2189   0026C4  C0FB  F041         	movff	SystemControl@iValue,fGetPercentDuty@iValue
  2190   0026C8  C0FC  F042         	movff	SystemControl@iValue+1,fGetPercentDuty@iValue+1
  2191   0026CC  EC3C  F01A         	call	_fGetPercentDuty	;wreg free
  2192   0026D0  C041  F0F3         	movff	?_fGetPercentDuty,SystemControl@fPercentDuty
  2193   0026D4  C042  F0F4         	movff	?_fGetPercentDuty+1,SystemControl@fPercentDuty+1
  2194   0026D8  C043  F0F5         	movff	?_fGetPercentDuty+2,SystemControl@fPercentDuty+2
  2195   0026DC  C044  F0F6         	movff	?_fGetPercentDuty+3,SystemControl@fPercentDuty+3
  2196   0026E0                     
  2197                           ;main.c: 131:         DispSystemParam(fVoltage, fPercentDuty);
  2198   0026E0  C0EF  F0C7         	movff	SystemControl@fVoltage,DispSystemParam@fAdcVoltage
  2199   0026E4  C0F0  F0C8         	movff	SystemControl@fVoltage+1,DispSystemParam@fAdcVoltage+1
  2200   0026E8  C0F1  F0C9         	movff	SystemControl@fVoltage+2,DispSystemParam@fAdcVoltage+2
  2201   0026EC  C0F2  F0CA         	movff	SystemControl@fVoltage+3,DispSystemParam@fAdcVoltage+3
  2202   0026F0  C0F3  F0CB         	movff	SystemControl@fPercentDuty,DispSystemParam@fPercentDuty
  2203   0026F4  C0F4  F0CC         	movff	SystemControl@fPercentDuty+1,DispSystemParam@fPercentDuty+1
  2204   0026F8  C0F5  F0CD         	movff	SystemControl@fPercentDuty+2,DispSystemParam@fPercentDuty+2
  2205   0026FC  C0F6  F0CE         	movff	SystemControl@fPercentDuty+3,DispSystemParam@fPercentDuty+3
  2206   002700  EC7A  F017         	call	_DispSystemParam	;wreg free
  2207   002704                     
  2208                           ;main.c: 133:         gstTimer1Seg.fTimerOverflow = 0;
  2209   002704  0E00               	movlw	0
  2210   002706  0100               	movlb	0	; () banked
  2211   002708  6FFF               	movwf	(_gstTimer1Seg+2)& (0+255),b
  2212   00270A                     l69:
  2213                           
  2214                           ; BSR set to: 0
  2215   00270A  0012               	return		;funcret
  2216   00270C                     __end_of_SystemControl:
  2217                           	callstack 0
  2218                           
  2219 ;; *************** function _setLedsOn *****************
  2220 ;; Defined at:
  2221 ;;		line 55 in file "outputs.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  uiNumLeds       1    wreg     unsigned char 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  uiNumLeds       1   10[COMRAM] unsigned char 
  2226 ;;  i               2   11[COMRAM] int 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  2   26[None  ] int 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2236 ;;      Params:         0       0       0       0       0       0       0
  2237 ;;      Locals:         3       0       0       0       0       0       0
  2238 ;;      Temps:          3       0       0       0       0       0       0
  2239 ;;      Totals:         6       0       0       0       0       0       0
  2240 ;;Total ram usage:        6 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 2
  2243 ;; This function calls:
  2244 ;;		_digitalWrite
  2245 ;; This function is called by:
  2246 ;;		_SystemControl
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text11
  2251   003684                     __ptext11:
  2252                           	callstack 0
  2253   003684                     _setLedsOn:
  2254                           	callstack 27
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;incstack = 0
  2258                           ;setLedsOn@uiNumLeds stored from wreg
  2259   003684  6E0B               	movwf	setLedsOn@uiNumLeds^0,c
  2260   003686                     
  2261                           ;outputs.c: 57:     if (uiNumLeds > MAX_LEDS) {
  2262   003686  0E08               	movlw	8
  2263   003688  640B               	cpfsgt	setLedsOn@uiNumLeds^0,c
  2264   00368A  EF49  F01B         	goto	u4531
  2265   00368E  EF4B  F01B         	goto	u4530
  2266   003692                     u4531:
  2267   003692  EF4D  F01B         	goto	l4321
  2268   003696                     u4530:
  2269   003696  EF73  F01B         	goto	l181
  2270   00369A                     l4321:
  2271                           
  2272                           ;outputs.c: 61:     LATB = 0x00;
  2273   00369A  0E00               	movlw	0
  2274   00369C  6E8A               	movwf	138,c	;volatile
  2275                           
  2276                           ;outputs.c: 64:     for (i = 0; i < uiNumLeds; i++) {
  2277   00369E  0E00               	movlw	0
  2278   0036A0  6E0D               	movwf	(setLedsOn@i+1)^0,c
  2279   0036A2  0E00               	movlw	0
  2280   0036A4  6E0C               	movwf	setLedsOn@i^0,c
  2281   0036A6  EF61  F01B         	goto	l4327
  2282   0036AA                     l4323:
  2283                           
  2284                           ;outputs.c: 65:         digitalWrite(&LATB, (uint8_t) i, 1);
  2285   0036AA  0E8A               	movlw	138
  2286   0036AC  6E01               	movwf	digitalWrite@pcLat^0,c
  2287   0036AE  0E0F               	movlw	15
  2288   0036B0  6E02               	movwf	(digitalWrite@pcLat+1)^0,c
  2289   0036B2  C00C  F003         	movff	setLedsOn@i,digitalWrite@uiPin
  2290   0036B6  0E01               	movlw	1
  2291   0036B8  6E04               	movwf	digitalWrite@fState^0,c
  2292   0036BA  ECA6  F01B         	call	_digitalWrite	;wreg free
  2293   0036BE                     
  2294                           ;outputs.c: 66:     }
  2295   0036BE  4A0C               	infsnz	setLedsOn@i^0,f,c
  2296   0036C0  2A0D               	incf	(setLedsOn@i+1)^0,f,c
  2297   0036C2                     l4327:
  2298   0036C2  500B               	movf	setLedsOn@uiNumLeds^0,w,c
  2299   0036C4  6E08               	movwf	??_setLedsOn^0,c
  2300   0036C6  6A09               	clrf	(??_setLedsOn+1)^0,c
  2301   0036C8  5008               	movf	??_setLedsOn^0,w,c
  2302   0036CA  5C0C               	subwf	setLedsOn@i^0,w,c
  2303   0036CC  500D               	movf	(setLedsOn@i+1)^0,w,c
  2304   0036CE  0A80               	xorlw	128
  2305   0036D0  6E0A               	movwf	(??_setLedsOn+2)^0,c
  2306   0036D2  5009               	movf	(??_setLedsOn+1)^0,w,c
  2307   0036D4  0A80               	xorlw	128
  2308   0036D6  580A               	subwfb	(??_setLedsOn+2)^0,w,c
  2309   0036D8  A0D8               	btfss	status,0,c
  2310   0036DA  EF71  F01B         	goto	u4541
  2311   0036DE  EF73  F01B         	goto	u4540
  2312   0036E2                     u4541:
  2313   0036E2  EF55  F01B         	goto	l4323
  2314   0036E6                     u4540:
  2315   0036E6                     l181:
  2316   0036E6  0012               	return		;funcret
  2317   0036E8                     __end_of_setLedsOn:
  2318                           	callstack 0
  2319                           
  2320 ;; *************** function _readBuzzerState *****************
  2321 ;; Defined at:
  2322 ;;		line 75 in file "outputs.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      _Bool 
  2329 ;; Registers used:
  2330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2336 ;;      Params:         0       0       0       0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0       0       0
  2338 ;;      Temps:          0       0       0       0       0       0       0
  2339 ;;      Totals:         0       0       0       0       0       0       0
  2340 ;;Total ram usage:        0 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 2
  2343 ;; This function calls:
  2344 ;;		_digitalRead
  2345 ;; This function is called by:
  2346 ;;		_SystemControl
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text12
  2351   003BCA                     __ptext12:
  2352                           	callstack 0
  2353   003BCA                     _readBuzzerState:
  2354                           	callstack 27
  2355   003BCA                     
  2356                           ;outputs.c: 76:     return digitalRead(&PORTC, 1);
  2357   003BCA  0E82               	movlw	130
  2358   003BCC  6E01               	movwf	digitalRead@pcPort^0,c
  2359   003BCE  0E0F               	movlw	15
  2360   003BD0  6E02               	movwf	(digitalRead@pcPort+1)^0,c
  2361   003BD2  0E01               	movlw	1
  2362   003BD4  6E03               	movwf	digitalRead@uiPin^0,c
  2363   003BD6  EC12  F01D         	call	_digitalRead	;wreg free
  2364   003BDA  0012               	return		;funcret
  2365   003BDC                     __end_of_readBuzzerState:
  2366                           	callstack 0
  2367                           
  2368 ;; *************** function _digitalRead *****************
  2369 ;; Defined at:
  2370 ;;		line 38 in file "outputs.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  pcPort          2    0[COMRAM] PTR volatile unsigned ch
  2373 ;;		 -> PORTC(1), 
  2374 ;;  uiPin           1    2[COMRAM] unsigned char 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      _Bool 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2386 ;;      Params:         3       0       0       0       0       0       0
  2387 ;;      Locals:         0       0       0       0       0       0       0
  2388 ;;      Temps:          3       0       0       0       0       0       0
  2389 ;;      Totals:         6       0       0       0       0       0       0
  2390 ;;Total ram usage:        6 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 1
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_readBuzzerState
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text13
  2401   003A24                     __ptext13:
  2402                           	callstack 0
  2403   003A24                     _digitalRead:
  2404                           	callstack 27
  2405   003A24                     
  2406                           ;outputs.c: 39:     return (*pcPort & (1 << uiPin)) != 0;
  2407   003A24  C001  FFD9         	movff	digitalRead@pcPort,fsr2l
  2408   003A28  C002  FFDA         	movff	digitalRead@pcPort+1,fsr2h
  2409   003A2C  50DF               	movf	indf2,w,c
  2410   003A2E  6E04               	movwf	??_digitalRead^0,c
  2411   003A30  C003  F005         	movff	digitalRead@uiPin,??_digitalRead+1
  2412   003A34  0E01               	movlw	1
  2413   003A36  6E06               	movwf	(??_digitalRead+2)^0,c
  2414   003A38  2A05               	incf	(??_digitalRead+1)^0,f,c
  2415   003A3A  EF21  F01D         	goto	u4364
  2416   003A3E                     u4365:
  2417   003A3E  90D8               	bcf	status,0,c
  2418   003A40  3606               	rlcf	(??_digitalRead+2)^0,f,c
  2419   003A42                     u4364:
  2420   003A42  2E05               	decfsz	(??_digitalRead+1)^0,f,c
  2421   003A44  EF1F  F01D         	goto	u4365
  2422   003A48  5006               	movf	(??_digitalRead+2)^0,w,c
  2423   003A4A  1404               	andwf	??_digitalRead^0,w,c
  2424   003A4C  0900               	iorlw	0
  2425   003A4E  A4D8               	btfss	status,2,c
  2426   003A50  EF2C  F01D         	goto	u4371
  2427   003A54  EF2F  F01D         	goto	u4370
  2428   003A58                     u4371:
  2429   003A58  0E01               	movlw	1
  2430   003A5A  EF30  F01D         	goto	u4380
  2431   003A5E                     u4370:
  2432   003A5E  0E00               	movlw	0
  2433   003A60                     u4380:
  2434   003A60  0012               	return		;funcret
  2435   003A62                     __end_of_digitalRead:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _iPWMSetDuty *****************
  2439 ;; Defined at:
  2440 ;;		line 49 in file "pwm.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  iNumPin         2   74[COMRAM] int 
  2443 ;;  iDuty           2   76[COMRAM] int 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  2   74[COMRAM] int 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2455 ;;      Params:         4       0       0       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0       0       0
  2457 ;;      Temps:          2       0       0       0       0       0       0
  2458 ;;      Totals:         6       0       0       0       0       0       0
  2459 ;;Total ram usage:        6 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 2
  2462 ;; This function calls:
  2463 ;;		___fldiv
  2464 ;;		___flmul
  2465 ;;		___fltol
  2466 ;;		___xxtofl
  2467 ;; This function is called by:
  2468 ;;		_SystemControl
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text14
  2473   002B6A                     __ptext14:
  2474                           	callstack 0
  2475   002B6A                     _iPWMSetDuty:
  2476                           	callstack 27
  2477   002B6A                     
  2478                           ;pwm.c: 53:     if (iDuty <= 1023) {
  2479   002B6A  BE4E               	btfsc	(iPWMSetDuty@iDuty+1)^0,7,c
  2480   002B6C  EFC1  F015         	goto	u4520
  2481   002B70  0E04               	movlw	4
  2482   002B72  5C4E               	subwf	(iPWMSetDuty@iDuty+1)^0,w,c
  2483   002B74  B0D8               	btfsc	status,0,c
  2484   002B76  EFBF  F015         	goto	u4521
  2485   002B7A  EFC1  F015         	goto	u4520
  2486   002B7E                     u4521:
  2487   002B7E  EF29  F016         	goto	l4303
  2488   002B82                     u4520:
  2489   002B82                     
  2490                           ;pwm.c: 55:         iDuty = ((float) iDuty / 1023) * (20E6 / (8E3 * 16));
  2491   002B82  0E00               	movlw	0
  2492   002B84  6E2C               	movwf	___flmul@a^0,c
  2493   002B86  0E40               	movlw	64
  2494   002B88  6E2D               	movwf	(___flmul@a+1)^0,c
  2495   002B8A  0E1C               	movlw	28
  2496   002B8C  6E2E               	movwf	(___flmul@a+2)^0,c
  2497   002B8E  0E43               	movlw	67
  2498   002B90  6E2F               	movwf	(___flmul@a+3)^0,c
  2499   002B92  0E00               	movlw	0
  2500   002B94  6E13               	movwf	___fldiv@a^0,c
  2501   002B96  0EC0               	movlw	192
  2502   002B98  6E14               	movwf	(___fldiv@a+1)^0,c
  2503   002B9A  0E7F               	movlw	127
  2504   002B9C  6E15               	movwf	(___fldiv@a+2)^0,c
  2505   002B9E  0E44               	movlw	68
  2506   002BA0  6E16               	movwf	(___fldiv@a+3)^0,c
  2507   002BA2  C04D  F001         	movff	iPWMSetDuty@iDuty,___xxtofl@val
  2508   002BA6  C04E  F002         	movff	iPWMSetDuty@iDuty+1,___xxtofl@val+1
  2509   002BAA  0E00               	movlw	0
  2510   002BAC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2511   002BAE  0EFF               	movlw	-1
  2512   002BB0  6E03               	movwf	(___xxtofl@val+2)^0,c
  2513   002BB2  6E04               	movwf	(___xxtofl@val+3)^0,c
  2514   002BB4  0E01               	movlw	1
  2515   002BB6  EC47  F011         	call	___xxtofl
  2516   002BBA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2517   002BBE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2518   002BC2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2519   002BC6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2520   002BCA  ECAE  F00C         	call	___fldiv	;wreg free
  2521   002BCE  C00F  F028         	movff	?___fldiv,___flmul@b
  2522   002BD2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2523   002BD6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2524   002BDA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2525   002BDE  EC99  F00A         	call	___flmul	;wreg free
  2526   002BE2  C028  F041         	movff	?___flmul,___fltol@f1
  2527   002BE6  C029  F042         	movff	?___flmul+1,___fltol@f1+1
  2528   002BEA  C02A  F043         	movff	?___flmul+2,___fltol@f1+2
  2529   002BEE  C02B  F044         	movff	?___flmul+3,___fltol@f1+3
  2530   002BF2  ECB0  F014         	call	___fltol	;wreg free
  2531   002BF6  C041  F04D         	movff	?___fltol,iPWMSetDuty@iDuty
  2532   002BFA  C042  F04E         	movff	?___fltol+1,iPWMSetDuty@iDuty+1
  2533                           
  2534                           ;pwm.c: 57:         switch (iNumPin) {
  2535   002BFE  EF13  F016         	goto	l4301
  2536   002C02                     l4291:
  2537                           
  2538                           ;pwm.c: 59:                 CCPR2L = (unsigned char) iDuty >> 2;
  2539   002C02  404D               	rrncf	iPWMSetDuty@iDuty^0,w,c
  2540   002C04  42E8               	rrncf	wreg,f,c
  2541   002C06  0B3F               	andlw	63
  2542   002C08  6EBB               	movwf	187,c	;volatile
  2543                           
  2544                           ;pwm.c: 60:                 break;
  2545   002C0A  EF2F  F016         	goto	l4307
  2546   002C0E                     l4293:
  2547                           
  2548                           ;pwm.c: 62:                 CCPR1L = (unsigned char) iDuty >> 2;
  2549   002C0E  404D               	rrncf	iPWMSetDuty@iDuty^0,w,c
  2550   002C10  42E8               	rrncf	wreg,f,c
  2551   002C12  0B3F               	andlw	63
  2552   002C14  6EBE               	movwf	190,c	;volatile
  2553                           
  2554                           ;pwm.c: 63:                 break;
  2555   002C16  EF2F  F016         	goto	l4307
  2556   002C1A                     l4295:
  2557                           
  2558                           ;pwm.c: 65:                 return PWM_INV_PARAM;
  2559   002C1A  0E0B               	movlw	11
  2560   002C1C  6E4C               	movwf	(?_iPWMSetDuty+1)^0,c
  2561   002C1E  0EB9               	movlw	185
  2562   002C20  6E4B               	movwf	?_iPWMSetDuty^0,c
  2563   002C22  EF33  F016         	goto	l148
  2564   002C26                     l4301:
  2565   002C26  C04B  F04F         	movff	iPWMSetDuty@iNumPin,??_iPWMSetDuty
  2566   002C2A  C04C  F050         	movff	iPWMSetDuty@iNumPin+1,??_iPWMSetDuty+1
  2567                           
  2568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2569                           ; Switch size 1, requested type "simple"
  2570                           ; Number of cases is 1, Range of values is 0 to 0
  2571                           ; switch strategies available:
  2572                           ; Name         Instructions Cycles
  2573                           ; simple_byte            4     3 (average)
  2574                           ;	Chosen strategy is simple_byte
  2575   002C2E  5050               	movf	(??_iPWMSetDuty+1)^0,w,c
  2576   002C30  0A00               	xorlw	0	; case 0
  2577   002C32  B4D8               	btfsc	status,2,c
  2578   002C34  EF1E  F016         	goto	l4723
  2579   002C38  EF0D  F016         	goto	l4295
  2580   002C3C                     l4723:
  2581                           
  2582                           ; Switch size 1, requested type "simple"
  2583                           ; Number of cases is 2, Range of values is 1 to 2
  2584                           ; switch strategies available:
  2585                           ; Name         Instructions Cycles
  2586                           ; simple_byte            7     4 (average)
  2587                           ;	Chosen strategy is simple_byte
  2588   002C3C  504F               	movf	??_iPWMSetDuty^0,w,c
  2589   002C3E  0A01               	xorlw	1	; case 1
  2590   002C40  B4D8               	btfsc	status,2,c
  2591   002C42  EF01  F016         	goto	l4291
  2592   002C46  0A03               	xorlw	3	; case 2
  2593   002C48  B4D8               	btfsc	status,2,c
  2594   002C4A  EF07  F016         	goto	l4293
  2595   002C4E  EF0D  F016         	goto	l4295
  2596   002C52                     l4303:
  2597                           
  2598                           ;pwm.c: 68:         return PWM_ERROR;
  2599   002C52  0E0B               	movlw	11
  2600   002C54  6E4C               	movwf	(?_iPWMSetDuty+1)^0,c
  2601   002C56  0EB8               	movlw	184
  2602   002C58  6E4B               	movwf	?_iPWMSetDuty^0,c
  2603   002C5A  EF33  F016         	goto	l148
  2604   002C5E                     l4307:
  2605                           
  2606                           ;pwm.c: 70:     return PWM_OK;
  2607   002C5E  0E00               	movlw	0
  2608   002C60  6E4C               	movwf	(?_iPWMSetDuty+1)^0,c
  2609   002C62  0E00               	movlw	0
  2610   002C64  6E4B               	movwf	?_iPWMSetDuty^0,c
  2611   002C66                     l148:
  2612   002C66  0012               	return		;funcret
  2613   002C68                     __end_of_iPWMSetDuty:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _iAnalogRead *****************
  2617 ;; Defined at:
  2618 ;;		line 43 in file "adc.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  iChannel        2    0[COMRAM] int 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  2    0[COMRAM] int 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2632 ;;      Params:         2       0       0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0       0       0
  2634 ;;      Temps:          2       0       0       0       0       0       0
  2635 ;;      Totals:         4       0       0       0       0       0       0
  2636 ;;Total ram usage:        4 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; Hardware stack levels required when called: 1
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_SystemControl
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text15
  2647   0036E8                     __ptext15:
  2648                           	callstack 0
  2649   0036E8                     _iAnalogRead:
  2650                           	callstack 28
  2651   0036E8                     
  2652                           ;adc.c: 45:     if(iChannel < 0 || iChannel > 3) {
  2653   0036E8  BE02               	btfsc	(iAnalogRead@iChannel+1)^0,7,c
  2654   0036EA  EF79  F01B         	goto	u4491
  2655   0036EE  EF7B  F01B         	goto	u4490
  2656   0036F2                     u4491:
  2657   0036F2  EF89  F01B         	goto	l4275
  2658   0036F6                     u4490:
  2659   0036F6  BE02               	btfsc	(iAnalogRead@iChannel+1)^0,7,c
  2660   0036F8  EF87  F01B         	goto	u4501
  2661   0036FC  5002               	movf	(iAnalogRead@iChannel+1)^0,w,c
  2662   0036FE  E109               	bnz	u4500
  2663   003700  0E04               	movlw	4
  2664   003702  5C01               	subwf	iAnalogRead@iChannel^0,w,c
  2665   003704  A0D8               	btfss	status,0,c
  2666   003706  EF87  F01B         	goto	u4501
  2667   00370A  EF89  F01B         	goto	u4500
  2668   00370E                     u4501:
  2669   00370E  EF8F  F01B         	goto	l4279
  2670   003712                     u4500:
  2671   003712                     l4275:
  2672                           
  2673                           ;adc.c: 46:         return ADC_INV_PARAM;
  2674   003712  0E07               	movlw	7
  2675   003714  6E02               	movwf	(?_iAnalogRead+1)^0,c
  2676   003716  0ED1               	movlw	209
  2677   003718  6E01               	movwf	?_iAnalogRead^0,c
  2678   00371A  EFA5  F01B         	goto	l110
  2679   00371E                     l4279:
  2680                           
  2681                           ;adc.c: 49:     ADCON0 |= (iChannel << 4);
  2682   00371E  3801               	swapf	iAnalogRead@iChannel^0,w,c	;volatile
  2683   003720  0BF0               	andlw	240
  2684   003722  12C2               	iorwf	194,f,c	;volatile
  2685   003724                     
  2686                           ;adc.c: 52:     GO_nDONE = 1;
  2687   003724  82C2               	bsf	4034,1,c	;volatile
  2688   003726                     l111:
  2689                           
  2690                           ;adc.c: 54:     while (GO_nDONE) {
  2691   003726  B2C2               	btfsc	4034,1,c	;volatile
  2692   003728  EF98  F01B         	goto	u4511
  2693   00372C  EF9A  F01B         	goto	u4510
  2694   003730                     u4511:
  2695   003730  EF93  F01B         	goto	l111
  2696   003734                     u4510:
  2697   003734                     
  2698                           ;adc.c: 56:     return ((ADRESH << 8 ) | ADRESL);
  2699   003734  50C3               	movf	195,w,c	;volatile
  2700   003736  CFC4 F003          	movff	4036,??_iAnalogRead	;volatile
  2701   00373A  6A04               	clrf	(??_iAnalogRead+1)^0,c
  2702   00373C  C003  F004         	movff	??_iAnalogRead,??_iAnalogRead+1
  2703   003740  6A03               	clrf	??_iAnalogRead^0,c
  2704   003742  1003               	iorwf	??_iAnalogRead^0,w,c
  2705   003744  6E01               	movwf	?_iAnalogRead^0,c
  2706   003746  5004               	movf	(??_iAnalogRead+1)^0,w,c
  2707   003748  6E02               	movwf	(?_iAnalogRead+1)^0,c
  2708   00374A                     l110:
  2709   00374A  0012               	return		;funcret
  2710   00374C                     __end_of_iAnalogRead:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _fGetVoltage *****************
  2714 ;; Defined at:
  2715 ;;		line 44 in file "main.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  iValue          2   64[COMRAM] int 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;		None
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  4   64[COMRAM] float 
  2722 ;; Registers used:
  2723 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2729 ;;      Params:         4       0       0       0       0       0       0
  2730 ;;      Locals:         0       0       0       0       0       0       0
  2731 ;;      Temps:          0       0       0       0       0       0       0
  2732 ;;      Totals:         4       0       0       0       0       0       0
  2733 ;;Total ram usage:        4 bytes
  2734 ;; Hardware stack levels used: 1
  2735 ;; Hardware stack levels required when called: 2
  2736 ;; This function calls:
  2737 ;;		___fldiv
  2738 ;;		___flmul
  2739 ;;		___xxtofl
  2740 ;; This function is called by:
  2741 ;;		_SystemControl
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text16
  2746   003406                     __ptext16:
  2747                           	callstack 0
  2748   003406                     _fGetVoltage:
  2749                           	callstack 27
  2750   003406                     
  2751                           ;main.c: 45:     return (5 * (float)iValue) / (float)1023;
  2752   003406  0E00               	movlw	0
  2753   003408  6E2C               	movwf	___flmul@a^0,c
  2754   00340A  0E00               	movlw	0
  2755   00340C  6E2D               	movwf	(___flmul@a+1)^0,c
  2756   00340E  0EA0               	movlw	160
  2757   003410  6E2E               	movwf	(___flmul@a+2)^0,c
  2758   003412  0E40               	movlw	64
  2759   003414  6E2F               	movwf	(___flmul@a+3)^0,c
  2760   003416  C041  F001         	movff	fGetVoltage@iValue,___xxtofl@val
  2761   00341A  C042  F002         	movff	fGetVoltage@iValue+1,___xxtofl@val+1
  2762   00341E  0E00               	movlw	0
  2763   003420  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2764   003422  0EFF               	movlw	-1
  2765   003424  6E03               	movwf	(___xxtofl@val+2)^0,c
  2766   003426  6E04               	movwf	(___xxtofl@val+3)^0,c
  2767   003428  0E01               	movlw	1
  2768   00342A  EC47  F011         	call	___xxtofl
  2769   00342E  C001  F028         	movff	?___xxtofl,___flmul@b
  2770   003432  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2771   003436  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2772   00343A  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2773   00343E  EC99  F00A         	call	___flmul	;wreg free
  2774   003442  C028  F00F         	movff	?___flmul,___fldiv@b
  2775   003446  C029  F010         	movff	?___flmul+1,___fldiv@b+1
  2776   00344A  C02A  F011         	movff	?___flmul+2,___fldiv@b+2
  2777   00344E  C02B  F012         	movff	?___flmul+3,___fldiv@b+3
  2778   003452  0E00               	movlw	0
  2779   003454  6E13               	movwf	___fldiv@a^0,c
  2780   003456  0EC0               	movlw	192
  2781   003458  6E14               	movwf	(___fldiv@a+1)^0,c
  2782   00345A  0E7F               	movlw	127
  2783   00345C  6E15               	movwf	(___fldiv@a+2)^0,c
  2784   00345E  0E44               	movlw	68
  2785   003460  6E16               	movwf	(___fldiv@a+3)^0,c
  2786   003462  ECAE  F00C         	call	___fldiv	;wreg free
  2787   003466  C00F  F041         	movff	?___fldiv,?_fGetVoltage
  2788   00346A  C010  F042         	movff	?___fldiv+1,?_fGetVoltage+1
  2789   00346E  C011  F043         	movff	?___fldiv+2,?_fGetVoltage+2
  2790   003472  C012  F044         	movff	?___fldiv+3,?_fGetVoltage+3
  2791   003476  0012               	return		;funcret
  2792   003478                     __end_of_fGetVoltage:
  2793                           	callstack 0
  2794                           
  2795 ;; *************** function _fGetPercentDuty *****************
  2796 ;; Defined at:
  2797 ;;		line 48 in file "main.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  iValue          2   64[COMRAM] int 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  4   64[COMRAM] float 
  2804 ;; Registers used:
  2805 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2811 ;;      Params:         4       0       0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0
  2814 ;;      Totals:         4       0       0       0       0       0       0
  2815 ;;Total ram usage:        4 bytes
  2816 ;; Hardware stack levels used: 1
  2817 ;; Hardware stack levels required when called: 2
  2818 ;; This function calls:
  2819 ;;		___fldiv
  2820 ;;		___flmul
  2821 ;;		___xxtofl
  2822 ;; This function is called by:
  2823 ;;		_SystemControl
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text17
  2828   003478                     __ptext17:
  2829                           	callstack 0
  2830   003478                     _fGetPercentDuty:
  2831                           	callstack 27
  2832   003478                     
  2833                           ;main.c: 49:     return (100 * (float)iValue) / (float)1023;
  2834   003478  0E00               	movlw	0
  2835   00347A  6E2C               	movwf	___flmul@a^0,c
  2836   00347C  0E00               	movlw	0
  2837   00347E  6E2D               	movwf	(___flmul@a+1)^0,c
  2838   003480  0EC8               	movlw	200
  2839   003482  6E2E               	movwf	(___flmul@a+2)^0,c
  2840   003484  0E42               	movlw	66
  2841   003486  6E2F               	movwf	(___flmul@a+3)^0,c
  2842   003488  C041  F001         	movff	fGetPercentDuty@iValue,___xxtofl@val
  2843   00348C  C042  F002         	movff	fGetPercentDuty@iValue+1,___xxtofl@val+1
  2844   003490  0E00               	movlw	0
  2845   003492  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2846   003494  0EFF               	movlw	-1
  2847   003496  6E03               	movwf	(___xxtofl@val+2)^0,c
  2848   003498  6E04               	movwf	(___xxtofl@val+3)^0,c
  2849   00349A  0E01               	movlw	1
  2850   00349C  EC47  F011         	call	___xxtofl
  2851   0034A0  C001  F028         	movff	?___xxtofl,___flmul@b
  2852   0034A4  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2853   0034A8  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2854   0034AC  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2855   0034B0  EC99  F00A         	call	___flmul	;wreg free
  2856   0034B4  C028  F00F         	movff	?___flmul,___fldiv@b
  2857   0034B8  C029  F010         	movff	?___flmul+1,___fldiv@b+1
  2858   0034BC  C02A  F011         	movff	?___flmul+2,___fldiv@b+2
  2859   0034C0  C02B  F012         	movff	?___flmul+3,___fldiv@b+3
  2860   0034C4  0E00               	movlw	0
  2861   0034C6  6E13               	movwf	___fldiv@a^0,c
  2862   0034C8  0EC0               	movlw	192
  2863   0034CA  6E14               	movwf	(___fldiv@a+1)^0,c
  2864   0034CC  0E7F               	movlw	127
  2865   0034CE  6E15               	movwf	(___fldiv@a+2)^0,c
  2866   0034D0  0E44               	movlw	68
  2867   0034D2  6E16               	movwf	(___fldiv@a+3)^0,c
  2868   0034D4  ECAE  F00C         	call	___fldiv	;wreg free
  2869   0034D8  C00F  F041         	movff	?___fldiv,?_fGetPercentDuty
  2870   0034DC  C010  F042         	movff	?___fldiv+1,?_fGetPercentDuty+1
  2871   0034E0  C011  F043         	movff	?___fldiv+2,?_fGetPercentDuty+2
  2872   0034E4  C012  F044         	movff	?___fldiv+3,?_fGetPercentDuty+3
  2873   0034E8  0012               	return		;funcret
  2874   0034EA                     __end_of_fGetPercentDuty:
  2875                           	callstack 0
  2876                           
  2877 ;; *************** function ___xxtofl *****************
  2878 ;; Defined at:
  2879 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  sign            1    wreg     unsigned char 
  2882 ;;  val             4    0[COMRAM] long 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  sign            1    8[COMRAM] unsigned char 
  2885 ;;  arg             4   10[COMRAM] unsigned long 
  2886 ;;  exp             1    9[COMRAM] unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  4    0[COMRAM] unsigned char 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2896 ;;      Params:         4       0       0       0       0       0       0
  2897 ;;      Locals:         6       0       0       0       0       0       0
  2898 ;;      Temps:          4       0       0       0       0       0       0
  2899 ;;      Totals:        14       0       0       0       0       0       0
  2900 ;;Total ram usage:       14 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 1
  2903 ;; This function calls:
  2904 ;;		Nothing
  2905 ;; This function is called by:
  2906 ;;		_fGetVoltage
  2907 ;;		_fGetPercentDuty
  2908 ;;		_iPWMSetDuty
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text18
  2913   00228E                     __ptext18:
  2914                           	callstack 0
  2915   00228E                     ___xxtofl:
  2916                           	callstack 27
  2917                           
  2918                           ;incstack = 0
  2919                           ;___xxtofl@sign stored from wreg
  2920   00228E  6E09               	movwf	___xxtofl@sign^0,c
  2921   002290  5009               	movf	___xxtofl@sign^0,w,c
  2922   002292  B4D8               	btfsc	status,2,c
  2923   002294  EF4E  F011         	goto	u4391
  2924   002298  EF50  F011         	goto	u4390
  2925   00229C                     u4391:
  2926   00229C  EF72  F011         	goto	l904
  2927   0022A0                     u4390:
  2928   0022A0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2929   0022A2  EF57  F011         	goto	u4400
  2930   0022A6  EF55  F011         	goto	u4401
  2931   0022AA                     u4401:
  2932   0022AA  EF72  F011         	goto	l904
  2933   0022AE                     u4400:
  2934   0022AE  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2935   0022B2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2936   0022B6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2937   0022BA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2938   0022BE  1E05               	comf	??___xxtofl^0,f,c
  2939   0022C0  1E06               	comf	(??___xxtofl+1)^0,f,c
  2940   0022C2  1E07               	comf	(??___xxtofl+2)^0,f,c
  2941   0022C4  1E08               	comf	(??___xxtofl+3)^0,f,c
  2942   0022C6  2A05               	incf	??___xxtofl^0,f,c
  2943   0022C8  0E00               	movlw	0
  2944   0022CA  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2945   0022CC  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2946   0022CE  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2947   0022D0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2948   0022D4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2949   0022D8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2950   0022DC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2951   0022E0  EF7A  F011         	goto	l4187
  2952   0022E4                     l904:
  2953   0022E4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2954   0022E8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2955   0022EC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2956   0022F0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2957   0022F4                     l4187:
  2958   0022F4  5001               	movf	___xxtofl@val^0,w,c
  2959   0022F6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2960   0022F8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2961   0022FA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2962   0022FC  A4D8               	btfss	status,2,c
  2963   0022FE  EF83  F011         	goto	u4411
  2964   002302  EF85  F011         	goto	u4410
  2965   002306                     u4411:
  2966   002306  EF8F  F011         	goto	l4193
  2967   00230A                     u4410:
  2968   00230A  0E00               	movlw	0
  2969   00230C  6E01               	movwf	?___xxtofl^0,c
  2970   00230E  0E00               	movlw	0
  2971   002310  6E02               	movwf	(?___xxtofl+1)^0,c
  2972   002312  0E00               	movlw	0
  2973   002314  6E03               	movwf	(?___xxtofl+2)^0,c
  2974   002316  0E00               	movlw	0
  2975   002318  6E04               	movwf	(?___xxtofl+3)^0,c
  2976   00231A  EF20  F012         	goto	l907
  2977   00231E                     l4193:
  2978   00231E  0E96               	movlw	150
  2979   002320  6E0A               	movwf	___xxtofl@exp^0,c
  2980   002322  EF99  F011         	goto	l4197
  2981   002326                     l4195:
  2982   002326  2A0A               	incf	___xxtofl@exp^0,f,c
  2983   002328  90D8               	bcf	status,0,c
  2984   00232A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2985   00232C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2986   00232E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2987   002330  320B               	rrcf	___xxtofl@arg^0,f,c
  2988   002332                     l4197:
  2989   002332  0E00               	movlw	0
  2990   002334  140B               	andwf	___xxtofl@arg^0,w,c
  2991   002336  6E05               	movwf	??___xxtofl^0,c
  2992   002338  0E00               	movlw	0
  2993   00233A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2994   00233C  6E06               	movwf	(??___xxtofl+1)^0,c
  2995   00233E  0E00               	movlw	0
  2996   002340  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2997   002342  6E07               	movwf	(??___xxtofl+2)^0,c
  2998   002344  0EFE               	movlw	254
  2999   002346  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3000   002348  6E08               	movwf	(??___xxtofl+3)^0,c
  3001   00234A  5005               	movf	??___xxtofl^0,w,c
  3002   00234C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3003   00234E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3004   002350  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3005   002352  A4D8               	btfss	status,2,c
  3006   002354  EFAE  F011         	goto	u4421
  3007   002358  EFB0  F011         	goto	u4420
  3008   00235C                     u4421:
  3009   00235C  EF93  F011         	goto	l4195
  3010   002360                     u4420:
  3011   002360  EFBE  F011         	goto	l911
  3012   002364                     l4199:
  3013   002364  2A0A               	incf	___xxtofl@exp^0,f,c
  3014   002366  0E01               	movlw	1
  3015   002368  260B               	addwf	___xxtofl@arg^0,f,c
  3016   00236A  0E00               	movlw	0
  3017   00236C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3018   00236E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3019   002370  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3020   002372  90D8               	bcf	status,0,c
  3021   002374  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3022   002376  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3023   002378  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3024   00237A  320B               	rrcf	___xxtofl@arg^0,f,c
  3025   00237C                     l911:
  3026   00237C  0E00               	movlw	0
  3027   00237E  140B               	andwf	___xxtofl@arg^0,w,c
  3028   002380  6E05               	movwf	??___xxtofl^0,c
  3029   002382  0E00               	movlw	0
  3030   002384  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3031   002386  6E06               	movwf	(??___xxtofl+1)^0,c
  3032   002388  0E00               	movlw	0
  3033   00238A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3034   00238C  6E07               	movwf	(??___xxtofl+2)^0,c
  3035   00238E  0EFF               	movlw	255
  3036   002390  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3037   002392  6E08               	movwf	(??___xxtofl+3)^0,c
  3038   002394  5005               	movf	??___xxtofl^0,w,c
  3039   002396  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3040   002398  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3041   00239A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3042   00239C  A4D8               	btfss	status,2,c
  3043   00239E  EFD3  F011         	goto	u4431
  3044   0023A2  EFD5  F011         	goto	u4430
  3045   0023A6                     u4431:
  3046   0023A6  EFB2  F011         	goto	l4199
  3047   0023AA                     u4430:
  3048   0023AA  EFDD  F011         	goto	l4207
  3049   0023AE                     l4205:
  3050   0023AE  060A               	decf	___xxtofl@exp^0,f,c
  3051   0023B0  90D8               	bcf	status,0,c
  3052   0023B2  360B               	rlcf	___xxtofl@arg^0,f,c
  3053   0023B4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3054   0023B6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3055   0023B8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3056   0023BA                     l4207:
  3057   0023BA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3058   0023BC  EFE2  F011         	goto	u4441
  3059   0023C0  EFE4  F011         	goto	u4440
  3060   0023C4                     u4441:
  3061   0023C4  EFEC  F011         	goto	l918
  3062   0023C8                     u4440:
  3063   0023C8  0E02               	movlw	2
  3064   0023CA  600A               	cpfslt	___xxtofl@exp^0,c
  3065   0023CC  EFEA  F011         	goto	u4451
  3066   0023D0  EFEC  F011         	goto	u4450
  3067   0023D4                     u4451:
  3068   0023D4  EFD7  F011         	goto	l4205
  3069   0023D8                     u4450:
  3070   0023D8                     l918:
  3071   0023D8  B00A               	btfsc	___xxtofl@exp^0,0,c
  3072   0023DA  EFF1  F011         	goto	u4461
  3073   0023DE  EFF3  F011         	goto	u4460
  3074   0023E2                     u4461:
  3075   0023E2  EFF4  F011         	goto	l4213
  3076   0023E6                     u4460:
  3077   0023E6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3078   0023E8                     l4213:
  3079   0023E8  90D8               	bcf	status,0,c
  3080   0023EA  320A               	rrcf	___xxtofl@exp^0,f,c
  3081   0023EC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3082   0023F0  6A06               	clrf	(??___xxtofl+1)^0,c
  3083   0023F2  6A07               	clrf	(??___xxtofl+2)^0,c
  3084   0023F4  6A08               	clrf	(??___xxtofl+3)^0,c
  3085   0023F6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3086   0023FA  6A07               	clrf	(??___xxtofl+2)^0,c
  3087   0023FC  6A06               	clrf	(??___xxtofl+1)^0,c
  3088   0023FE  6A05               	clrf	??___xxtofl^0,c
  3089   002400  5005               	movf	??___xxtofl^0,w,c
  3090   002402  120B               	iorwf	___xxtofl@arg^0,f,c
  3091   002404  5006               	movf	(??___xxtofl+1)^0,w,c
  3092   002406  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3093   002408  5007               	movf	(??___xxtofl+2)^0,w,c
  3094   00240A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3095   00240C  5008               	movf	(??___xxtofl+3)^0,w,c
  3096   00240E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3097   002410  5009               	movf	___xxtofl@sign^0,w,c
  3098   002412  B4D8               	btfsc	status,2,c
  3099   002414  EF0E  F012         	goto	u4471
  3100   002418  EF10  F012         	goto	u4470
  3101   00241C                     u4471:
  3102   00241C  EF18  F012         	goto	l4223
  3103   002420                     u4470:
  3104   002420  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3105   002422  EF17  F012         	goto	u4480
  3106   002426  EF15  F012         	goto	u4481
  3107   00242A                     u4481:
  3108   00242A  EF18  F012         	goto	l4223
  3109   00242E                     u4480:
  3110   00242E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3111   002430                     l4223:
  3112   002430  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3113   002434  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3114   002438  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3115   00243C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3116   002440                     l907:
  3117   002440  0012               	return		;funcret
  3118   002442                     __end_of___xxtofl:
  3119                           	callstack 0
  3120                           
  3121 ;; *************** function _changeBuzzerState *****************
  3122 ;; Defined at:
  3123 ;;		line 71 in file "outputs.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  fState          1    wreg     _Bool 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  fState          1    7[COMRAM] _Bool 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3137 ;;      Params:         0       0       0       0       0       0       0
  3138 ;;      Locals:         1       0       0       0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0
  3140 ;;      Totals:         1       0       0       0       0       0       0
  3141 ;;Total ram usage:        1 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; Hardware stack levels required when called: 2
  3144 ;; This function calls:
  3145 ;;		_digitalWrite
  3146 ;; This function is called by:
  3147 ;;		_SystemControl
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text19
  3152   003B9E                     __ptext19:
  3153                           	callstack 0
  3154   003B9E                     _changeBuzzerState:
  3155                           	callstack 27
  3156                           
  3157                           ;incstack = 0
  3158                           ;changeBuzzerState@fState stored from wreg
  3159   003B9E  6E08               	movwf	changeBuzzerState@fState^0,c
  3160   003BA0                     
  3161                           ;outputs.c: 72:     digitalWrite(&LATC, 1, fState);
  3162   003BA0  0E8B               	movlw	139
  3163   003BA2  6E01               	movwf	digitalWrite@pcLat^0,c
  3164   003BA4  0E0F               	movlw	15
  3165   003BA6  6E02               	movwf	(digitalWrite@pcLat+1)^0,c
  3166   003BA8  0E01               	movlw	1
  3167   003BAA  6E03               	movwf	digitalWrite@uiPin^0,c
  3168   003BAC  C008  F004         	movff	changeBuzzerState@fState,digitalWrite@fState
  3169   003BB0  ECA6  F01B         	call	_digitalWrite	;wreg free
  3170   003BB4  0012               	return		;funcret
  3171   003BB6                     __end_of_changeBuzzerState:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function _digitalWrite *****************
  3175 ;; Defined at:
  3176 ;;		line 28 in file "outputs.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  pcLat           2    0[COMRAM] PTR volatile unsigned ch
  3179 ;;		 -> LATC(1), LATB(1), 
  3180 ;;  uiPin           1    2[COMRAM] unsigned char 
  3181 ;;  fState          1    3[COMRAM] _Bool 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3193 ;;      Params:         4       0       0       0       0       0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0
  3195 ;;      Temps:          3       0       0       0       0       0       0
  3196 ;;      Totals:         7       0       0       0       0       0       0
  3197 ;;Total ram usage:        7 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 1
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_configOutputs
  3204 ;;		_setLedsOn
  3205 ;;		_changeBuzzerState
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text20
  3210   00374C                     __ptext20:
  3211                           	callstack 0
  3212   00374C                     _digitalWrite:
  3213                           	callstack 27
  3214   00374C                     
  3215                           ;outputs.c: 29:     if (fState) {
  3216   00374C  5004               	movf	digitalWrite@fState^0,w,c
  3217   00374E  B4D8               	btfsc	status,2,c
  3218   003750  EFAC  F01B         	goto	u4331
  3219   003754  EFAE  F01B         	goto	u4330
  3220   003758                     u4331:
  3221   003758  EFC2  F01B         	goto	l4175
  3222   00375C                     u4330:
  3223   00375C                     
  3224                           ;outputs.c: 31:         *pcLat |= (1 << uiPin);
  3225   00375C  C003  F005         	movff	digitalWrite@uiPin,??_digitalWrite
  3226   003760  0E01               	movlw	1
  3227   003762  6E06               	movwf	(??_digitalWrite+1)^0,c
  3228   003764  2A05               	incf	??_digitalWrite^0,f,c
  3229   003766  EFB7  F01B         	goto	u4344
  3230   00376A                     u4345:
  3231   00376A  90D8               	bcf	status,0,c
  3232   00376C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3233   00376E                     u4344:
  3234   00376E  2E05               	decfsz	??_digitalWrite^0,f,c
  3235   003770  EFB5  F01B         	goto	u4345
  3236   003774  C001  FFD9         	movff	digitalWrite@pcLat,fsr2l
  3237   003778  C002  FFDA         	movff	digitalWrite@pcLat+1,fsr2h
  3238   00377C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3239   00377E  12DF               	iorwf	indf2,f,c
  3240                           
  3241                           ;outputs.c: 32:     } else {
  3242   003780  EFD7  F01B         	goto	l169
  3243   003784                     l4175:
  3244                           
  3245                           ;outputs.c: 34:         *pcLat &= ~(1 << uiPin);
  3246   003784  C003  F005         	movff	digitalWrite@uiPin,??_digitalWrite
  3247   003788  0E01               	movlw	1
  3248   00378A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3249   00378C  2A05               	incf	??_digitalWrite^0,f,c
  3250   00378E  EFCB  F01B         	goto	u4354
  3251   003792                     u4355:
  3252   003792  90D8               	bcf	status,0,c
  3253   003794  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3254   003796                     u4354:
  3255   003796  2E05               	decfsz	??_digitalWrite^0,f,c
  3256   003798  EFC9  F01B         	goto	u4355
  3257   00379C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3258   00379E  0AFF               	xorlw	255
  3259   0037A0  6E07               	movwf	(??_digitalWrite+2)^0,c
  3260   0037A2  C001  FFD9         	movff	digitalWrite@pcLat,fsr2l
  3261   0037A6  C002  FFDA         	movff	digitalWrite@pcLat+1,fsr2h
  3262   0037AA  5007               	movf	(??_digitalWrite+2)^0,w,c
  3263   0037AC  16DF               	andwf	indf2,f,c
  3264   0037AE                     l169:
  3265   0037AE  0012               	return		;funcret
  3266   0037B0                     __end_of_digitalWrite:
  3267                           	callstack 0
  3268                           
  3269 ;; *************** function ___awdiv *****************
  3270 ;; Defined at:
  3271 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  dividend        2    0[COMRAM] int 
  3274 ;;  divisor         2    2[COMRAM] int 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  quotient        2    6[COMRAM] int 
  3277 ;;  sign            1    5[COMRAM] unsigned char 
  3278 ;;  counter         1    4[COMRAM] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  2    0[COMRAM] int 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3288 ;;      Params:         4       0       0       0       0       0       0
  3289 ;;      Locals:         4       0       0       0       0       0       0
  3290 ;;      Temps:          0       0       0       0       0       0       0
  3291 ;;      Totals:         8       0       0       0       0       0       0
  3292 ;;Total ram usage:        8 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 1
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_SystemControl
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text21
  3303   002E30                     __ptext21:
  3304                           	callstack 0
  3305   002E30                     ___awdiv:
  3306                           	callstack 28
  3307   002E30  0E00               	movlw	0
  3308   002E32  6E06               	movwf	___awdiv@sign^0,c
  3309   002E34  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3310   002E36  EF21  F017         	goto	u4600
  3311   002E3A  EF1F  F017         	goto	u4601
  3312   002E3E                     u4601:
  3313   002E3E  EF27  F017         	goto	l4413
  3314   002E42                     u4600:
  3315   002E42  6C03               	negf	___awdiv@divisor^0,c
  3316   002E44  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3317   002E46  B0D8               	btfsc	status,0,c
  3318   002E48  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3319   002E4A  0E01               	movlw	1
  3320   002E4C  6E06               	movwf	___awdiv@sign^0,c
  3321   002E4E                     l4413:
  3322   002E4E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3323   002E50  EF2E  F017         	goto	u4610
  3324   002E54  EF2C  F017         	goto	u4611
  3325   002E58                     u4611:
  3326   002E58  EF34  F017         	goto	l4419
  3327   002E5C                     u4610:
  3328   002E5C  6C01               	negf	___awdiv@dividend^0,c
  3329   002E5E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3330   002E60  B0D8               	btfsc	status,0,c
  3331   002E62  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3332   002E64  0E01               	movlw	1
  3333   002E66  1A06               	xorwf	___awdiv@sign^0,f,c
  3334   002E68                     l4419:
  3335   002E68  0E00               	movlw	0
  3336   002E6A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3337   002E6C  0E00               	movlw	0
  3338   002E6E  6E07               	movwf	___awdiv@quotient^0,c
  3339   002E70  5003               	movf	___awdiv@divisor^0,w,c
  3340   002E72  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3341   002E74  B4D8               	btfsc	status,2,c
  3342   002E76  EF3F  F017         	goto	u4621
  3343   002E7A  EF41  F017         	goto	u4620
  3344   002E7E                     u4621:
  3345   002E7E  EF69  F017         	goto	l4441
  3346   002E82                     u4620:
  3347   002E82  0E01               	movlw	1
  3348   002E84  6E05               	movwf	___awdiv@counter^0,c
  3349   002E86  EF49  F017         	goto	l4427
  3350   002E8A                     l4425:
  3351   002E8A  90D8               	bcf	status,0,c
  3352   002E8C  3603               	rlcf	___awdiv@divisor^0,f,c
  3353   002E8E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3354   002E90  2A05               	incf	___awdiv@counter^0,f,c
  3355   002E92                     l4427:
  3356   002E92  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3357   002E94  EF4E  F017         	goto	u4631
  3358   002E98  EF50  F017         	goto	u4630
  3359   002E9C                     u4631:
  3360   002E9C  EF45  F017         	goto	l4425
  3361   002EA0                     u4630:
  3362   002EA0                     l4429:
  3363   002EA0  90D8               	bcf	status,0,c
  3364   002EA2  3607               	rlcf	___awdiv@quotient^0,f,c
  3365   002EA4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3366   002EA6  5003               	movf	___awdiv@divisor^0,w,c
  3367   002EA8  5C01               	subwf	___awdiv@dividend^0,w,c
  3368   002EAA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3369   002EAC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3370   002EAE  A0D8               	btfss	status,0,c
  3371   002EB0  EF5C  F017         	goto	u4641
  3372   002EB4  EF5E  F017         	goto	u4640
  3373   002EB8                     u4641:
  3374   002EB8  EF63  F017         	goto	l4437
  3375   002EBC                     u4640:
  3376   002EBC  5003               	movf	___awdiv@divisor^0,w,c
  3377   002EBE  5E01               	subwf	___awdiv@dividend^0,f,c
  3378   002EC0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3379   002EC2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3380   002EC4  8007               	bsf	___awdiv@quotient^0,0,c
  3381   002EC6                     l4437:
  3382   002EC6  90D8               	bcf	status,0,c
  3383   002EC8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3384   002ECA  3203               	rrcf	___awdiv@divisor^0,f,c
  3385   002ECC  2E05               	decfsz	___awdiv@counter^0,f,c
  3386   002ECE  EF50  F017         	goto	l4429
  3387   002ED2                     l4441:
  3388   002ED2  5006               	movf	___awdiv@sign^0,w,c
  3389   002ED4  B4D8               	btfsc	status,2,c
  3390   002ED6  EF6F  F017         	goto	u4651
  3391   002EDA  EF71  F017         	goto	u4650
  3392   002EDE                     u4651:
  3393   002EDE  EF75  F017         	goto	l4445
  3394   002EE2                     u4650:
  3395   002EE2  6C07               	negf	___awdiv@quotient^0,c
  3396   002EE4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3397   002EE6  B0D8               	btfsc	status,0,c
  3398   002EE8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3399   002EEA                     l4445:
  3400   002EEA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3401   002EEE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3402   002EF2  0012               	return		;funcret
  3403   002EF4                     __end_of___awdiv:
  3404                           	callstack 0
  3405                           
  3406 ;; *************** function _DispSystemParam *****************
  3407 ;; Defined at:
  3408 ;;		line 77 in file "main.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  fAdcVoltage     4   71[BANK0 ] float 
  3411 ;;  fPercentDuty    4   75[BANK0 ] float 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  szPercentDut   16   95[BANK0 ] unsigned char [16]
  3414 ;;  szAdcVoltage   16   79[BANK0 ] unsigned char [16]
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3424 ;;      Params:         0       8       0       0       0       0       0
  3425 ;;      Locals:         0      32       0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0
  3427 ;;      Totals:         0      40       0       0       0       0       0
  3428 ;;Total ram usage:       40 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 9
  3431 ;; This function calls:
  3432 ;;		_LcdPutStr
  3433 ;;		_LcdSetCursor
  3434 ;;		_memset
  3435 ;;		_snprintf
  3436 ;; This function is called by:
  3437 ;;		_SystemControl
  3438 ;;		_setup
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text22
  3443   002EF4                     __ptext22:
  3444                           	callstack 0
  3445   002EF4                     _DispSystemParam:
  3446                           	callstack 20
  3447   002EF4                     
  3448                           ;main.c: 78:     char szAdcVoltageDisp[15 + 1];;main.c: 79:     char szPercentDutyDisp[1
      +                          5 + 1];;main.c: 82:     memset(szAdcVoltageDisp, '\0', sizeof (szAdcVoltageDisp));
  3449   002EF4  0ECF               	movlw	low DispSystemParam@szAdcVoltageDisp
  3450   002EF6  6E01               	movwf	memset@dest^0,c
  3451   002EF8  0E00               	movlw	high DispSystemParam@szAdcVoltageDisp
  3452   002EFA  6E02               	movwf	(memset@dest+1)^0,c
  3453   002EFC  0E00               	movlw	0
  3454   002EFE  6E04               	movwf	(memset@c+1)^0,c
  3455   002F00  0E00               	movlw	0
  3456   002F02  6E03               	movwf	memset@c^0,c
  3457   002F04  0E00               	movlw	0
  3458   002F06  6E06               	movwf	(memset@n+1)^0,c
  3459   002F08  0E10               	movlw	16
  3460   002F0A  6E05               	movwf	memset@n^0,c
  3461   002F0C  EC21  F012         	call	_memset	;wreg free
  3462                           
  3463                           ;main.c: 83:     memset(szPercentDutyDisp, '\0', sizeof (szPercentDutyDisp));
  3464   002F10  0EDF               	movlw	low DispSystemParam@szPercentDutyDisp
  3465   002F12  6E01               	movwf	memset@dest^0,c
  3466   002F14  0E00               	movlw	high DispSystemParam@szPercentDutyDisp
  3467   002F16  6E02               	movwf	(memset@dest+1)^0,c
  3468   002F18  0E00               	movlw	0
  3469   002F1A  6E04               	movwf	(memset@c+1)^0,c
  3470   002F1C  0E00               	movlw	0
  3471   002F1E  6E03               	movwf	memset@c^0,c
  3472   002F20  0E00               	movlw	0
  3473   002F22  6E06               	movwf	(memset@n+1)^0,c
  3474   002F24  0E10               	movlw	16
  3475   002F26  6E05               	movwf	memset@n^0,c
  3476   002F28  EC21  F012         	call	_memset	;wreg free
  3477   002F2C                     
  3478                           ;main.c: 86:     snprintf(szAdcVoltageDisp, sizeof (szAdcVoltageDisp), "ADC (V): %.1f",
  3479   002F2C  0ECF               	movlw	low DispSystemParam@szAdcVoltageDisp
  3480   002F2E  0100               	movlb	0	; () banked
  3481   002F30  6FAC               	movwf	snprintf@s& (0+255),b
  3482   002F32  0E00               	movlw	high DispSystemParam@szAdcVoltageDisp
  3483   002F34  6FAD               	movwf	(snprintf@s+1)& (0+255),b
  3484   002F36  0E00               	movlw	0
  3485   002F38  6FAF               	movwf	(snprintf@n+1)& (0+255),b
  3486   002F3A  0E10               	movlw	16
  3487   002F3C  6FAE               	movwf	snprintf@n& (0+255),b
  3488   002F3E  0E2E               	movlw	low STR_5
  3489   002F40  6FB0               	movwf	snprintf@fmt& (0+255),b
  3490   002F42  0E06               	movlw	high STR_5
  3491   002F44  6FB1               	movwf	(snprintf@fmt+1)& (0+255),b
  3492   002F46  C0C7  F0B2         	movff	DispSystemParam@fAdcVoltage,?_snprintf+6
  3493   002F4A  C0C8  F0B3         	movff	DispSystemParam@fAdcVoltage+1,?_snprintf+7
  3494   002F4E  C0C9  F0B4         	movff	DispSystemParam@fAdcVoltage+2,?_snprintf+8
  3495   002F52  C0CA  F0B5         	movff	DispSystemParam@fAdcVoltage+3,?_snprintf+9
  3496   002F56  EC2B  F014         	call	_snprintf	;wreg free
  3497   002F5A                     
  3498                           ;main.c: 88:     snprintf(szPercentDutyDisp, sizeof (szPercentDutyDisp), "Duty(%%): %.2f
      +                          ",
  3499   002F5A  0EDF               	movlw	low DispSystemParam@szPercentDutyDisp
  3500   002F5C  0100               	movlb	0	; () banked
  3501   002F5E  6FAC               	movwf	snprintf@s& (0+255),b
  3502   002F60  0E00               	movlw	high DispSystemParam@szPercentDutyDisp
  3503   002F62  6FAD               	movwf	(snprintf@s+1)& (0+255),b
  3504   002F64  0E00               	movlw	0
  3505   002F66  6FAF               	movwf	(snprintf@n+1)& (0+255),b
  3506   002F68  0E10               	movlw	16
  3507   002F6A  6FAE               	movwf	snprintf@n& (0+255),b
  3508   002F6C  0E01               	movlw	low STR_6
  3509   002F6E  6FB0               	movwf	snprintf@fmt& (0+255),b
  3510   002F70  0E06               	movlw	high STR_6
  3511   002F72  6FB1               	movwf	(snprintf@fmt+1)& (0+255),b
  3512   002F74  C0CB  F0B2         	movff	DispSystemParam@fPercentDuty,?_snprintf+6
  3513   002F78  C0CC  F0B3         	movff	DispSystemParam@fPercentDuty+1,?_snprintf+7
  3514   002F7C  C0CD  F0B4         	movff	DispSystemParam@fPercentDuty+2,?_snprintf+8
  3515   002F80  C0CE  F0B5         	movff	DispSystemParam@fPercentDuty+3,?_snprintf+9
  3516   002F84  EC2B  F014         	call	_snprintf	;wreg free
  3517   002F88                     
  3518                           ;main.c: 92:     LcdSetCursor(1, 1);
  3519   002F88  0E01               	movlw	1
  3520   002F8A  6E04               	movwf	LcdSetCursor@y^0,c
  3521   002F8C  0E01               	movlw	1
  3522   002F8E  ECDD  F01A         	call	_LcdSetCursor
  3523   002F92                     
  3524                           ;main.c: 93:     LcdPutStr(szAdcVoltageDisp);
  3525   002F92  0ECF               	movlw	low DispSystemParam@szAdcVoltageDisp
  3526   002F94  6E05               	movwf	LcdPutStr@str^0,c
  3527   002F96  0E00               	movlw	high DispSystemParam@szAdcVoltageDisp
  3528   002F98  6E06               	movwf	(LcdPutStr@str+1)^0,c
  3529   002F9A  ECC2  F018         	call	_LcdPutStr	;wreg free
  3530   002F9E                     
  3531                           ;main.c: 94:     LcdSetCursor(2, 1);
  3532   002F9E  0E01               	movlw	1
  3533   002FA0  6E04               	movwf	LcdSetCursor@y^0,c
  3534   002FA2  0E02               	movlw	2
  3535   002FA4  ECDD  F01A         	call	_LcdSetCursor
  3536   002FA8                     
  3537                           ;main.c: 95:     LcdPutStr(szPercentDutyDisp);
  3538   002FA8  0EDF               	movlw	low DispSystemParam@szPercentDutyDisp
  3539   002FAA  6E05               	movwf	LcdPutStr@str^0,c
  3540   002FAC  0E00               	movlw	high DispSystemParam@szPercentDutyDisp
  3541   002FAE  6E06               	movwf	(LcdPutStr@str+1)^0,c
  3542   002FB0  ECC2  F018         	call	_LcdPutStr	;wreg free
  3543   002FB4  0012               	return		;funcret
  3544   002FB6                     __end_of_DispSystemParam:
  3545                           	callstack 0
  3546                           
  3547 ;; *************** function _snprintf *****************
  3548 ;; Defined at:
  3549 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_snprintf.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  s               2   44[BANK0 ] PTR unsigned char 
  3552 ;;		 -> DispSystemParam@szPercentDutyDisp(16), DispSystemParam@szAdcVoltageDisp(16), 
  3553 ;;  n               2   46[BANK0 ] unsigned int 
  3554 ;;  fmt             2   48[BANK0 ] PTR const unsigned char 
  3555 ;;		 -> STR_6(15), STR_5(14), 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  f              11   60[BANK0 ] struct _IO_FILE
  3558 ;;  cnt             2   58[BANK0 ] int 
  3559 ;;  ap              2   56[BANK0 ] PTR void [1]
  3560 ;;		 -> ?_snprintf(2), 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  2   44[BANK0 ] int 
  3563 ;; Registers used:
  3564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3570 ;;      Params:         0      10       0       0       0       0       0
  3571 ;;      Locals:         0      17       0       0       0       0       0
  3572 ;;      Temps:          3       0       0       0       0       0       0
  3573 ;;      Totals:         3      27       0       0       0       0       0
  3574 ;;Total ram usage:       30 bytes
  3575 ;; Hardware stack levels used: 1
  3576 ;; Hardware stack levels required when called: 8
  3577 ;; This function calls:
  3578 ;;		_vfprintf
  3579 ;; This function is called by:
  3580 ;;		_DispSystemParam
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text23
  3585   002856                     __ptext23:
  3586                           	callstack 0
  3587   002856                     _snprintf:
  3588                           	callstack 20
  3589   002856  0E80               	movlw	128
  3590   002858  0100               	movlb	0	; () banked
  3591   00285A  5DAF               	subwf	(snprintf@n+1)& (0+255),w,b
  3592   00285C  A0D8               	btfss	status,0,c
  3593   00285E  EF33  F014         	goto	u4251
  3594   002862  EF35  F014         	goto	u4250
  3595   002866                     u4251:
  3596   002866  EF3C  F014         	goto	l4143
  3597   00286A                     u4250:
  3598   00286A                     
  3599                           ; BSR set to: 0
  3600   00286A  0E00               	movlw	0
  3601   00286C  0101               	movlb	1	; () banked
  3602   00286E  6F0F               	movwf	(_errno+1)& (0+255),b
  3603   002870  0E4B               	movlw	75
  3604   002872  6F0E               	movwf	_errno& (0+255),b
  3605   002874  EFAF  F014         	goto	l940
  3606   002878                     l4143:
  3607                           
  3608                           ; BSR set to: 0
  3609   002878  0EB2               	movlw	low (?_snprintf+6)
  3610   00287A  6FB8               	movwf	snprintf@ap& (0+255),b
  3611   00287C  0E00               	movlw	high (?_snprintf+6)
  3612   00287E  6FB9               	movwf	(snprintf@ap+1)& (0+255),b
  3613   002880  C0AC  F0BC         	movff	snprintf@s,snprintf@f
  3614   002884  C0AD  F0BD         	movff	snprintf@s+1,snprintf@f+1
  3615   002888  51AF               	movf	(snprintf@n+1)& (0+255),w,b
  3616   00288A  E109               	bnz	u4260
  3617   00288C  0E02               	movlw	2
  3618   00288E  5DAE               	subwf	snprintf@n& (0+255),w,b
  3619   002890  A0D8               	btfss	status,0,c
  3620   002892  EF4D  F014         	goto	u4261
  3621   002896  EF4F  F014         	goto	u4260
  3622   00289A                     u4261:
  3623   00289A  EF5B  F014         	goto	l4149
  3624   00289E                     u4260:
  3625   00289E                     
  3626                           ; BSR set to: 0
  3627   00289E  0EFF               	movlw	255
  3628   0028A0  25AE               	addwf	snprintf@n& (0+255),w,b
  3629   0028A2  6FC5               	movwf	(snprintf@f+9)& (0+255),b
  3630   0028A4  0EFF               	movlw	255
  3631   0028A6  21AF               	addwfc	(snprintf@n+1)& (0+255),w,b
  3632   0028A8  6FC6               	movwf	(snprintf@f+10)& (0+255),b
  3633   0028AA                     
  3634                           ; BSR set to: 0
  3635   0028AA  0E00               	movlw	0
  3636   0028AC  6FC0               	movwf	(snprintf@f+4)& (0+255),b
  3637   0028AE  0E00               	movlw	0
  3638   0028B0  6FBF               	movwf	(snprintf@f+3)& (0+255),b
  3639   0028B2  EF63  F014         	goto	l4151
  3640   0028B6                     l4149:
  3641                           
  3642                           ; BSR set to: 0
  3643   0028B6  0E00               	movlw	0
  3644   0028B8  6FC6               	movwf	(snprintf@f+10)& (0+255),b
  3645   0028BA  0E01               	movlw	1
  3646   0028BC  6FC5               	movwf	(snprintf@f+9)& (0+255),b
  3647   0028BE  0E00               	movlw	0
  3648   0028C0  6FC0               	movwf	(snprintf@f+4)& (0+255),b
  3649   0028C2  0E01               	movlw	1
  3650   0028C4  6FBF               	movwf	(snprintf@f+3)& (0+255),b
  3651   0028C6                     l4151:
  3652                           
  3653                           ; BSR set to: 0
  3654   0028C6  0EBC               	movlw	low snprintf@f
  3655   0028C8  6E6A               	movwf	vfprintf@fp^0,c
  3656   0028CA  0E00               	movlw	high snprintf@f
  3657   0028CC  6E6B               	movwf	(vfprintf@fp+1)^0,c
  3658   0028CE  C0B0  F06C         	movff	snprintf@fmt,vfprintf@fmt
  3659   0028D2  C0B1  F06D         	movff	snprintf@fmt+1,vfprintf@fmt+1
  3660   0028D6  0EB8               	movlw	low snprintf@ap
  3661   0028D8  6E6E               	movwf	vfprintf@ap^0,c
  3662   0028DA  0E00               	movlw	high snprintf@ap
  3663   0028DC  6E6F               	movwf	(vfprintf@ap+1)^0,c
  3664   0028DE  ECD8  F01B         	call	_vfprintf	;wreg free
  3665   0028E2  C06A  F0BA         	movff	?_vfprintf,snprintf@cnt
  3666   0028E6  C06B  F0BB         	movff	?_vfprintf+1,snprintf@cnt+1
  3667   0028EA  0100               	movlb	0	; () banked
  3668   0028EC  51AE               	movf	snprintf@n& (0+255),w,b
  3669   0028EE  11AF               	iorwf	(snprintf@n+1)& (0+255),w,b
  3670   0028F0  B4D8               	btfsc	status,2,c
  3671   0028F2  EF7D  F014         	goto	u4271
  3672   0028F6  EF7F  F014         	goto	u4270
  3673   0028FA                     u4271:
  3674   0028FA  EFAF  F014         	goto	l940
  3675   0028FE                     u4270:
  3676   0028FE                     
  3677                           ; BSR set to: 0
  3678   0028FE  BFBB               	btfsc	(snprintf@cnt+1)& (0+255),7,b
  3679   002900  EF84  F014         	goto	u4281
  3680   002904  EF86  F014         	goto	u4280
  3681   002908                     u4281:
  3682   002908  EFAF  F014         	goto	l940
  3683   00290C                     u4280:
  3684   00290C                     
  3685                           ; BSR set to: 0
  3686   00290C  0EFF               	movlw	255
  3687   00290E  25AE               	addwf	snprintf@n& (0+255),w,b
  3688   002910  6E72               	movwf	??_snprintf^0,c
  3689   002912  0EFF               	movlw	255
  3690   002914  21AF               	addwfc	(snprintf@n+1)& (0+255),w,b
  3691   002916  6E73               	movwf	(??_snprintf+1)^0,c
  3692   002918  5072               	movf	??_snprintf^0,w,c
  3693   00291A  5DBA               	subwf	snprintf@cnt& (0+255),w,b
  3694   00291C  51BB               	movf	(snprintf@cnt+1)& (0+255),w,b
  3695   00291E  0A80               	xorlw	128
  3696   002920  6E74               	movwf	(??_snprintf+2)^0,c
  3697   002922  5073               	movf	(??_snprintf+1)^0,w,c
  3698   002924  0A80               	xorlw	128
  3699   002926  5874               	subwfb	(??_snprintf+2)^0,w,c
  3700   002928  A0D8               	btfss	status,0,c
  3701   00292A  EF99  F014         	goto	u4291
  3702   00292E  EF9B  F014         	goto	u4290
  3703   002932                     u4291:
  3704   002932  EFA3  F014         	goto	l945
  3705   002936                     u4290:
  3706   002936                     
  3707                           ; BSR set to: 0
  3708   002936  0EFF               	movlw	255
  3709   002938  25AE               	addwf	snprintf@n& (0+255),w,b
  3710   00293A  6FB6               	movwf	_snprintf$1046& (0+255),b
  3711   00293C  0EFF               	movlw	255
  3712   00293E  21AF               	addwfc	(snprintf@n+1)& (0+255),w,b
  3713   002940  6FB7               	movwf	(_snprintf$1046+1)& (0+255),b
  3714   002942  EFA7  F014         	goto	l4161
  3715   002946                     l945:
  3716                           
  3717                           ; BSR set to: 0
  3718   002946  C0BA  F0B6         	movff	snprintf@cnt,_snprintf$1046
  3719   00294A  C0BB  F0B7         	movff	snprintf@cnt+1,_snprintf$1046+1
  3720   00294E                     l4161:
  3721                           
  3722                           ; BSR set to: 0
  3723   00294E  51B6               	movf	_snprintf$1046& (0+255),w,b
  3724   002950  25AC               	addwf	snprintf@s& (0+255),w,b
  3725   002952  6ED9               	movwf	fsr2l,c
  3726   002954  51B7               	movf	(_snprintf$1046+1)& (0+255),w,b
  3727   002956  21AD               	addwfc	(snprintf@s+1)& (0+255),w,b
  3728   002958  6EDA               	movwf	fsr2h,c
  3729   00295A  0E00               	movlw	0
  3730   00295C  6EDF               	movwf	indf2,c
  3731   00295E                     l940:
  3732   00295E  0012               	return		;funcret
  3733   002960                     __end_of_snprintf:
  3734                           	callstack 0
  3735                           
  3736 ;; *************** function _vfprintf *****************
  3737 ;; Defined at:
  3738 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  fp              2  105[COMRAM] PTR struct _IO_FILE
  3741 ;;		 -> snprintf@f(11), 
  3742 ;;  fmt             2  107[COMRAM] PTR const unsigned char 
  3743 ;;		 -> STR_6(15), STR_5(14), 
  3744 ;;  ap              2  109[COMRAM] PTR PTR void 
  3745 ;;		 -> snprintf@ap(2), 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  cfmt            2  111[COMRAM] PTR unsigned char 
  3748 ;;		 -> STR_6(15), STR_5(14), 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  2  105[COMRAM] int 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3758 ;;      Params:         6       0       0       0       0       0       0
  3759 ;;      Locals:         2       0       0       0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0
  3761 ;;      Totals:         8       0       0       0       0       0       0
  3762 ;;Total ram usage:        8 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; Hardware stack levels required when called: 7
  3765 ;; This function calls:
  3766 ;;		_vfpfcnvrt
  3767 ;; This function is called by:
  3768 ;;		_snprintf
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text24
  3773   0037B0                     __ptext24:
  3774                           	callstack 0
  3775   0037B0                     _vfprintf:
  3776                           	callstack 20
  3777   0037B0                     
  3778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3779   0037B0  C06C  F070         	movff	vfprintf@fmt,vfprintf@cfmt
  3780   0037B4  C06D  F071         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3781   0037B8                     
  3782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1527:     nout = 
      +                          0;
  3783   0037B8  0E00               	movlw	0
  3784   0037BA  0101               	movlb	1	; () banked
  3785   0037BC  6F09               	movwf	(_nout+1)& (0+255),b
  3786   0037BE  0E00               	movlw	0
  3787   0037C0  6F08               	movwf	_nout& (0+255),b
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3790   0037C2  EFF6  F01B         	goto	l4047
  3791   0037C6                     l4045:
  3792                           
  3793                           ; BSR set to: 1
  3794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1531:         nou
      +                          t +=
  3795   0037C6  C06A  F056         	movff	vfprintf@fp,vfpfcnvrt@fp
  3796   0037CA  C06B  F057         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3797   0037CE  0E70               	movlw	low vfprintf@cfmt
  3798   0037D0  6E58               	movwf	vfpfcnvrt@fmt^0,c
  3799   0037D2  0E00               	movlw	high vfprintf@cfmt
  3800   0037D4  6E59               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3801   0037D6  C06E  F05A         	movff	vfprintf@ap,vfpfcnvrt@ap
  3802   0037DA  C06F  F05B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3803   0037DE  EC7B  F00E         	call	_vfpfcnvrt	;wreg free
  3804   0037E2  5056               	movf	?_vfpfcnvrt^0,w,c
  3805   0037E4  0101               	movlb	1	; () banked
  3806   0037E6  2708               	addwf	_nout& (0+255),f,b
  3807   0037E8  5057               	movf	(?_vfpfcnvrt+1)^0,w,c
  3808   0037EA  2309               	addwfc	(_nout+1)& (0+255),f,b
  3809   0037EC                     l4047:
  3810                           
  3811                           ; BSR set to: 1
  3812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3813   0037EC  C070  FFF6         	movff	vfprintf@cfmt,tblptrl
  3814   0037F0  C071  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3815   0037F4                     	if	0	;tblptru may be non-zero
  3816   0037F4                     	endif
  3817   0037F4                     	if	0	;tblptru may be non-zero
  3818   0037F4                     	endif
  3819   0037F4  0008               	tblrd		*
  3820   0037F6  50F5               	movf	tablat,w,c
  3821   0037F8  0900               	iorlw	0
  3822   0037FA  A4D8               	btfss	status,2,c
  3823   0037FC  EF02  F01C         	goto	u4141
  3824   003800  EF04  F01C         	goto	u4140
  3825   003804                     u4141:
  3826   003804  EFE3  F01B         	goto	l4045
  3827   003808                     u4140:
  3828   003808                     
  3829                           ; BSR set to: 1
  3830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1536:     return 
      +                          nout;
  3831   003808  C108  F06A         	movff	_nout,?_vfprintf
  3832   00380C  C109  F06B         	movff	_nout+1,?_vfprintf+1
  3833   003810                     
  3834                           ; BSR set to: 1
  3835   003810  0012               	return		;funcret
  3836   003812                     __end_of_vfprintf:
  3837                           	callstack 0
  3838                           
  3839 ;; *************** function _vfpfcnvrt *****************
  3840 ;; Defined at:
  3841 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  3844 ;;		 -> snprintf@f(11), 
  3845 ;;  fmt             2   87[COMRAM] PTR PTR unsigned char 
  3846 ;;		 -> vfprintf@cfmt(2), 
  3847 ;;  ap              2   89[COMRAM] PTR PTR void 
  3848 ;;		 -> snprintf@ap(2), 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  convarg         8   94[COMRAM] struct .
  3851 ;;  cp              2  103[COMRAM] PTR unsigned char 
  3852 ;;		 -> STR_6(15), STR_5(14), 
  3853 ;;  i               2    0        int 
  3854 ;;  done            2    0        int 
  3855 ;;  c               1  102[COMRAM] unsigned char 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  2   85[COMRAM] int 
  3858 ;; Registers used:
  3859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3865 ;;      Params:         6       0       0       0       0       0       0
  3866 ;;      Locals:        11       0       0       0       0       0       0
  3867 ;;      Temps:          3       0       0       0       0       0       0
  3868 ;;      Totals:        20       0       0       0       0       0       0
  3869 ;;Total ram usage:       20 bytes
  3870 ;; Hardware stack levels used: 1
  3871 ;; Hardware stack levels required when called: 6
  3872 ;; This function calls:
  3873 ;;		_atoi
  3874 ;;		_efgtoa
  3875 ;;		_fputc
  3876 ;;		_isdigit
  3877 ;; This function is called by:
  3878 ;;		_vfprintf
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text25
  3883   001CF6                     __ptext25:
  3884                           	callstack 0
  3885   001CF6                     _vfpfcnvrt:
  3886                           	callstack 20
  3887   001CF6                     
  3888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3889   001CF6  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3890   001CFA  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3891   001CFE  CFDE FFF6          	movff	postinc2,tblptrl
  3892   001D02  CFDD FFF7          	movff	postdec2,tblptrh
  3893   001D06                     	if	0	;tblptru may be non-zero
  3894   001D06                     	endif
  3895   001D06                     	if	0	;tblptru may be non-zero
  3896   001D06                     	endif
  3897   001D06  0008               	tblrd		*
  3898   001D08  50F5               	movf	tablat,w,c
  3899   001D0A  0A25               	xorlw	37
  3900   001D0C  A4D8               	btfss	status,2,c
  3901   001D0E  EF8B  F00E         	goto	u4081
  3902   001D12  EF8D  F00E         	goto	u4080
  3903   001D16                     u4081:
  3904   001D16  EF22  F010         	goto	l3973
  3905   001D1A                     u4080:
  3906   001D1A                     
  3907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3908   001D1A  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3909   001D1E  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3910   001D22  2ADE               	incf	postinc2,f,c
  3911   001D24  0E00               	movlw	0
  3912   001D26  22DD               	addwfc	postdec2,f,c
  3913   001D28                     
  3914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3915   001D28  0E00               	movlw	0
  3916   001D2A  0101               	movlb	1	; () banked
  3917   001D2C  6F0B               	movwf	(_width+1)& (0+255),b
  3918   001D2E  0E00               	movlw	0
  3919   001D30  6F0A               	movwf	_width& (0+255),b
  3920   001D32  C10A  F07D         	movff	_width,_flags
  3921   001D36                     
  3922                           ; BSR set to: 1
  3923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3924   001D36  690C               	setf	_prec& (0+255),b
  3925   001D38  690D               	setf	(_prec+1)& (0+255),b
  3926   001D3A                     
  3927                           ; BSR set to: 1
  3928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  3929   001D3A  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3930   001D3E  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3931   001D42  CFDE FFF6          	movff	postinc2,tblptrl
  3932   001D46  CFDD FFF7          	movff	postdec2,tblptrh
  3933   001D4A                     	if	0	;tblptru may be non-zero
  3934   001D4A                     	endif
  3935   001D4A                     	if	0	;tblptru may be non-zero
  3936   001D4A                     	endif
  3937   001D4A  0008               	tblrd		*
  3938   001D4C  50F5               	movf	tablat,w,c
  3939   001D4E  0A2E               	xorlw	46
  3940   001D50  A4D8               	btfss	status,2,c
  3941   001D52  EFAD  F00E         	goto	u4091
  3942   001D56  EFAF  F00E         	goto	u4090
  3943   001D5A                     u4091:
  3944   001D5A  EF1C  F00F         	goto	l3923
  3945   001D5E                     u4090:
  3946   001D5E                     
  3947                           ; BSR set to: 1
  3948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  3949   001D5E  0E00               	movlw	0
  3950   001D60  6F0D               	movwf	(_prec+1)& (0+255),b
  3951   001D62  0E00               	movlw	0
  3952   001D64  6F0C               	movwf	_prec& (0+255),b
  3953   001D66                     
  3954                           ; BSR set to: 1
  3955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  3956   001D66  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3957   001D6A  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3958   001D6E  2ADE               	incf	postinc2,f,c
  3959   001D70  0E00               	movlw	0
  3960   001D72  22DD               	addwfc	postdec2,f,c
  3961   001D74                     
  3962                           ; BSR set to: 1
  3963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  3964   001D74  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3965   001D78  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3966   001D7C  CFDE FFF6          	movff	postinc2,tblptrl
  3967   001D80  CFDD FFF7          	movff	postdec2,tblptrh
  3968   001D84                     	if	0	;tblptru may be non-zero
  3969   001D84                     	endif
  3970   001D84                     	if	0	;tblptru may be non-zero
  3971   001D84                     	endif
  3972   001D84  0008               	tblrd		*
  3973   001D86  50F5               	movf	tablat,w,c
  3974   001D88  0A2A               	xorlw	42
  3975   001D8A  A4D8               	btfss	status,2,c
  3976   001D8C  EFCA  F00E         	goto	u4101
  3977   001D90  EFCC  F00E         	goto	u4100
  3978   001D94                     u4101:
  3979   001D94  EFE9  F00E         	goto	l3915
  3980   001D98                     u4100:
  3981   001D98                     
  3982                           ; BSR set to: 1
  3983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  3984   001D98  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3985   001D9C  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3986   001DA0  2ADE               	incf	postinc2,f,c
  3987   001DA2  0E00               	movlw	0
  3988   001DA4  22DD               	addwfc	postdec2,f,c
  3989                           
  3990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3991   001DA6  C05A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3992   001DAA  C05B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3993   001DAE  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  3994   001DB2  0E02               	movlw	2
  3995   001DB4  26DE               	addwf	postinc2,f,c
  3996   001DB6  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  3997   001DBA  0E00               	movlw	0
  3998   001DBC  22DD               	addwfc	postdec2,f,c
  3999   001DBE  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4000   001DC2  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4001   001DC6  CFDE F10C          	movff	postinc2,_prec
  4002   001DCA  CFDD F10D          	movff	postdec2,_prec+1
  4003                           
  4004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  4005   001DCE  EF1C  F00F         	goto	l3923
  4006   001DD2                     l3915:
  4007                           
  4008                           ; BSR set to: 1
  4009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  4010   001DD2  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4011   001DD6  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4012   001DDA  CFDE F007          	movff	postinc2,atoi@s
  4013   001DDE  CFDD F008          	movff	postdec2,atoi@s+1
  4014   001DE2  EC86  F013         	call	_atoi	;wreg free
  4015   001DE6  C007  F10C         	movff	?_atoi,_prec
  4016   001DEA  C008  F10D         	movff	?_atoi+1,_prec+1
  4017                           
  4018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4019   001DEE  EF00  F00F         	goto	l3921
  4020   001DF2                     l3917:
  4021                           
  4022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  4023   001DF2  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4024   001DF6  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4025   001DFA  2ADE               	incf	postinc2,f,c
  4026   001DFC  0E00               	movlw	0
  4027   001DFE  22DD               	addwfc	postdec2,f,c
  4028   001E00                     l3921:
  4029   001E00  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4030   001E04  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4031   001E08  CFDE FFF6          	movff	postinc2,tblptrl
  4032   001E0C  CFDD FFF7          	movff	postdec2,tblptrh
  4033   001E10                     	if	0	;tblptru may be non-zero
  4034   001E10                     	endif
  4035   001E10                     	if	0	;tblptru may be non-zero
  4036   001E10                     	endif
  4037   001E10  0008               	tblrd		*
  4038   001E12  CFF5 F05C          	movff	tablat,??_vfpfcnvrt
  4039   001E16  0ED0               	movlw	208
  4040   001E18  245C               	addwf	??_vfpfcnvrt^0,w,c
  4041   001E1A  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  4042   001E1C  6A5E               	clrf	(??_vfpfcnvrt+2)^0,c
  4043   001E1E  0EFF               	movlw	255
  4044   001E20  225E               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  4045   001E22  505E               	movf	(??_vfpfcnvrt+2)^0,w,c
  4046   001E24  E109               	bnz	u4110
  4047   001E26  0E0A               	movlw	10
  4048   001E28  5C5D               	subwf	(??_vfpfcnvrt+1)^0,w,c
  4049   001E2A  A0D8               	btfss	status,0,c
  4050   001E2C  EF1A  F00F         	goto	u4111
  4051   001E30  EF1C  F00F         	goto	u4110
  4052   001E34                     u4111:
  4053   001E34  EFF9  F00E         	goto	l3917
  4054   001E38                     u4110:
  4055   001E38                     l3923:
  4056                           
  4057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  4058   001E38  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4059   001E3C  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4060   001E40  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
  4061   001E44  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
  4062   001E48                     
  4063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  4064   001E48  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4065   001E4C  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4066   001E50                     	if	0	;tblptru may be non-zero
  4067   001E50                     	endif
  4068   001E50                     	if	0	;tblptru may be non-zero
  4069   001E50                     	endif
  4070   001E50  0008               	tblrd		*
  4071   001E52  CFF5 F067          	movff	tablat,vfpfcnvrt@c
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  4074   001E56  EF39  F00F         	goto	l3935
  4075   001E5A                     l3927:
  4076                           
  4077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  4078   001E5A  4A68               	infsnz	vfpfcnvrt@cp^0,f,c
  4079   001E5C  2A69               	incf	(vfpfcnvrt@cp+1)^0,f,c
  4080                           
  4081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  4082   001E5E  EF52  F00F         	goto	l3937
  4083   001E62                     l3929:
  4084                           
  4085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  4086   001E62  0E6C               	movlw	108
  4087   001E64  6E67               	movwf	vfpfcnvrt@c^0,c
  4088                           
  4089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  4090   001E66  EF52  F00F         	goto	l3937
  4091   001E6A                     l3931:
  4092                           
  4093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  4094   001E6A  0E00               	movlw	0
  4095   001E6C  6E67               	movwf	vfpfcnvrt@c^0,c
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  4098   001E6E  EF52  F00F         	goto	l3937
  4099   001E72                     l3935:
  4100   001E72  5067               	movf	vfpfcnvrt@c^0,w,c
  4101   001E74  6E5C               	movwf	??_vfpfcnvrt^0,c
  4102   001E76  6A5D               	clrf	(??_vfpfcnvrt+1)^0,c
  4103                           
  4104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4105                           ; Switch size 1, requested type "simple"
  4106                           ; Number of cases is 1, Range of values is 0 to 0
  4107                           ; switch strategies available:
  4108                           ; Name         Instructions Cycles
  4109                           ; simple_byte            4     3 (average)
  4110                           ;	Chosen strategy is simple_byte
  4111   001E78  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  4112   001E7A  0A00               	xorlw	0	; case 0
  4113   001E7C  B4D8               	btfsc	status,2,c
  4114   001E7E  EF43  F00F         	goto	l4725
  4115   001E82  EF35  F00F         	goto	l3931
  4116   001E86                     l4725:
  4117                           
  4118                           ; Switch size 1, requested type "simple"
  4119                           ; Number of cases is 3, Range of values is 76 to 108
  4120                           ; switch strategies available:
  4121                           ; Name         Instructions Cycles
  4122                           ; simple_byte           10     6 (average)
  4123                           ;	Chosen strategy is simple_byte
  4124   001E86  505C               	movf	??_vfpfcnvrt^0,w,c
  4125   001E88  0A4C               	xorlw	76	; case 76
  4126   001E8A  B4D8               	btfsc	status,2,c
  4127   001E8C  EF2D  F00F         	goto	l3927
  4128   001E90  0A2A               	xorlw	42	; case 102
  4129   001E92  B4D8               	btfsc	status,2,c
  4130   001E94  EF31  F00F         	goto	l3929
  4131   001E98  0A0A               	xorlw	10	; case 108
  4132   001E9A  B4D8               	btfsc	status,2,c
  4133   001E9C  EF2D  F00F         	goto	l3927
  4134   001EA0  EF35  F00F         	goto	l3931
  4135   001EA4                     l3937:
  4136   001EA4  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4137   001EA8  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4138   001EAC                     	if	0	;tblptru may be non-zero
  4139   001EAC                     	endif
  4140   001EAC                     	if	0	;tblptru may be non-zero
  4141   001EAC                     	endif
  4142   001EAC  0008               	tblrd		*
  4143   001EAE  50F5               	movf	tablat,w,c
  4144   001EB0  0A66               	xorlw	102
  4145   001EB2  A4D8               	btfss	status,2,c
  4146   001EB4  EF5E  F00F         	goto	u4121
  4147   001EB8  EF60  F00F         	goto	u4120
  4148   001EBC                     u4121:
  4149   001EBC  EFEC  F00F         	goto	l3957
  4150   001EC0                     u4120:
  4151   001EC0  EF96  F00F         	goto	l3945
  4152   001EC4                     l3939:
  4153                           
  4154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4155   001EC4  C05A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4156   001EC8  C05B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4157   001ECC  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  4158   001ED0  0E04               	movlw	4
  4159   001ED2  26DE               	addwf	postinc2,f,c
  4160   001ED4  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  4161   001ED8  0E00               	movlw	0
  4162   001EDA  22DD               	addwfc	postdec2,f,c
  4163   001EDC  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4164   001EE0  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4165   001EE4  CFDE F05F          	movff	postinc2,vfpfcnvrt@convarg
  4166   001EE8  CFDE F060          	movff	postinc2,vfpfcnvrt@convarg+1
  4167   001EEC  CFDE F061          	movff	postinc2,vfpfcnvrt@convarg+2
  4168   001EF0  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg+3
  4169                           
  4170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  4171   001EF4  EFAB  F00F         	goto	l3947
  4172   001EF8                     l3941:
  4173                           
  4174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4175   001EF8  C05A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4176   001EFC  C05B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4177   001F00  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  4178   001F04  0E04               	movlw	4
  4179   001F06  26DE               	addwf	postinc2,f,c
  4180   001F08  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  4181   001F0C  0E00               	movlw	0
  4182   001F0E  22DD               	addwfc	postdec2,f,c
  4183   001F10  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4184   001F14  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4185   001F18  CFDE F05F          	movff	postinc2,vfpfcnvrt@convarg
  4186   001F1C  CFDE F060          	movff	postinc2,vfpfcnvrt@convarg+1
  4187   001F20  CFDE F061          	movff	postinc2,vfpfcnvrt@convarg+2
  4188   001F24  CFDE F062          	movff	postinc2,vfpfcnvrt@convarg+3
  4189                           
  4190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  4191   001F28  EFAB  F00F         	goto	l3947
  4192   001F2C                     l3945:
  4193   001F2C  5067               	movf	vfpfcnvrt@c^0,w,c
  4194   001F2E  6E5C               	movwf	??_vfpfcnvrt^0,c
  4195   001F30  6A5D               	clrf	(??_vfpfcnvrt+1)^0,c
  4196                           
  4197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4198                           ; Switch size 1, requested type "simple"
  4199                           ; Number of cases is 1, Range of values is 0 to 0
  4200                           ; switch strategies available:
  4201                           ; Name         Instructions Cycles
  4202                           ; simple_byte            4     3 (average)
  4203                           ;	Chosen strategy is simple_byte
  4204   001F32  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  4205   001F34  0A00               	xorlw	0	; case 0
  4206   001F36  B4D8               	btfsc	status,2,c
  4207   001F38  EFA0  F00F         	goto	l4727
  4208   001F3C  EFAB  F00F         	goto	l3947
  4209   001F40                     l4727:
  4210                           
  4211                           ; Switch size 1, requested type "simple"
  4212                           ; Number of cases is 2, Range of values is 76 to 108
  4213                           ; switch strategies available:
  4214                           ; Name         Instructions Cycles
  4215                           ; simple_byte            7     4 (average)
  4216                           ;	Chosen strategy is simple_byte
  4217   001F40  505C               	movf	??_vfpfcnvrt^0,w,c
  4218   001F42  0A4C               	xorlw	76	; case 76
  4219   001F44  B4D8               	btfsc	status,2,c
  4220   001F46  EF7C  F00F         	goto	l3941
  4221   001F4A  0A20               	xorlw	32	; case 108
  4222   001F4C  B4D8               	btfsc	status,2,c
  4223   001F4E  EF62  F00F         	goto	l3939
  4224   001F52  EFAB  F00F         	goto	l3947
  4225   001F56                     l3947:
  4226                           
  4227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  4228   001F56  0E01               	movlw	1
  4229   001F58  2468               	addwf	vfpfcnvrt@cp^0,w,c
  4230   001F5A  6E5C               	movwf	??_vfpfcnvrt^0,c
  4231   001F5C  0E00               	movlw	0
  4232   001F5E  2069               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  4233   001F60  6E5D               	movwf	(??_vfpfcnvrt+1)^0,c
  4234   001F62  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4235   001F66  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4236   001F6A  C05C  FFDE         	movff	??_vfpfcnvrt,postinc2
  4237   001F6E  C05D  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4238                           
  4239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  4240   001F72  EFD6  F00F         	goto	l3955
  4241   001F76                     l3949:
  4242                           
  4243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (int) efgtoa(fp, convarg.f, *cp);
  4244   001F76  C056  F04D         	movff	vfpfcnvrt@fp,efgtoa@fp
  4245   001F7A  C057  F04E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4246   001F7E  C05F  F04F         	movff	vfpfcnvrt@convarg,efgtoa@f
  4247   001F82  C060  F050         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  4248   001F86  C061  F051         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  4249   001F8A  C062  F052         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  4250   001F8E  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4251   001F92  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4252   001F96                     	if	0	;tblptru may be non-zero
  4253   001F96                     	endif
  4254   001F96                     	if	0	;tblptru may be non-zero
  4255   001F96                     	endif
  4256   001F96  0008               	tblrd		*
  4257   001F98  CFF5 F053          	movff	tablat,efgtoa@c
  4258   001F9C  EC32  F003         	call	_efgtoa	;wreg free
  4259   001FA0  C04D  F056         	movff	?_efgtoa,?_vfpfcnvrt
  4260   001FA4  C04E  F057         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4261   001FA8  EF3D  F010         	goto	l1068
  4262   001FAC                     l3955:
  4263   001FAC  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4264   001FB0  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4265   001FB4                     	if	0	;tblptru may be non-zero
  4266   001FB4                     	endif
  4267   001FB4                     	if	0	;tblptru may be non-zero
  4268   001FB4                     	endif
  4269   001FB4  0008               	tblrd		*
  4270   001FB6  50F5               	movf	tablat,w,c
  4271   001FB8  6E5C               	movwf	??_vfpfcnvrt^0,c
  4272   001FBA  6A5D               	clrf	(??_vfpfcnvrt+1)^0,c
  4273                           
  4274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4275                           ; Switch size 1, requested type "simple"
  4276                           ; Number of cases is 1, Range of values is 0 to 0
  4277                           ; switch strategies available:
  4278                           ; Name         Instructions Cycles
  4279                           ; simple_byte            4     3 (average)
  4280                           ;	Chosen strategy is simple_byte
  4281   001FBC  505D               	movf	(??_vfpfcnvrt+1)^0,w,c
  4282   001FBE  0A00               	xorlw	0	; case 0
  4283   001FC0  B4D8               	btfsc	status,2,c
  4284   001FC2  EFE5  F00F         	goto	l4729
  4285   001FC6  EFEC  F00F         	goto	l3957
  4286   001FCA                     l4729:
  4287                           
  4288                           ; Switch size 1, requested type "simple"
  4289                           ; Number of cases is 1, Range of values is 102 to 102
  4290                           ; switch strategies available:
  4291                           ; Name         Instructions Cycles
  4292                           ; simple_byte            4     3 (average)
  4293                           ;	Chosen strategy is simple_byte
  4294   001FCA  505C               	movf	??_vfpfcnvrt^0,w,c
  4295   001FCC  0A66               	xorlw	102	; case 102
  4296   001FCE  B4D8               	btfsc	status,2,c
  4297   001FD0  EFBB  F00F         	goto	l3949
  4298   001FD4  EFEC  F00F         	goto	l3957
  4299   001FD8                     l3957:
  4300                           
  4301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1501:         if 
      +                          ((*fmt)[0] == '%') {
  4302   001FD8  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4303   001FDC  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4304   001FE0  CFDE FFF6          	movff	postinc2,tblptrl
  4305   001FE4  CFDD FFF7          	movff	postdec2,tblptrh
  4306   001FE8                     	if	0	;tblptru may be non-zero
  4307   001FE8                     	endif
  4308   001FE8                     	if	0	;tblptru may be non-zero
  4309   001FE8                     	endif
  4310   001FE8  0008               	tblrd		*
  4311   001FEA  50F5               	movf	tablat,w,c
  4312   001FEC  0A25               	xorlw	37
  4313   001FEE  A4D8               	btfss	status,2,c
  4314   001FF0  EFFC  F00F         	goto	u4131
  4315   001FF4  EFFE  F00F         	goto	u4130
  4316   001FF8                     u4131:
  4317   001FF8  EF15  F010         	goto	l3967
  4318   001FFC                     u4130:
  4319   001FFC                     
  4320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1502:            
      +                           ++*fmt;
  4321   001FFC  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4322   002000  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4323   002004  2ADE               	incf	postinc2,f,c
  4324   002006  0E00               	movlw	0
  4325   002008  22DD               	addwfc	postdec2,f,c
  4326   00200A                     
  4327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1503:            
      +                           fputc((int)'%', fp);
  4328   00200A  0E00               	movlw	0
  4329   00200C  6E02               	movwf	(fputc@c+1)^0,c
  4330   00200E  0E25               	movlw	37
  4331   002010  6E01               	movwf	fputc@c^0,c
  4332   002012  C056  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4333   002016  C057  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4334   00201A  ECB3  F016         	call	_fputc	;wreg free
  4335   00201E                     l3963:
  4336                           
  4337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1504:            
      +                           return (int) 1;
  4338   00201E  0E00               	movlw	0
  4339   002020  6E57               	movwf	(?_vfpfcnvrt+1)^0,c
  4340   002022  0E01               	movlw	1
  4341   002024  6E56               	movwf	?_vfpfcnvrt^0,c
  4342   002026  EF3D  F010         	goto	l1068
  4343   00202A                     l3967:
  4344                           
  4345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  4346   00202A  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4347   00202E  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4348   002032  2ADE               	incf	postinc2,f,c
  4349   002034  0E00               	movlw	0
  4350   002036  22DD               	addwfc	postdec2,f,c
  4351   002038                     
  4352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1510:         ret
      +                          urn (int) 0;
  4353   002038  0E00               	movlw	0
  4354   00203A  6E57               	movwf	(?_vfpfcnvrt+1)^0,c
  4355   00203C  0E00               	movlw	0
  4356   00203E  6E56               	movwf	?_vfpfcnvrt^0,c
  4357   002040  EF3D  F010         	goto	l1068
  4358   002044                     l3973:
  4359                           
  4360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  4361   002044  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4362   002048  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4363   00204C  CFDE FFF6          	movff	postinc2,tblptrl
  4364   002050  CFDD FFF7          	movff	postdec2,tblptrh
  4365   002054                     	if	0	;tblptru may be non-zero
  4366   002054                     	endif
  4367   002054                     	if	0	;tblptru may be non-zero
  4368   002054                     	endif
  4369   002054  0008               	tblrd		*
  4370   002056  50F5               	movf	tablat,w,c
  4371   002058  6E01               	movwf	fputc@c^0,c
  4372   00205A  6A02               	clrf	(fputc@c+1)^0,c
  4373   00205C  C056  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4374   002060  C057  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4375   002064  ECB3  F016         	call	_fputc	;wreg free
  4376   002068                     
  4377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1515:     ++*fmt;
  4378   002068  C058  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4379   00206C  C059  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4380   002070  2ADE               	incf	postinc2,f,c
  4381   002072  0E00               	movlw	0
  4382   002074  22DD               	addwfc	postdec2,f,c
  4383   002076  EF0F  F010         	goto	l3963
  4384   00207A                     l1068:
  4385   00207A  0012               	return		;funcret
  4386   00207C                     __end_of_vfpfcnvrt:
  4387                           	callstack 0
  4388                           
  4389 ;; *************** function _efgtoa *****************
  4390 ;; Defined at:
  4391 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  fp              2   76[COMRAM] PTR struct _IO_FILE
  4394 ;;		 -> snprintf@f(11), 
  4395 ;;  f               4   78[COMRAM] PTR struct _IO_FILE
  4396 ;;  c               1   82[COMRAM] unsigned char 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  u               4   40[BANK0 ] struct flui
  4399 ;;  g               4   36[BANK0 ] struct flui
  4400 ;;  l               4   29[BANK0 ] struct flui
  4401 ;;  h               4   25[BANK0 ] struct flui
  4402 ;;  ou              4   19[BANK0 ] struct flui
  4403 ;;  n               2   34[BANK0 ] int 
  4404 ;;  i               2   23[BANK0 ] int 
  4405 ;;  w               2   17[BANK0 ] int 
  4406 ;;  e               2   15[BANK0 ] int 
  4407 ;;  m               2   13[BANK0 ] int 
  4408 ;;  d               2   11[BANK0 ] int 
  4409 ;;  t               2    4[BANK0 ] int 
  4410 ;;  p               2    2[BANK0 ] int 
  4411 ;;  ne              2    0[BANK0 ] int 
  4412 ;;  sign            1   33[BANK0 ] unsigned char 
  4413 ;;  nmode           1   10[BANK0 ] unsigned char 
  4414 ;;  mode            1    9[BANK0 ] unsigned char 
  4415 ;;  pp              1    8[BANK0 ] unsigned char 
  4416 ;;  esign           1    0        unsigned char 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  2   76[COMRAM] int 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4426 ;;      Params:         7       0       0       0       0       0       0
  4427 ;;      Locals:         0      44       0       0       0       0       0
  4428 ;;      Temps:          2       0       0       0       0       0       0
  4429 ;;      Totals:         9      44       0       0       0       0       0
  4430 ;;Total ram usage:       53 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 5
  4433 ;; This function calls:
  4434 ;;		___fladd
  4435 ;;		___fldiv
  4436 ;;		___fleq
  4437 ;;		___flge
  4438 ;;		___flmul
  4439 ;;		___flneg
  4440 ;;		___flsub
  4441 ;;		___fltol
  4442 ;;		___fpclassifyf
  4443 ;;		_floorf
  4444 ;;		_labs
  4445 ;;		_memcpy
  4446 ;;		_pad
  4447 ;;		_strcpy
  4448 ;; This function is called by:
  4449 ;;		_vfpfcnvrt
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text26
  4454   000664                     __ptext26:
  4455                           	callstack 0
  4456   000664                     _efgtoa:
  4457                           	callstack 20
  4458   000664                     
  4459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2.
      +                          40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program 
      +                          Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  4460   000664  0E00               	movlw	0
  4461   000666  0100               	movlb	0	; () banked
  4462   000668  6FA1               	movwf	efgtoa@sign& (0+255),b
  4463   00066A                     
  4464                           ; BSR set to: 0
  4465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  4466   00066A  C04F  F0A4         	movff	efgtoa@f,efgtoa@g
  4467   00066E  C050  F0A5         	movff	efgtoa@f+1,efgtoa@g+1
  4468   000672  C051  F0A6         	movff	efgtoa@f+2,efgtoa@g+2
  4469   000676  C052  F0A7         	movff	efgtoa@f+3,efgtoa@g+3
  4470   00067A                     
  4471                           ; BSR set to: 0
  4472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  4473   00067A  BFA7               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4474   00067C  EF44  F003         	goto	u3680
  4475   000680  EF42  F003         	goto	u3681
  4476   000684                     u3681:
  4477   000684  EF58  F003         	goto	l3637
  4478   000688                     u3680:
  4479   000688                     
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  4482   000688  0E01               	movlw	1
  4483   00068A  6FA1               	movwf	efgtoa@sign& (0+255),b
  4484   00068C                     
  4485                           ; BSR set to: 0
  4486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  4487   00068C  C0A4  F001         	movff	efgtoa@g,___flneg@f1
  4488   000690  C0A5  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4489   000694  C0A6  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4490   000698  C0A7  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4491   00069C  EC31  F01D         	call	___flneg	;wreg free
  4492   0006A0  C001  F0A4         	movff	?___flneg,efgtoa@g
  4493   0006A4  C002  F0A5         	movff	?___flneg+1,efgtoa@g+1
  4494   0006A8  C003  F0A6         	movff	?___flneg+2,efgtoa@g+2
  4495   0006AC  C004  F0A7         	movff	?___flneg+3,efgtoa@g+3
  4496   0006B0                     l3637:
  4497                           
  4498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  4499   0006B0  0E00               	movlw	0
  4500   0006B2  0100               	movlb	0	; () banked
  4501   0006B4  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  4502   0006B6  0E00               	movlw	0
  4503   0006B8  6FA2               	movwf	efgtoa@n& (0+255),b
  4504   0006BA                     
  4505                           ; BSR set to: 0
  4506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  4507   0006BA  C10A  F091         	movff	_width,efgtoa@w
  4508   0006BE  C10B  F092         	movff	_width+1,efgtoa@w+1
  4509   0006C2                     
  4510                           ; BSR set to: 0
  4511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  4512   0006C2  51A1               	movf	efgtoa@sign& (0+255),w,b
  4513   0006C4  B4D8               	btfsc	status,2,c
  4514   0006C6  EF67  F003         	goto	u3691
  4515   0006CA  EF69  F003         	goto	u3690
  4516   0006CE                     u3691:
  4517   0006CE  EF7D  F003         	goto	l3651
  4518   0006D2                     u3690:
  4519   0006D2                     
  4520                           ; BSR set to: 0
  4521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  4522   0006D2  51A1               	movf	efgtoa@sign& (0+255),w,b
  4523   0006D4  A4D8               	btfss	status,2,c
  4524   0006D6  EF6F  F003         	goto	u3701
  4525   0006DA  EF71  F003         	goto	u3700
  4526   0006DE                     u3701:
  4527   0006DE  EF77  F003         	goto	l3647
  4528   0006E2                     u3700:
  4529   0006E2                     
  4530                           ; BSR set to: 0
  4531   0006E2  0E00               	movlw	0
  4532   0006E4  6F87               	movwf	(_efgtoa$1156+1)& (0+255),b
  4533   0006E6  0E2B               	movlw	43
  4534   0006E8  6F86               	movwf	_efgtoa$1156& (0+255),b
  4535   0006EA  EF7B  F003         	goto	l3649
  4536   0006EE                     l3647:
  4537                           
  4538                           ; BSR set to: 0
  4539   0006EE  0E00               	movlw	0
  4540   0006F0  6F87               	movwf	(_efgtoa$1156+1)& (0+255),b
  4541   0006F2  0E2D               	movlw	45
  4542   0006F4  6F86               	movwf	_efgtoa$1156& (0+255),b
  4543   0006F6                     l3649:
  4544                           
  4545                           ; BSR set to: 0
  4546   0006F6  C086  F0A1         	movff	_efgtoa$1156,efgtoa@sign
  4547   0006FA                     l3651:
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4551   0006FA  C0A4  F001         	movff	efgtoa@g,___fpclassifyf@x
  4552   0006FE  C0A5  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4553   000702  C0A6  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4554   000706  C0A7  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4555   00070A  EC34  F016         	call	___fpclassifyf	;wreg free
  4556   00070E  0401               	decf	?___fpclassifyf^0,w,c
  4557   000710  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4558   000712  A4D8               	btfss	status,2,c
  4559   000714  EF8E  F003         	goto	u3711
  4560   000718  EF90  F003         	goto	u3710
  4561   00071C                     u3711:
  4562   00071C  EFC7  F003         	goto	l3669
  4563   000720                     u3710:
  4564   000720                     
  4565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  4566   000720  0100               	movlb	0	; () banked
  4567   000722  51A1               	movf	efgtoa@sign& (0+255),w,b
  4568   000724  B4D8               	btfsc	status,2,c
  4569   000726  EF97  F003         	goto	u3721
  4570   00072A  EF99  F003         	goto	u3720
  4571   00072E                     u3721:
  4572   00072E  EFA2  F003         	goto	l3661
  4573   000732                     u3720:
  4574   000732                     
  4575                           ; BSR set to: 0
  4576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  4577   000732  C0A1  F110         	movff	efgtoa@sign,_dbuf
  4578   000736                     
  4579                           ; BSR set to: 0
  4580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  4581   000736  0791               	decf	efgtoa@w& (0+255),f,b
  4582   000738  A0D8               	btfss	status,0,c
  4583   00073A  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4584   00073C                     
  4585                           ; BSR set to: 0
  4586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  4587   00073C  0E00               	movlw	0
  4588   00073E  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  4589   000740  0E01               	movlw	1
  4590   000742  6FA2               	movwf	efgtoa@n& (0+255),b
  4591   000744                     l3661:
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  4595   000744  0E10               	movlw	low _dbuf
  4596   000746  25A2               	addwf	efgtoa@n& (0+255),w,b
  4597   000748  6E01               	movwf	strcpy@dest^0,c
  4598   00074A  0E01               	movlw	high _dbuf
  4599   00074C  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4600   00074E  6E02               	movwf	(strcpy@dest+1)^0,c
  4601   000750  0E56               	movlw	low STR_8
  4602   000752  6E03               	movwf	strcpy@src^0,c
  4603   000754  0E06               	movlw	high STR_8
  4604   000756  6E04               	movwf	(strcpy@src+1)^0,c
  4605   000758  ECF2  F01C         	call	_strcpy	;wreg free
  4606   00075C                     l3663:
  4607                           
  4608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4609   00075C  0100               	movlb	0	; () banked
  4610   00075E  0EFD               	movlw	253
  4611   000760  2791               	addwf	efgtoa@w& (0+255),f,b
  4612   000762  0EFF               	movlw	255
  4613   000764  2392               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4614   000766                     
  4615                           ; BSR set to: 0
  4616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (int) pad(fp, &dbuf[0], w);
  4617   000766  C04D  F011         	movff	efgtoa@fp,pad@fp
  4618   00076A  C04E  F012         	movff	efgtoa@fp+1,pad@fp+1
  4619   00076E  0E10               	movlw	low _dbuf
  4620   000770  6E13               	movwf	pad@buf^0,c
  4621   000772  0E01               	movlw	high _dbuf
  4622   000774  6E14               	movwf	(pad@buf+1)^0,c
  4623   000776  C091  F015         	movff	efgtoa@w,pad@p
  4624   00077A  C092  F016         	movff	efgtoa@w+1,pad@p+1
  4625   00077E  EC79  F018         	call	_pad	;wreg free
  4626   000782  C011  F04D         	movff	?_pad,?_efgtoa
  4627   000786  C012  F04E         	movff	?_pad+1,?_efgtoa+1
  4628   00078A  EF38  F008         	goto	l1000
  4629   00078E                     l3669:
  4630                           
  4631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4632   00078E  C0A4  F001         	movff	efgtoa@g,___fpclassifyf@x
  4633   000792  C0A5  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4634   000796  C0A6  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4635   00079A  C0A7  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4636   00079E  EC34  F016         	call	___fpclassifyf	;wreg free
  4637   0007A2  5001               	movf	?___fpclassifyf^0,w,c
  4638   0007A4  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4639   0007A6  A4D8               	btfss	status,2,c
  4640   0007A8  EFD8  F003         	goto	u3731
  4641   0007AC  EFDA  F003         	goto	u3730
  4642   0007B0                     u3731:
  4643   0007B0  EFFA  F003         	goto	l3687
  4644   0007B4                     u3730:
  4645   0007B4                     
  4646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  4647   0007B4  0100               	movlb	0	; () banked
  4648   0007B6  51A1               	movf	efgtoa@sign& (0+255),w,b
  4649   0007B8  B4D8               	btfsc	status,2,c
  4650   0007BA  EFE1  F003         	goto	u3741
  4651   0007BE  EFE3  F003         	goto	u3740
  4652   0007C2                     u3741:
  4653   0007C2  EFEC  F003         	goto	l3679
  4654   0007C6                     u3740:
  4655   0007C6                     
  4656                           ; BSR set to: 0
  4657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  4658   0007C6  C0A1  F110         	movff	efgtoa@sign,_dbuf
  4659   0007CA                     
  4660                           ; BSR set to: 0
  4661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  4662   0007CA  0791               	decf	efgtoa@w& (0+255),f,b
  4663   0007CC  A0D8               	btfss	status,0,c
  4664   0007CE  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4665   0007D0                     
  4666                           ; BSR set to: 0
  4667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  4668   0007D0  0E00               	movlw	0
  4669   0007D2  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  4670   0007D4  0E01               	movlw	1
  4671   0007D6  6FA2               	movwf	efgtoa@n& (0+255),b
  4672   0007D8                     l3679:
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  4676   0007D8  0E10               	movlw	low _dbuf
  4677   0007DA  25A2               	addwf	efgtoa@n& (0+255),w,b
  4678   0007DC  6E01               	movwf	strcpy@dest^0,c
  4679   0007DE  0E01               	movlw	high _dbuf
  4680   0007E0  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4681   0007E2  6E02               	movwf	(strcpy@dest+1)^0,c
  4682   0007E4  0E5A               	movlw	low STR_11
  4683   0007E6  6E03               	movwf	strcpy@src^0,c
  4684   0007E8  0E06               	movlw	high STR_11
  4685   0007EA  6E04               	movwf	(strcpy@src+1)^0,c
  4686   0007EC  ECF2  F01C         	call	_strcpy	;wreg free
  4687   0007F0  EFAE  F003         	goto	l3663
  4688   0007F4                     l3687:
  4689                           
  4690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  4691   0007F4  0E00               	movlw	0
  4692   0007F6  0100               	movlb	0	; () banked
  4693   0007F8  6FA8               	movwf	efgtoa@u& (0+255),b
  4694   0007FA  0E00               	movlw	0
  4695   0007FC  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  4696   0007FE  0E80               	movlw	128
  4697   000800  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  4698   000802  0E3F               	movlw	63
  4699   000804  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  4700                           
  4701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  4702   000806  0E00               	movlw	0
  4703   000808  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  4704   00080A  0E00               	movlw	0
  4705   00080C  6F8F               	movwf	efgtoa@e& (0+255),b
  4706   00080E                     
  4707                           ; BSR set to: 0
  4708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  4709   00080E  C0A4  F001         	movff	efgtoa@g,___fleq@ff1
  4710   000812  C0A5  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4711   000816  C0A6  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4712   00081A  C0A7  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4713   00081E  0E00               	movlw	0
  4714   000820  6E05               	movwf	___fleq@ff2^0,c
  4715   000822  0E00               	movlw	0
  4716   000824  6E06               	movwf	(___fleq@ff2+1)^0,c
  4717   000826  0E00               	movlw	0
  4718   000828  6E07               	movwf	(___fleq@ff2+2)^0,c
  4719   00082A  0E00               	movlw	0
  4720   00082C  6E08               	movwf	(___fleq@ff2+3)^0,c
  4721   00082E  ECDB  F017         	call	___fleq	;wreg free
  4722   000832  B0D8               	btfsc	status,0,c
  4723   000834  EF1E  F004         	goto	u3751
  4724   000838  EF20  F004         	goto	u3750
  4725   00083C                     u3751:
  4726   00083C  EFFF  F004         	goto	l1003
  4727   000840                     u3750:
  4728   000840  EF2D  F004         	goto	l3695
  4729   000844                     l1005:
  4730                           
  4731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  4732   000844  C093  F0A8         	movff	efgtoa@ou,efgtoa@u
  4733   000848  C094  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  4734   00084C  C095  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  4735   000850  C096  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  4736   000854                     
  4737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  4738   000854  0100               	movlb	0	; () banked
  4739   000856  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  4740   000858  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  4741   00085A                     l3695:
  4742                           
  4743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4744   00085A  C0A8  F028         	movff	efgtoa@u,___flmul@b
  4745   00085E  C0A9  F029         	movff	efgtoa@u+1,___flmul@b+1
  4746   000862  C0AA  F02A         	movff	efgtoa@u+2,___flmul@b+2
  4747   000866  C0AB  F02B         	movff	efgtoa@u+3,___flmul@b+3
  4748   00086A  0E00               	movlw	0
  4749   00086C  6E2C               	movwf	___flmul@a^0,c
  4750   00086E  0E00               	movlw	0
  4751   000870  6E2D               	movwf	(___flmul@a+1)^0,c
  4752   000872  0E20               	movlw	32
  4753   000874  6E2E               	movwf	(___flmul@a+2)^0,c
  4754   000876  0E41               	movlw	65
  4755   000878  6E2F               	movwf	(___flmul@a+3)^0,c
  4756   00087A  EC99  F00A         	call	___flmul	;wreg free
  4757   00087E  C028  F093         	movff	?___flmul,efgtoa@ou
  4758   000882  C029  F094         	movff	?___flmul+1,efgtoa@ou+1
  4759   000886  C02A  F095         	movff	?___flmul+2,efgtoa@ou+2
  4760   00088A  C02B  F096         	movff	?___flmul+3,efgtoa@ou+3
  4761   00088E  0100               	movlb	0	; () banked
  4762   000890  5193               	movf	efgtoa@ou& (0+255),w,b
  4763   000892  5DA4               	subwf	efgtoa@g& (0+255),w,b
  4764   000894  6E01               	movwf	labs@a^0,c
  4765   000896  5194               	movf	(efgtoa@ou+1)& (0+255),w,b
  4766   000898  59A5               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4767   00089A  6E02               	movwf	(labs@a+1)^0,c
  4768   00089C  5195               	movf	(efgtoa@ou+2)& (0+255),w,b
  4769   00089E  59A6               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4770   0008A0  6E03               	movwf	(labs@a+2)^0,c
  4771   0008A2  5196               	movf	(efgtoa@ou+3)& (0+255),w,b
  4772   0008A4  59A7               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4773   0008A6  6E04               	movwf	(labs@a+3)^0,c
  4774   0008A8  ECAA  F01A         	call	_labs	;wreg free
  4775   0008AC  BE04               	btfsc	(?_labs+3)^0,7,c
  4776   0008AE  EF64  F004         	goto	u3761
  4777   0008B2  5004               	movf	(?_labs+3)^0,w,c
  4778   0008B4  1003               	iorwf	(?_labs+2)^0,w,c
  4779   0008B6  1002               	iorwf	(?_labs+1)^0,w,c
  4780   0008B8  E109               	bnz	u3760
  4781   0008BA  0E02               	movlw	2
  4782   0008BC  5C01               	subwf	?_labs^0,w,c
  4783   0008BE  A0D8               	btfss	status,0,c
  4784   0008C0  EF64  F004         	goto	u3761
  4785   0008C4  EF66  F004         	goto	u3760
  4786   0008C8                     u3761:
  4787   0008C8  EF22  F004         	goto	l1005
  4788   0008CC                     u3760:
  4789   0008CC  C093  F041         	movff	efgtoa@ou,___flge@ff1
  4790   0008D0  C094  F042         	movff	efgtoa@ou+1,___flge@ff1+1
  4791   0008D4  C095  F043         	movff	efgtoa@ou+2,___flge@ff1+2
  4792   0008D8  C096  F044         	movff	efgtoa@ou+3,___flge@ff1+3
  4793   0008DC  C0A4  F045         	movff	efgtoa@g,___flge@ff2
  4794   0008E0  C0A5  F046         	movff	efgtoa@g+1,___flge@ff2+1
  4795   0008E4  C0A6  F047         	movff	efgtoa@g+2,___flge@ff2+2
  4796   0008E8  C0A7  F048         	movff	efgtoa@g+3,___flge@ff2+3
  4797   0008EC  EC33  F015         	call	___flge	;wreg free
  4798   0008F0  A0D8               	btfss	status,0,c
  4799   0008F2  EF7D  F004         	goto	u3771
  4800   0008F6  EF7F  F004         	goto	u3770
  4801   0008FA                     u3771:
  4802   0008FA  EF22  F004         	goto	l1005
  4803   0008FE                     u3770:
  4804   0008FE                     
  4805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4806   0008FE  0100               	movlb	0	; () banked
  4807   000900  51A8               	movf	efgtoa@u& (0+255),w,b
  4808   000902  5DA4               	subwf	efgtoa@g& (0+255),w,b
  4809   000904  6E01               	movwf	labs@a^0,c
  4810   000906  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  4811   000908  59A5               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4812   00090A  6E02               	movwf	(labs@a+1)^0,c
  4813   00090C  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  4814   00090E  59A6               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4815   000910  6E03               	movwf	(labs@a+2)^0,c
  4816   000912  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  4817   000914  59A7               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4818   000916  6E04               	movwf	(labs@a+3)^0,c
  4819   000918  ECAA  F01A         	call	_labs	;wreg free
  4820   00091C  BE04               	btfsc	(?_labs+3)^0,7,c
  4821   00091E  EF9E  F004         	goto	u3780
  4822   000922  5004               	movf	(?_labs+3)^0,w,c
  4823   000924  1003               	iorwf	(?_labs+2)^0,w,c
  4824   000926  1002               	iorwf	(?_labs+1)^0,w,c
  4825   000928  E107               	bnz	u3781
  4826   00092A  0E02               	movlw	2
  4827   00092C  5C01               	subwf	?_labs^0,w,c
  4828   00092E  B0D8               	btfsc	status,0,c
  4829   000930  EF9C  F004         	goto	u3781
  4830   000934  EF9E  F004         	goto	u3780
  4831   000938                     u3781:
  4832   000938  EFE6  F004         	goto	l3713
  4833   00093C                     u3780:
  4834   00093C                     l3703:
  4835                           
  4836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  4837   00093C  C0A8  F0A4         	movff	efgtoa@u,efgtoa@g
  4838   000940  C0A9  F0A5         	movff	efgtoa@u+1,efgtoa@g+1
  4839   000944  C0AA  F0A6         	movff	efgtoa@u+2,efgtoa@g+2
  4840   000948  C0AB  F0A7         	movff	efgtoa@u+3,efgtoa@g+3
  4841                           
  4842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  4843   00094C  EFFF  F004         	goto	l1003
  4844   000950                     l3705:
  4845                           
  4846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  4847   000950  C0A8  F00F         	movff	efgtoa@u,___fldiv@b
  4848   000954  C0A9  F010         	movff	efgtoa@u+1,___fldiv@b+1
  4849   000958  C0AA  F011         	movff	efgtoa@u+2,___fldiv@b+2
  4850   00095C  C0AB  F012         	movff	efgtoa@u+3,___fldiv@b+3
  4851   000960  0E00               	movlw	0
  4852   000962  6E13               	movwf	___fldiv@a^0,c
  4853   000964  0E00               	movlw	0
  4854   000966  6E14               	movwf	(___fldiv@a+1)^0,c
  4855   000968  0E20               	movlw	32
  4856   00096A  6E15               	movwf	(___fldiv@a+2)^0,c
  4857   00096C  0E41               	movlw	65
  4858   00096E  6E16               	movwf	(___fldiv@a+3)^0,c
  4859   000970  ECAE  F00C         	call	___fldiv	;wreg free
  4860   000974  C00F  F0A8         	movff	?___fldiv,efgtoa@u
  4861   000978  C010  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  4862   00097C  C011  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  4863   000980  C012  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  4864   000984                     
  4865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  4866   000984  0100               	movlb	0	; () banked
  4867   000986  078F               	decf	efgtoa@e& (0+255),f,b
  4868   000988  A0D8               	btfss	status,0,c
  4869   00098A  0790               	decf	(efgtoa@e+1)& (0+255),f,b
  4870   00098C                     
  4871                           ; BSR set to: 0
  4872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4873   00098C  51A8               	movf	efgtoa@u& (0+255),w,b
  4874   00098E  5DA4               	subwf	efgtoa@g& (0+255),w,b
  4875   000990  6E01               	movwf	labs@a^0,c
  4876   000992  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  4877   000994  59A5               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4878   000996  6E02               	movwf	(labs@a+1)^0,c
  4879   000998  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  4880   00099A  59A6               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4881   00099C  6E03               	movwf	(labs@a+2)^0,c
  4882   00099E  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  4883   0009A0  59A7               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4884   0009A2  6E04               	movwf	(labs@a+3)^0,c
  4885   0009A4  ECAA  F01A         	call	_labs	;wreg free
  4886   0009A8  BE04               	btfsc	(?_labs+3)^0,7,c
  4887   0009AA  EFE4  F004         	goto	u3790
  4888   0009AE  5004               	movf	(?_labs+3)^0,w,c
  4889   0009B0  1003               	iorwf	(?_labs+2)^0,w,c
  4890   0009B2  1002               	iorwf	(?_labs+1)^0,w,c
  4891   0009B4  E107               	bnz	u3791
  4892   0009B6  0E02               	movlw	2
  4893   0009B8  5C01               	subwf	?_labs^0,w,c
  4894   0009BA  B0D8               	btfsc	status,0,c
  4895   0009BC  EFE2  F004         	goto	u3791
  4896   0009C0  EFE4  F004         	goto	u3790
  4897   0009C4                     u3791:
  4898   0009C4  EFE6  F004         	goto	l3713
  4899   0009C8                     u3790:
  4900   0009C8  EF9E  F004         	goto	l3703
  4901   0009CC                     l3713:
  4902                           
  4903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  4904   0009CC  C0A4  F041         	movff	efgtoa@g,___flge@ff1
  4905   0009D0  C0A5  F042         	movff	efgtoa@g+1,___flge@ff1+1
  4906   0009D4  C0A6  F043         	movff	efgtoa@g+2,___flge@ff1+2
  4907   0009D8  C0A7  F044         	movff	efgtoa@g+3,___flge@ff1+3
  4908   0009DC  C0A8  F045         	movff	efgtoa@u,___flge@ff2
  4909   0009E0  C0A9  F046         	movff	efgtoa@u+1,___flge@ff2+1
  4910   0009E4  C0AA  F047         	movff	efgtoa@u+2,___flge@ff2+2
  4911   0009E8  C0AB  F048         	movff	efgtoa@u+3,___flge@ff2+3
  4912   0009EC  EC33  F015         	call	___flge	;wreg free
  4913   0009F0  A0D8               	btfss	status,0,c
  4914   0009F2  EFFD  F004         	goto	u3801
  4915   0009F6  EFFF  F004         	goto	u3800
  4916   0009FA                     u3801:
  4917   0009FA  EFA8  F004         	goto	l3705
  4918   0009FE                     u3800:
  4919   0009FE                     l1003:
  4920                           
  4921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  4922   0009FE  C053  F089         	movff	efgtoa@c,efgtoa@mode
  4923                           
  4924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  4925   000A02  C089  F08A         	movff	efgtoa@mode,efgtoa@nmode
  4926   000A06                     
  4927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  4928   000A06  0101               	movlb	1	; () banked
  4929   000A08  BF0D               	btfsc	(_prec+1)& (0+255),7,b
  4930   000A0A  EF09  F005         	goto	u3811
  4931   000A0E  EF0B  F005         	goto	u3810
  4932   000A12                     u3811:
  4933   000A12  EF11  F005         	goto	l3719
  4934   000A16                     u3810:
  4935   000A16                     
  4936                           ; BSR set to: 1
  4937   000A16  C10C  F082         	movff	_prec,efgtoa@p
  4938   000A1A  C10D  F083         	movff	_prec+1,efgtoa@p+1
  4939   000A1E  EF16  F005         	goto	l3721
  4940   000A22                     l3719:
  4941                           
  4942                           ; BSR set to: 1
  4943   000A22  0E00               	movlw	0
  4944   000A24  0100               	movlb	0	; () banked
  4945   000A26  6F83               	movwf	(efgtoa@p+1)& (0+255),b
  4946   000A28  0E06               	movlw	6
  4947   000A2A  6F82               	movwf	efgtoa@p& (0+255),b
  4948   000A2C                     l3721:
  4949                           
  4950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  4951   000A2C  C082  F08D         	movff	efgtoa@p,efgtoa@m
  4952   000A30  C083  F08E         	movff	efgtoa@p+1,efgtoa@m+1
  4953   000A34                     
  4954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  4955   000A34  0100               	movlb	0	; () banked
  4956   000A36  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  4957   000A38  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  4958   000A3A                     
  4959                           ; BSR set to: 0
  4960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  4961   000A3A  0E66               	movlw	102
  4962   000A3C  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4963   000A3E  A4D8               	btfss	status,2,c
  4964   000A40  EF24  F005         	goto	u3821
  4965   000A44  EF26  F005         	goto	u3820
  4966   000A48                     u3821:
  4967   000A48  EF46  F005         	goto	l3735
  4968   000A4C                     u3820:
  4969   000A4C                     
  4970                           ; BSR set to: 0
  4971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4972   000A4C  BF90               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4973   000A4E  EF2D  F005         	goto	u3830
  4974   000A52  EF2B  F005         	goto	u3831
  4975   000A56                     u3831:
  4976   000A56  EF39  F005         	goto	l3731
  4977   000A5A                     u3830:
  4978   000A5A                     
  4979                           ; BSR set to: 0
  4980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4981   000A5A  0E00               	movlw	0
  4982   000A5C  6FA8               	movwf	efgtoa@u& (0+255),b
  4983   000A5E  0E00               	movlw	0
  4984   000A60  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  4985   000A62  0E80               	movlw	128
  4986   000A64  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  4987   000A66  0E3F               	movlw	63
  4988   000A68  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  4989                           
  4990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4991   000A6A  0E00               	movlw	0
  4992   000A6C  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  4993   000A6E  0E00               	movlw	0
  4994   000A70  6F8F               	movwf	efgtoa@e& (0+255),b
  4995   000A72                     l3731:
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4999   000A72  0E67               	movlw	103
  5000   000A74  1989               	xorwf	efgtoa@mode& (0+255),w,b
  5001   000A76  B4D8               	btfsc	status,2,c
  5002   000A78  EF40  F005         	goto	u3841
  5003   000A7C  EF42  F005         	goto	u3840
  5004   000A80                     u3841:
  5005   000A80  EF46  F005         	goto	l3735
  5006   000A84                     u3840:
  5007   000A84                     
  5008                           ; BSR set to: 0
  5009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  5010   000A84  518F               	movf	efgtoa@e& (0+255),w,b
  5011   000A86  278D               	addwf	efgtoa@m& (0+255),f,b
  5012   000A88  5190               	movf	(efgtoa@e+1)& (0+255),w,b
  5013   000A8A  238E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5014   000A8C                     l3735:
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  5018   000A8C  0E00               	movlw	0
  5019   000A8E  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  5020   000A90  0E00               	movlw	0
  5021   000A92  6F97               	movwf	efgtoa@i& (0+255),b
  5022   000A94                     
  5023                           ; BSR set to: 0
  5024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  5025   000A94  C0A4  F099         	movff	efgtoa@g,efgtoa@h
  5026   000A98  C0A5  F09A         	movff	efgtoa@g+1,efgtoa@h+1
  5027   000A9C  C0A6  F09B         	movff	efgtoa@g+2,efgtoa@h+2
  5028   000AA0  C0A7  F09C         	movff	efgtoa@g+3,efgtoa@h+3
  5029   000AA4                     
  5030                           ; BSR set to: 0
  5031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  5032   000AA4  C0A8  F093         	movff	efgtoa@u,efgtoa@ou
  5033   000AA8  C0A9  F094         	movff	efgtoa@u+1,efgtoa@ou+1
  5034   000AAC  C0AA  F095         	movff	efgtoa@u+2,efgtoa@ou+2
  5035   000AB0  C0AB  F096         	movff	efgtoa@u+3,efgtoa@ou+3
  5036                           
  5037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  5038   000AB4  EFD7  F005         	goto	l3749
  5039   000AB8                     l3741:
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  5043   000AB8  C099  F00F         	movff	efgtoa@h,___fldiv@b
  5044   000ABC  C09A  F010         	movff	efgtoa@h+1,___fldiv@b+1
  5045   000AC0  C09B  F011         	movff	efgtoa@h+2,___fldiv@b+2
  5046   000AC4  C09C  F012         	movff	efgtoa@h+3,___fldiv@b+3
  5047   000AC8  C0A8  F013         	movff	efgtoa@u,___fldiv@a
  5048   000ACC  C0A9  F014         	movff	efgtoa@u+1,___fldiv@a+1
  5049   000AD0  C0AA  F015         	movff	efgtoa@u+2,___fldiv@a+2
  5050   000AD4  C0AB  F016         	movff	efgtoa@u+3,___fldiv@a+3
  5051   000AD8  ECAE  F00C         	call	___fldiv	;wreg free
  5052   000ADC  C00F  F028         	movff	?___fldiv,floorf@x
  5053   000AE0  C010  F029         	movff	?___fldiv+1,floorf@x+1
  5054   000AE4  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  5055   000AE8  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  5056   000AEC  EC3E  F010         	call	_floorf	;wreg free
  5057   000AF0  C028  F09D         	movff	?_floorf,efgtoa@l
  5058   000AF4  C029  F09E         	movff	?_floorf+1,efgtoa@l+1
  5059   000AF8  C02A  F09F         	movff	?_floorf+2,efgtoa@l+2
  5060   000AFC  C02B  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5061                           
  5062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  5063   000B00  C09D  F041         	movff	efgtoa@l,___fltol@f1
  5064   000B04  C09E  F042         	movff	efgtoa@l+1,___fltol@f1+1
  5065   000B08  C09F  F043         	movff	efgtoa@l+2,___fltol@f1+2
  5066   000B0C  C0A0  F044         	movff	efgtoa@l+3,___fltol@f1+3
  5067   000B10  ECB0  F014         	call	___fltol	;wreg free
  5068   000B14  C041  F08B         	movff	?___fltol,efgtoa@d
  5069   000B18  C042  F08C         	movff	?___fltol+1,efgtoa@d+1
  5070   000B1C                     
  5071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  5072   000B1C  C099  F041         	movff	efgtoa@h,___flsub@b
  5073   000B20  C09A  F042         	movff	efgtoa@h+1,___flsub@b+1
  5074   000B24  C09B  F043         	movff	efgtoa@h+2,___flsub@b+2
  5075   000B28  C09C  F044         	movff	efgtoa@h+3,___flsub@b+3
  5076   000B2C  C09D  F02C         	movff	efgtoa@l,___flmul@a
  5077   000B30  C09E  F02D         	movff	efgtoa@l+1,___flmul@a+1
  5078   000B34  C09F  F02E         	movff	efgtoa@l+2,___flmul@a+2
  5079   000B38  C0A0  F02F         	movff	efgtoa@l+3,___flmul@a+3
  5080   000B3C  C0A8  F028         	movff	efgtoa@u,___flmul@b
  5081   000B40  C0A9  F029         	movff	efgtoa@u+1,___flmul@b+1
  5082   000B44  C0AA  F02A         	movff	efgtoa@u+2,___flmul@b+2
  5083   000B48  C0AB  F02B         	movff	efgtoa@u+3,___flmul@b+3
  5084   000B4C  EC99  F00A         	call	___flmul	;wreg free
  5085   000B50  C028  F045         	movff	?___flmul,___flsub@a
  5086   000B54  C029  F046         	movff	?___flmul+1,___flsub@a+1
  5087   000B58  C02A  F047         	movff	?___flmul+2,___flsub@a+2
  5088   000B5C  C02B  F048         	movff	?___flmul+3,___flsub@a+3
  5089   000B60  EC8A  F01C         	call	___flsub	;wreg free
  5090   000B64  C041  F099         	movff	?___flsub,efgtoa@h
  5091   000B68  C042  F09A         	movff	?___flsub+1,efgtoa@h+1
  5092   000B6C  C043  F09B         	movff	?___flsub+2,efgtoa@h+2
  5093   000B70  C044  F09C         	movff	?___flsub+3,efgtoa@h+3
  5094   000B74                     
  5095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  5096   000B74  C0A8  F00F         	movff	efgtoa@u,___fldiv@b
  5097   000B78  C0A9  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5098   000B7C  C0AA  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5099   000B80  C0AB  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5100   000B84  0E00               	movlw	0
  5101   000B86  6E13               	movwf	___fldiv@a^0,c
  5102   000B88  0E00               	movlw	0
  5103   000B8A  6E14               	movwf	(___fldiv@a+1)^0,c
  5104   000B8C  0E20               	movlw	32
  5105   000B8E  6E15               	movwf	(___fldiv@a+2)^0,c
  5106   000B90  0E41               	movlw	65
  5107   000B92  6E16               	movwf	(___fldiv@a+3)^0,c
  5108   000B94  ECAE  F00C         	call	___fldiv	;wreg free
  5109   000B98  C00F  F0A8         	movff	?___fldiv,efgtoa@u
  5110   000B9C  C010  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  5111   000BA0  C011  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  5112   000BA4  C012  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  5113   000BA8                     
  5114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  5115   000BA8  0100               	movlb	0	; () banked
  5116   000BAA  4B97               	infsnz	efgtoa@i& (0+255),f,b
  5117   000BAC  2B98               	incf	(efgtoa@i+1)& (0+255),f,b
  5118   000BAE                     l3749:
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  5122   000BAE  518D               	movf	efgtoa@m& (0+255),w,b
  5123   000BB0  5D97               	subwf	efgtoa@i& (0+255),w,b
  5124   000BB2  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  5125   000BB4  0A80               	xorlw	128
  5126   000BB6  6E54               	movwf	??_efgtoa^0,c
  5127   000BB8  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  5128   000BBA  0A80               	xorlw	128
  5129   000BBC  5854               	subwfb	??_efgtoa^0,w,c
  5130   000BBE  A0D8               	btfss	status,0,c
  5131   000BC0  EFE4  F005         	goto	u3851
  5132   000BC4  EFE6  F005         	goto	u3850
  5133   000BC8                     u3851:
  5134   000BC8  EF5C  F005         	goto	l3741
  5135   000BCC                     u3850:
  5136   000BCC                     
  5137                           ; BSR set to: 0
  5138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  5139   000BCC  C0A8  F028         	movff	efgtoa@u,___flmul@b
  5140   000BD0  C0A9  F029         	movff	efgtoa@u+1,___flmul@b+1
  5141   000BD4  C0AA  F02A         	movff	efgtoa@u+2,___flmul@b+2
  5142   000BD8  C0AB  F02B         	movff	efgtoa@u+3,___flmul@b+3
  5143   000BDC  0E00               	movlw	0
  5144   000BDE  6E2C               	movwf	___flmul@a^0,c
  5145   000BE0  0E00               	movlw	0
  5146   000BE2  6E2D               	movwf	(___flmul@a+1)^0,c
  5147   000BE4  0EA0               	movlw	160
  5148   000BE6  6E2E               	movwf	(___flmul@a+2)^0,c
  5149   000BE8  0E40               	movlw	64
  5150   000BEA  6E2F               	movwf	(___flmul@a+3)^0,c
  5151   000BEC  EC99  F00A         	call	___flmul	;wreg free
  5152   000BF0  C028  F09D         	movff	?___flmul,efgtoa@l
  5153   000BF4  C029  F09E         	movff	?___flmul+1,efgtoa@l+1
  5154   000BF8  C02A  F09F         	movff	?___flmul+2,efgtoa@l+2
  5155   000BFC  C02B  F0A0         	movff	?___flmul+3,efgtoa@l+3
  5156   000C00                     
  5157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  5158   000C00  C099  F041         	movff	efgtoa@h,___flge@ff1
  5159   000C04  C09A  F042         	movff	efgtoa@h+1,___flge@ff1+1
  5160   000C08  C09B  F043         	movff	efgtoa@h+2,___flge@ff1+2
  5161   000C0C  C09C  F044         	movff	efgtoa@h+3,___flge@ff1+3
  5162   000C10  C09D  F045         	movff	efgtoa@l,___flge@ff2
  5163   000C14  C09E  F046         	movff	efgtoa@l+1,___flge@ff2+1
  5164   000C18  C09F  F047         	movff	efgtoa@l+2,___flge@ff2+2
  5165   000C1C  C0A0  F048         	movff	efgtoa@l+3,___flge@ff2+3
  5166   000C20  EC33  F015         	call	___flge	;wreg free
  5167   000C24  B0D8               	btfsc	status,0,c
  5168   000C26  EF17  F006         	goto	u3861
  5169   000C2A  EF19  F006         	goto	u3860
  5170   000C2E                     u3861:
  5171   000C2E  EF24  F006         	goto	l3757
  5172   000C32                     u3860:
  5173   000C32                     
  5174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  5175   000C32  0E00               	movlw	0
  5176   000C34  0100               	movlb	0	; () banked
  5177   000C36  6F9D               	movwf	efgtoa@l& (0+255),b
  5178   000C38  0E00               	movlw	0
  5179   000C3A  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  5180   000C3C  0E00               	movlw	0
  5181   000C3E  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  5182   000C40  0E00               	movlw	0
  5183   000C42  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  5184                           
  5185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  5186   000C44  EF4D  F006         	goto	l3763
  5187   000C48                     l3757:
  5188                           
  5189                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  5190   000C48  C099  F001         	movff	efgtoa@h,___fleq@ff1
  5191   000C4C  C09A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5192   000C50  C09B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5193   000C54  C09C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5194   000C58  C09D  F005         	movff	efgtoa@l,___fleq@ff2
  5195   000C5C  C09E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5196   000C60  C09F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5197   000C64  C0A0  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5198   000C68  ECDB  F017         	call	___fleq	;wreg free
  5199   000C6C  A0D8               	btfss	status,0,c
  5200   000C6E  EF3B  F006         	goto	u3871
  5201   000C72  EF3D  F006         	goto	u3870
  5202   000C76                     u3871:
  5203   000C76  EF4D  F006         	goto	l3763
  5204   000C7A                     u3870:
  5205   000C7A  0100               	movlb	0	; () banked
  5206   000C7C  B18B               	btfsc	efgtoa@d& (0+255),0,b
  5207   000C7E  EF43  F006         	goto	u3881
  5208   000C82  EF45  F006         	goto	u3880
  5209   000C86                     u3881:
  5210   000C86  EF4D  F006         	goto	l3763
  5211   000C8A                     u3880:
  5212   000C8A                     
  5213                           ; BSR set to: 0
  5214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  5215   000C8A  0E00               	movlw	0
  5216   000C8C  6F9D               	movwf	efgtoa@l& (0+255),b
  5217   000C8E  0E00               	movlw	0
  5218   000C90  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  5219   000C92  0E00               	movlw	0
  5220   000C94  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  5221   000C96  0E00               	movlw	0
  5222   000C98  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  5223   000C9A                     l3763:
  5224                           
  5225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  5226   000C9A  C0A4  F001         	movff	efgtoa@g,___fladd@b
  5227   000C9E  C0A5  F002         	movff	efgtoa@g+1,___fladd@b+1
  5228   000CA2  C0A6  F003         	movff	efgtoa@g+2,___fladd@b+2
  5229   000CA6  C0A7  F004         	movff	efgtoa@g+3,___fladd@b+3
  5230   000CAA  C09D  F005         	movff	efgtoa@l,___fladd@a
  5231   000CAE  C09E  F006         	movff	efgtoa@l+1,___fladd@a+1
  5232   000CB2  C09F  F007         	movff	efgtoa@l+2,___fladd@a+2
  5233   000CB6  C0A0  F008         	movff	efgtoa@l+3,___fladd@a+3
  5234   000CBA  EC39  F008         	call	___fladd	;wreg free
  5235   000CBE  C001  F099         	movff	?___fladd,efgtoa@h
  5236   000CC2  C002  F09A         	movff	?___fladd+1,efgtoa@h+1
  5237   000CC6  C003  F09B         	movff	?___fladd+2,efgtoa@h+2
  5238   000CCA  C004  F09C         	movff	?___fladd+3,efgtoa@h+3
  5239   000CCE                     
  5240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  5241   000CCE  C099  F041         	movff	efgtoa@h,___flge@ff1
  5242   000CD2  C09A  F042         	movff	efgtoa@h+1,___flge@ff1+1
  5243   000CD6  C09B  F043         	movff	efgtoa@h+2,___flge@ff1+2
  5244   000CDA  C09C  F044         	movff	efgtoa@h+3,___flge@ff1+3
  5245   000CDE  0E00               	movlw	0
  5246   000CE0  6E2C               	movwf	___flmul@a^0,c
  5247   000CE2  0E00               	movlw	0
  5248   000CE4  6E2D               	movwf	(___flmul@a+1)^0,c
  5249   000CE6  0E20               	movlw	32
  5250   000CE8  6E2E               	movwf	(___flmul@a+2)^0,c
  5251   000CEA  0E41               	movlw	65
  5252   000CEC  6E2F               	movwf	(___flmul@a+3)^0,c
  5253   000CEE  C093  F028         	movff	efgtoa@ou,___flmul@b
  5254   000CF2  C094  F029         	movff	efgtoa@ou+1,___flmul@b+1
  5255   000CF6  C095  F02A         	movff	efgtoa@ou+2,___flmul@b+2
  5256   000CFA  C096  F02B         	movff	efgtoa@ou+3,___flmul@b+3
  5257   000CFE  EC99  F00A         	call	___flmul	;wreg free
  5258   000D02  C028  F045         	movff	?___flmul,___flge@ff2
  5259   000D06  C029  F046         	movff	?___flmul+1,___flge@ff2+1
  5260   000D0A  C02A  F047         	movff	?___flmul+2,___flge@ff2+2
  5261   000D0E  C02B  F048         	movff	?___flmul+3,___flge@ff2+3
  5262   000D12  EC33  F015         	call	___flge	;wreg free
  5263   000D16  A0D8               	btfss	status,0,c
  5264   000D18  EF90  F006         	goto	u3891
  5265   000D1C  EF92  F006         	goto	u3890
  5266   000D20                     u3891:
  5267   000D20  EFBB  F006         	goto	l3775
  5268   000D24                     u3890:
  5269   000D24                     
  5270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  5271   000D24  0100               	movlb	0	; () banked
  5272   000D26  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  5273   000D28  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  5274   000D2A                     
  5275                           ; BSR set to: 0
  5276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  5277   000D2A  C093  F028         	movff	efgtoa@ou,___flmul@b
  5278   000D2E  C094  F029         	movff	efgtoa@ou+1,___flmul@b+1
  5279   000D32  C095  F02A         	movff	efgtoa@ou+2,___flmul@b+2
  5280   000D36  C096  F02B         	movff	efgtoa@ou+3,___flmul@b+3
  5281   000D3A  0E00               	movlw	0
  5282   000D3C  6E2C               	movwf	___flmul@a^0,c
  5283   000D3E  0E00               	movlw	0
  5284   000D40  6E2D               	movwf	(___flmul@a+1)^0,c
  5285   000D42  0E20               	movlw	32
  5286   000D44  6E2E               	movwf	(___flmul@a+2)^0,c
  5287   000D46  0E41               	movlw	65
  5288   000D48  6E2F               	movwf	(___flmul@a+3)^0,c
  5289   000D4A  EC99  F00A         	call	___flmul	;wreg free
  5290   000D4E  C028  F093         	movff	?___flmul,efgtoa@ou
  5291   000D52  C029  F094         	movff	?___flmul+1,efgtoa@ou+1
  5292   000D56  C02A  F095         	movff	?___flmul+2,efgtoa@ou+2
  5293   000D5A  C02B  F096         	movff	?___flmul+3,efgtoa@ou+3
  5294   000D5E                     
  5295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  5296   000D5E  0E66               	movlw	102
  5297   000D60  0100               	movlb	0	; () banked
  5298   000D62  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  5299   000D64  A4D8               	btfss	status,2,c
  5300   000D66  EFB7  F006         	goto	u3901
  5301   000D6A  EFB9  F006         	goto	u3900
  5302   000D6E                     u3901:
  5303   000D6E  EFBB  F006         	goto	l3775
  5304   000D72                     u3900:
  5305   000D72                     
  5306                           ; BSR set to: 0
  5307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  5308   000D72  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  5309   000D74  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  5310   000D76                     l3775:
  5311                           
  5312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  5313   000D76  C093  F0A8         	movff	efgtoa@ou,efgtoa@u
  5314   000D7A  C094  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  5315   000D7E  C095  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  5316   000D82  C096  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  5317   000D86                     
  5318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  5319   000D86  C08F  F080         	movff	efgtoa@e,efgtoa@ne
  5320   000D8A  C090  F081         	movff	efgtoa@e+1,efgtoa@ne+1
  5321   000D8E                     
  5322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  5323   000D8E  0E00               	movlw	0
  5324   000D90  0100               	movlb	0	; () banked
  5325   000D92  6F88               	movwf	efgtoa@pp& (0+255),b
  5326   000D94                     
  5327                           ; BSR set to: 0
  5328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  5329   000D94  0E00               	movlw	0
  5330   000D96  6F85               	movwf	(efgtoa@t+1)& (0+255),b
  5331   000D98  0E00               	movlw	0
  5332   000D9A  6F84               	movwf	efgtoa@t& (0+255),b
  5333   000D9C                     
  5334                           ; BSR set to: 0
  5335                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  5336   000D9C  0E00               	movlw	0
  5337   000D9E  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  5338   000DA0  0E00               	movlw	0
  5339   000DA2  6F97               	movwf	efgtoa@i& (0+255),b
  5340                           
  5341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5342   000DA4  EFB9  F007         	goto	l3825
  5343   000DA8                     l3785:
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  5347   000DA8  C099  F00F         	movff	efgtoa@h,___fldiv@b
  5348   000DAC  C09A  F010         	movff	efgtoa@h+1,___fldiv@b+1
  5349   000DB0  C09B  F011         	movff	efgtoa@h+2,___fldiv@b+2
  5350   000DB4  C09C  F012         	movff	efgtoa@h+3,___fldiv@b+3
  5351   000DB8  C0A8  F013         	movff	efgtoa@u,___fldiv@a
  5352   000DBC  C0A9  F014         	movff	efgtoa@u+1,___fldiv@a+1
  5353   000DC0  C0AA  F015         	movff	efgtoa@u+2,___fldiv@a+2
  5354   000DC4  C0AB  F016         	movff	efgtoa@u+3,___fldiv@a+3
  5355   000DC8  ECAE  F00C         	call	___fldiv	;wreg free
  5356   000DCC  C00F  F028         	movff	?___fldiv,floorf@x
  5357   000DD0  C010  F029         	movff	?___fldiv+1,floorf@x+1
  5358   000DD4  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  5359   000DD8  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  5360   000DDC  EC3E  F010         	call	_floorf	;wreg free
  5361   000DE0  C028  F09D         	movff	?_floorf,efgtoa@l
  5362   000DE4  C029  F09E         	movff	?_floorf+1,efgtoa@l+1
  5363   000DE8  C02A  F09F         	movff	?_floorf+2,efgtoa@l+2
  5364   000DEC  C02B  F0A0         	movff	?_floorf+3,efgtoa@l+3
  5365                           
  5366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  5367   000DF0  C09D  F041         	movff	efgtoa@l,___fltol@f1
  5368   000DF4  C09E  F042         	movff	efgtoa@l+1,___fltol@f1+1
  5369   000DF8  C09F  F043         	movff	efgtoa@l+2,___fltol@f1+2
  5370   000DFC  C0A0  F044         	movff	efgtoa@l+3,___fltol@f1+3
  5371   000E00  ECB0  F014         	call	___fltol	;wreg free
  5372   000E04  BE42               	btfsc	(?___fltol+1)^0,7,c
  5373   000E06  EF10  F007         	goto	u3910
  5374   000E0A  5042               	movf	(?___fltol+1)^0,w,c
  5375   000E0C  E107               	bnz	u3911
  5376   000E0E  0E0A               	movlw	10
  5377   000E10  5C41               	subwf	?___fltol^0,w,c
  5378   000E12  B0D8               	btfsc	status,0,c
  5379   000E14  EF0E  F007         	goto	u3911
  5380   000E18  EF10  F007         	goto	u3910
  5381   000E1C                     u3911:
  5382   000E1C  EF20  F007         	goto	l3789
  5383   000E20                     u3910:
  5384   000E20  C09D  F041         	movff	efgtoa@l,___fltol@f1
  5385   000E24  C09E  F042         	movff	efgtoa@l+1,___fltol@f1+1
  5386   000E28  C09F  F043         	movff	efgtoa@l+2,___fltol@f1+2
  5387   000E2C  C0A0  F044         	movff	efgtoa@l+3,___fltol@f1+3
  5388   000E30  ECB0  F014         	call	___fltol	;wreg free
  5389   000E34  C041  F08B         	movff	?___fltol,efgtoa@d
  5390   000E38  C042  F08C         	movff	?___fltol+1,efgtoa@d+1
  5391   000E3C  EF25  F007         	goto	l1033
  5392   000E40                     l3789:
  5393   000E40  0E00               	movlw	0
  5394   000E42  0100               	movlb	0	; () banked
  5395   000E44  6F8C               	movwf	(efgtoa@d+1)& (0+255),b
  5396   000E46  0E09               	movlw	9
  5397   000E48  6F8B               	movwf	efgtoa@d& (0+255),b
  5398   000E4A                     l1033:
  5399                           
  5400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  5401   000E4A  0100               	movlb	0	; () banked
  5402   000E4C  5188               	movf	efgtoa@pp& (0+255),w,b
  5403   000E4E  A4D8               	btfss	status,2,c
  5404   000E50  EF2C  F007         	goto	u3921
  5405   000E54  EF2E  F007         	goto	u3920
  5406   000E58                     u3921:
  5407   000E58  EF56  F007         	goto	l3809
  5408   000E5C                     u3920:
  5409   000E5C                     
  5410                           ; BSR set to: 0
  5411   000E5C  BF81               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5412   000E5E  EF35  F007         	goto	u3930
  5413   000E62  EF33  F007         	goto	u3931
  5414   000E66                     u3931:
  5415   000E66  EF56  F007         	goto	l3809
  5416   000E6A                     u3930:
  5417   000E6A                     
  5418                           ; BSR set to: 0
  5419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  5420   000E6A  0E10               	movlw	low _dbuf
  5421   000E6C  25A2               	addwf	efgtoa@n& (0+255),w,b
  5422   000E6E  6ED9               	movwf	fsr2l,c
  5423   000E70  0E01               	movlw	high _dbuf
  5424   000E72  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5425   000E74  6EDA               	movwf	fsr2h,c
  5426   000E76  0E2E               	movlw	46
  5427   000E78  6EDF               	movwf	indf2,c
  5428   000E7A                     
  5429                           ; BSR set to: 0
  5430   000E7A  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  5431   000E7C  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  5432   000E7E                     
  5433                           ; BSR set to: 0
  5434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  5435   000E7E  0791               	decf	efgtoa@w& (0+255),f,b
  5436   000E80  A0D8               	btfss	status,0,c
  5437   000E82  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  5438   000E84                     
  5439                           ; BSR set to: 0
  5440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  5441   000E84  0E01               	movlw	1
  5442   000E86  6F88               	movwf	efgtoa@pp& (0+255),b
  5443   000E88  EF56  F007         	goto	l3809
  5444   000E8C                     l3801:
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  5448   000E8C  0E10               	movlw	low _dbuf
  5449   000E8E  25A2               	addwf	efgtoa@n& (0+255),w,b
  5450   000E90  6ED9               	movwf	fsr2l,c
  5451   000E92  0E01               	movlw	high _dbuf
  5452   000E94  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5453   000E96  6EDA               	movwf	fsr2h,c
  5454   000E98  0E30               	movlw	48
  5455   000E9A  6EDF               	movwf	indf2,c
  5456   000E9C                     
  5457                           ; BSR set to: 0
  5458   000E9C  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  5459   000E9E  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  5460   000EA0                     
  5461                           ; BSR set to: 0
  5462                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  5463   000EA0  0791               	decf	efgtoa@w& (0+255),f,b
  5464   000EA2  A0D8               	btfss	status,0,c
  5465   000EA4  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  5466   000EA6                     
  5467                           ; BSR set to: 0
  5468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  5469   000EA6  0784               	decf	efgtoa@t& (0+255),f,b
  5470   000EA8  A0D8               	btfss	status,0,c
  5471   000EAA  0785               	decf	(efgtoa@t+1)& (0+255),f,b
  5472   000EAC                     l3809:
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  5476   000EAC  5184               	movf	efgtoa@t& (0+255),w,b
  5477   000EAE  1185               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5478   000EB0  A4D8               	btfss	status,2,c
  5479   000EB2  EF5D  F007         	goto	u3941
  5480   000EB6  EF5F  F007         	goto	u3940
  5481   000EBA                     u3941:
  5482   000EBA  EF46  F007         	goto	l3801
  5483   000EBE                     u3940:
  5484   000EBE                     
  5485                           ; BSR set to: 0
  5486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5487   000EBE  0E10               	movlw	low _dbuf
  5488   000EC0  25A2               	addwf	efgtoa@n& (0+255),w,b
  5489   000EC2  6ED9               	movwf	fsr2l,c
  5490   000EC4  0E01               	movlw	high _dbuf
  5491   000EC6  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5492   000EC8  6EDA               	movwf	fsr2h,c
  5493   000ECA  518B               	movf	efgtoa@d& (0+255),w,b
  5494   000ECC  0F30               	addlw	48
  5495   000ECE  6EDF               	movwf	indf2,c
  5496   000ED0                     
  5497                           ; BSR set to: 0
  5498   000ED0  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  5499   000ED2  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  5500   000ED4                     
  5501                           ; BSR set to: 0
  5502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  5503   000ED4  0791               	decf	efgtoa@w& (0+255),f,b
  5504   000ED6  A0D8               	btfss	status,0,c
  5505   000ED8  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  5506   000EDA                     
  5507                           ; BSR set to: 0
  5508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  5509   000EDA  C099  F041         	movff	efgtoa@h,___flsub@b
  5510   000EDE  C09A  F042         	movff	efgtoa@h+1,___flsub@b+1
  5511   000EE2  C09B  F043         	movff	efgtoa@h+2,___flsub@b+2
  5512   000EE6  C09C  F044         	movff	efgtoa@h+3,___flsub@b+3
  5513   000EEA  C09D  F02C         	movff	efgtoa@l,___flmul@a
  5514   000EEE  C09E  F02D         	movff	efgtoa@l+1,___flmul@a+1
  5515   000EF2  C09F  F02E         	movff	efgtoa@l+2,___flmul@a+2
  5516   000EF6  C0A0  F02F         	movff	efgtoa@l+3,___flmul@a+3
  5517   000EFA  C0A8  F028         	movff	efgtoa@u,___flmul@b
  5518   000EFE  C0A9  F029         	movff	efgtoa@u+1,___flmul@b+1
  5519   000F02  C0AA  F02A         	movff	efgtoa@u+2,___flmul@b+2
  5520   000F06  C0AB  F02B         	movff	efgtoa@u+3,___flmul@b+3
  5521   000F0A  EC99  F00A         	call	___flmul	;wreg free
  5522   000F0E  C028  F045         	movff	?___flmul,___flsub@a
  5523   000F12  C029  F046         	movff	?___flmul+1,___flsub@a+1
  5524   000F16  C02A  F047         	movff	?___flmul+2,___flsub@a+2
  5525   000F1A  C02B  F048         	movff	?___flmul+3,___flsub@a+3
  5526   000F1E  EC8A  F01C         	call	___flsub	;wreg free
  5527   000F22  C041  F099         	movff	?___flsub,efgtoa@h
  5528   000F26  C042  F09A         	movff	?___flsub+1,efgtoa@h+1
  5529   000F2A  C043  F09B         	movff	?___flsub+2,efgtoa@h+2
  5530   000F2E  C044  F09C         	movff	?___flsub+3,efgtoa@h+3
  5531   000F32                     
  5532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  5533   000F32  C0A8  F00F         	movff	efgtoa@u,___fldiv@b
  5534   000F36  C0A9  F010         	movff	efgtoa@u+1,___fldiv@b+1
  5535   000F3A  C0AA  F011         	movff	efgtoa@u+2,___fldiv@b+2
  5536   000F3E  C0AB  F012         	movff	efgtoa@u+3,___fldiv@b+3
  5537   000F42  0E00               	movlw	0
  5538   000F44  6E13               	movwf	___fldiv@a^0,c
  5539   000F46  0E00               	movlw	0
  5540   000F48  6E14               	movwf	(___fldiv@a+1)^0,c
  5541   000F4A  0E20               	movlw	32
  5542   000F4C  6E15               	movwf	(___fldiv@a+2)^0,c
  5543   000F4E  0E41               	movlw	65
  5544   000F50  6E16               	movwf	(___fldiv@a+3)^0,c
  5545   000F52  ECAE  F00C         	call	___fldiv	;wreg free
  5546   000F56  C00F  F0A8         	movff	?___fldiv,efgtoa@u
  5547   000F5A  C010  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  5548   000F5E  C011  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  5549   000F62  C012  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  5550   000F66                     
  5551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  5552   000F66  0100               	movlb	0	; () banked
  5553   000F68  0780               	decf	efgtoa@ne& (0+255),f,b
  5554   000F6A  A0D8               	btfss	status,0,c
  5555   000F6C  0781               	decf	(efgtoa@ne+1)& (0+255),f,b
  5556   000F6E                     
  5557                           ; BSR set to: 0
  5558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  5559   000F6E  4B97               	infsnz	efgtoa@i& (0+255),f,b
  5560   000F70  2B98               	incf	(efgtoa@i+1)& (0+255),f,b
  5561   000F72                     l3825:
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5565   000F72  518D               	movf	efgtoa@m& (0+255),w,b
  5566   000F74  5D97               	subwf	efgtoa@i& (0+255),w,b
  5567   000F76  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  5568   000F78  0A80               	xorlw	128
  5569   000F7A  6E54               	movwf	??_efgtoa^0,c
  5570   000F7C  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  5571   000F7E  0A80               	xorlw	128
  5572   000F80  5854               	subwfb	??_efgtoa^0,w,c
  5573   000F82  B0D8               	btfsc	status,0,c
  5574   000F84  EFC6  F007         	goto	u3951
  5575   000F88  EFC8  F007         	goto	u3950
  5576   000F8C                     u3951:
  5577   000F8C  EFD6  F007         	goto	l3829
  5578   000F90                     u3950:
  5579   000F90                     
  5580                           ; BSR set to: 0
  5581   000F90  BFA3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5582   000F92  EFD4  F007         	goto	u3961
  5583   000F96  51A3               	movf	(efgtoa@n+1)& (0+255),w,b
  5584   000F98  E109               	bnz	u3960
  5585   000F9A  0E4B               	movlw	75
  5586   000F9C  5DA2               	subwf	efgtoa@n& (0+255),w,b
  5587   000F9E  A0D8               	btfss	status,0,c
  5588   000FA0  EFD4  F007         	goto	u3961
  5589   000FA4  EFD6  F007         	goto	u3960
  5590   000FA8                     u3961:
  5591   000FA8  EFD4  F006         	goto	l3785
  5592   000FAC                     u3960:
  5593   000FAC                     l3829:
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  5597   000FAC  0E00               	movlw	0
  5598   000FAE  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  5599   000FB0  0E4F               	movlw	79
  5600   000FB2  6F97               	movwf	efgtoa@i& (0+255),b
  5601   000FB4                     
  5602                           ; BSR set to: 0
  5603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  5604   000FB4  0E10               	movlw	low _dbuf
  5605   000FB6  2597               	addwf	efgtoa@i& (0+255),w,b
  5606   000FB8  6ED9               	movwf	fsr2l,c
  5607   000FBA  0E01               	movlw	high _dbuf
  5608   000FBC  2198               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5609   000FBE  6EDA               	movwf	fsr2h,c
  5610   000FC0  0E00               	movlw	0
  5611   000FC2  6EDF               	movwf	indf2,c
  5612   000FC4                     
  5613                           ; BSR set to: 0
  5614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  5615   000FC4  0E10               	movlw	low _dbuf
  5616   000FC6  6E54               	movwf	??_efgtoa^0,c
  5617   000FC8  0E01               	movlw	high _dbuf
  5618   000FCA  6E55               	movwf	(??_efgtoa+1)^0,c
  5619   000FCC  51A2               	movf	efgtoa@n& (0+255),w,b
  5620   000FCE  5E54               	subwf	??_efgtoa^0,f,c
  5621   000FD0  51A3               	movf	(efgtoa@n+1)& (0+255),w,b
  5622   000FD2  5A55               	subwfb	(??_efgtoa+1)^0,f,c
  5623   000FD4  5197               	movf	efgtoa@i& (0+255),w,b
  5624   000FD6  2454               	addwf	??_efgtoa^0,w,c
  5625   000FD8  6E01               	movwf	memcpy@d1^0,c
  5626   000FDA  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  5627   000FDC  2055               	addwfc	(??_efgtoa+1)^0,w,c
  5628   000FDE  6E02               	movwf	(memcpy@d1+1)^0,c
  5629   000FE0  0E10               	movlw	low _dbuf
  5630   000FE2  6E03               	movwf	memcpy@s1^0,c
  5631   000FE4  0E01               	movlw	high _dbuf
  5632   000FE6  6E04               	movwf	(memcpy@s1+1)^0,c
  5633   000FE8  C0A2  F005         	movff	efgtoa@n,memcpy@n
  5634   000FEC  C0A3  F006         	movff	efgtoa@n+1,memcpy@n+1
  5635   000FF0  EC62  F01C         	call	_memcpy	;wreg free
  5636   000FF4                     
  5637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  5638   000FF4  0100               	movlb	0	; () banked
  5639   000FF6  51A2               	movf	efgtoa@n& (0+255),w,b
  5640   000FF8  5D97               	subwf	efgtoa@i& (0+255),w,b
  5641   000FFA  6FA2               	movwf	efgtoa@n& (0+255),b
  5642   000FFC  51A3               	movf	(efgtoa@n+1)& (0+255),w,b
  5643   000FFE  5998               	subwfb	(efgtoa@i+1)& (0+255),w,b
  5644   001000  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  5645   001002                     
  5646                           ; BSR set to: 0
  5647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  5648   001002  51A1               	movf	efgtoa@sign& (0+255),w,b
  5649   001004  A4D8               	btfss	status,2,c
  5650   001006  EF07  F008         	goto	u3971
  5651   00100A  EF0A  F008         	goto	u3970
  5652   00100E                     u3971:
  5653   00100E  0E01               	movlw	1
  5654   001010  EF0B  F008         	goto	u3980
  5655   001014                     u3970:
  5656   001014  0E00               	movlw	0
  5657   001016                     u3980:
  5658   001016  6F97               	movwf	efgtoa@i& (0+255),b
  5659   001018  6B98               	clrf	(efgtoa@i+1)& (0+255),b
  5660   00101A                     
  5661                           ; BSR set to: 0
  5662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  5663   00101A  51A1               	movf	efgtoa@sign& (0+255),w,b
  5664   00101C  B4D8               	btfsc	status,2,c
  5665   00101E  EF13  F008         	goto	u3991
  5666   001022  EF15  F008         	goto	u3990
  5667   001026                     u3991:
  5668   001026  EF20  F008         	goto	l3843
  5669   00102A                     u3990:
  5670   00102A                     
  5671                           ; BSR set to: 0
  5672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  5673   00102A  07A2               	decf	efgtoa@n& (0+255),f,b
  5674   00102C  A0D8               	btfss	status,0,c
  5675   00102E  07A3               	decf	(efgtoa@n+1)& (0+255),f,b
  5676   001030  0E10               	movlw	low _dbuf
  5677   001032  25A2               	addwf	efgtoa@n& (0+255),w,b
  5678   001034  6ED9               	movwf	fsr2l,c
  5679   001036  0E01               	movlw	high _dbuf
  5680   001038  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5681   00103A  6EDA               	movwf	fsr2h,c
  5682   00103C  C0A1  FFDF         	movff	efgtoa@sign,indf2
  5683   001040                     l3843:
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  5687   001040  5197               	movf	efgtoa@i& (0+255),w,b
  5688   001042  5F91               	subwf	efgtoa@w& (0+255),f,b
  5689   001044  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  5690   001046  5B92               	subwfb	(efgtoa@w+1)& (0+255),f,b
  5691   001048                     
  5692                           ; BSR set to: 0
  5693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          int) pad(fp, &dbuf[n], w);
  5694   001048  C04D  F011         	movff	efgtoa@fp,pad@fp
  5695   00104C  C04E  F012         	movff	efgtoa@fp+1,pad@fp+1
  5696   001050  0E10               	movlw	low _dbuf
  5697   001052  25A2               	addwf	efgtoa@n& (0+255),w,b
  5698   001054  6E13               	movwf	pad@buf^0,c
  5699   001056  0E01               	movlw	high _dbuf
  5700   001058  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5701   00105A  6E14               	movwf	(pad@buf+1)^0,c
  5702   00105C  C091  F015         	movff	efgtoa@w,pad@p
  5703   001060  C092  F016         	movff	efgtoa@w+1,pad@p+1
  5704   001064  EC79  F018         	call	_pad	;wreg free
  5705   001068  C011  F04D         	movff	?_pad,?_efgtoa
  5706   00106C  C012  F04E         	movff	?_pad+1,?_efgtoa+1
  5707   001070                     l1000:
  5708   001070  0012               	return		;funcret
  5709   001072                     __end_of_efgtoa:
  5710                           	callstack 0
  5711                           
  5712 ;; *************** function _strcpy *****************
  5713 ;; Defined at:
  5714 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5717 ;;		 -> dbuf(80), 
  5718 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5719 ;;		 -> STR_11(4), STR_8(4), 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;  d               2    6[COMRAM] PTR unsigned char 
  5722 ;;		 -> dbuf(80), 
  5723 ;;  s               2    4[COMRAM] PTR const unsigned char 
  5724 ;;		 -> STR_11(4), STR_8(4), 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  2    0[COMRAM] PTR unsigned char 
  5727 ;; Registers used:
  5728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5734 ;;      Params:         4       0       0       0       0       0       0
  5735 ;;      Locals:         4       0       0       0       0       0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0
  5737 ;;      Totals:         8       0       0       0       0       0       0
  5738 ;;Total ram usage:        8 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; Hardware stack levels required when called: 1
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_efgtoa
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text27
  5749   0039E4                     __ptext27:
  5750                           	callstack 0
  5751   0039E4                     _strcpy:
  5752                           	callstack 23
  5753   0039E4  C003  F005         	movff	strcpy@src,strcpy@s
  5754   0039E8  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  5755   0039EC  C001  F007         	movff	strcpy@dest,strcpy@d
  5756   0039F0  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  5757   0039F4                     l3565:
  5758   0039F4  C005  FFF6         	movff	strcpy@s,tblptrl
  5759   0039F8  C006  FFF7         	movff	strcpy@s+1,tblptrh
  5760   0039FC  4A05               	infsnz	strcpy@s^0,f,c
  5761   0039FE  2A06               	incf	(strcpy@s+1)^0,f,c
  5762   003A00                     	if	0	;tblptru may be non-zero
  5763   003A00                     	endif
  5764   003A00                     	if	0	;tblptru may be non-zero
  5765   003A00                     	endif
  5766   003A00  C007  FFD9         	movff	strcpy@d,fsr2l
  5767   003A04  C008  FFDA         	movff	strcpy@d+1,fsr2h
  5768   003A08  4A07               	infsnz	strcpy@d^0,f,c
  5769   003A0A  2A08               	incf	(strcpy@d+1)^0,f,c
  5770   003A0C  0008               	tblrd		*
  5771   003A0E  CFF5 FFDF          	movff	tablat,indf2
  5772   003A12  50DF               	movf	indf2,w,c
  5773   003A14  A4D8               	btfss	status,2,c
  5774   003A16  EF0F  F01D         	goto	u3511
  5775   003A1A  EF11  F01D         	goto	u3510
  5776   003A1E                     u3511:
  5777   003A1E  EFFA  F01C         	goto	l3565
  5778   003A22                     u3510:
  5779   003A22  0012               	return		;funcret
  5780   003A24                     __end_of_strcpy:
  5781                           	callstack 0
  5782                           
  5783 ;; *************** function _pad *****************
  5784 ;; Defined at:
  5785 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5788 ;;		 -> snprintf@f(11), 
  5789 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5790 ;;		 -> dbuf(80), 
  5791 ;;  p               2   20[COMRAM] int 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  w               2   25[COMRAM] int 
  5794 ;;  i               2   23[COMRAM] int 
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  2   16[COMRAM] int 
  5797 ;; Registers used:
  5798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5804 ;;      Params:         6       0       0       0       0       0       0
  5805 ;;      Locals:         4       0       0       0       0       0       0
  5806 ;;      Temps:          1       0       0       0       0       0       0
  5807 ;;      Totals:        11       0       0       0       0       0       0
  5808 ;;Total ram usage:       11 bytes
  5809 ;; Hardware stack levels used: 1
  5810 ;; Hardware stack levels required when called: 4
  5811 ;; This function calls:
  5812 ;;		_fputc
  5813 ;;		_fputs
  5814 ;;		_strlen
  5815 ;; This function is called by:
  5816 ;;		_efgtoa
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text28
  5821   0030F2                     __ptext28:
  5822                           	callstack 0
  5823   0030F2                     _pad:
  5824                           	callstack 20
  5825   0030F2                     
  5826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c
      +                          : 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 145:     w = (p < 0) ? 0 : p;
  5827   0030F2  BE16               	btfsc	(pad@p+1)^0,7,c
  5828   0030F4  EF7E  F018         	goto	u3421
  5829   0030F8  EF80  F018         	goto	u3420
  5830   0030FC                     u3421:
  5831   0030FC  EF86  F018         	goto	l3527
  5832   003100                     u3420:
  5833   003100  C015  F01A         	movff	pad@p,pad@w
  5834   003104  C016  F01B         	movff	pad@p+1,pad@w+1
  5835   003108  EF8A  F018         	goto	l985
  5836   00310C                     l3527:
  5837   00310C  0E00               	movlw	0
  5838   00310E  6E1B               	movwf	(pad@w+1)^0,c
  5839   003110  0E00               	movlw	0
  5840   003112  6E1A               	movwf	pad@w^0,c
  5841   003114                     l985:
  5842                           
  5843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5844   003114  0E00               	movlw	0
  5845   003116  6E19               	movwf	(pad@i+1)^0,c
  5846   003118  0E00               	movlw	0
  5847   00311A  6E18               	movwf	pad@i^0,c
  5848                           
  5849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5850   00311C  EF9C  F018         	goto	l3533
  5851   003120                     l3529:
  5852                           
  5853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5854   003120  0E00               	movlw	0
  5855   003122  6E02               	movwf	(fputc@c+1)^0,c
  5856   003124  0E20               	movlw	32
  5857   003126  6E01               	movwf	fputc@c^0,c
  5858   003128  C011  F003         	movff	pad@fp,fputc@fp
  5859   00312C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5860   003130  ECB3  F016         	call	_fputc	;wreg free
  5861   003134                     
  5862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5863   003134  4A18               	infsnz	pad@i^0,f,c
  5864   003136  2A19               	incf	(pad@i+1)^0,f,c
  5865   003138                     l3533:
  5866                           
  5867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5868   003138  501A               	movf	pad@w^0,w,c
  5869   00313A  5C18               	subwf	pad@i^0,w,c
  5870   00313C  5019               	movf	(pad@i+1)^0,w,c
  5871   00313E  0A80               	xorlw	128
  5872   003140  6E17               	movwf	??_pad^0,c
  5873   003142  501B               	movf	(pad@w+1)^0,w,c
  5874   003144  0A80               	xorlw	128
  5875   003146  5817               	subwfb	??_pad^0,w,c
  5876   003148  A0D8               	btfss	status,0,c
  5877   00314A  EFA9  F018         	goto	u3431
  5878   00314E  EFAB  F018         	goto	u3430
  5879   003152                     u3431:
  5880   003152  EF90  F018         	goto	l3529
  5881   003156                     u3430:
  5882   003156                     
  5883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5884   003156  C013  F00A         	movff	pad@buf,fputs@s
  5885   00315A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5886   00315E  C011  F00C         	movff	pad@fp,fputs@fp
  5887   003162  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5888   003166  ECD0  F01C         	call	_fputs	;wreg free
  5889   00316A                     
  5890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 162:     return (
      +                          int)(strlen(buf) + (size_t)w);
  5891   00316A  C013  F001         	movff	pad@buf,strlen@s
  5892   00316E  C014  F002         	movff	pad@buf+1,strlen@s+1
  5893   003172  EC69  F01D         	call	_strlen	;wreg free
  5894   003176  501A               	movf	pad@w^0,w,c
  5895   003178  2401               	addwf	?_strlen^0,w,c
  5896   00317A  6E11               	movwf	?_pad^0,c
  5897   00317C  501B               	movf	(pad@w+1)^0,w,c
  5898   00317E  2002               	addwfc	(?_strlen+1)^0,w,c
  5899   003180  6E12               	movwf	(?_pad+1)^0,c
  5900   003182  0012               	return		;funcret
  5901   003184                     __end_of_pad:
  5902                           	callstack 0
  5903                           
  5904 ;; *************** function _strlen *****************
  5905 ;; Defined at:
  5906 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5909 ;;		 -> dbuf(80), 
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5912 ;;		 -> dbuf(80), 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  2    0[COMRAM] unsigned int 
  5915 ;; Registers used:
  5916 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5922 ;;      Params:         2       0       0       0       0       0       0
  5923 ;;      Locals:         2       0       0       0       0       0       0
  5924 ;;      Temps:          0       0       0       0       0       0       0
  5925 ;;      Totals:         4       0       0       0       0       0       0
  5926 ;;Total ram usage:        4 bytes
  5927 ;; Hardware stack levels used: 1
  5928 ;; Hardware stack levels required when called: 1
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_pad
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text29
  5937   003AD2                     __ptext29:
  5938                           	callstack 0
  5939   003AD2                     _strlen:
  5940                           	callstack 22
  5941   003AD2  C001  F003         	movff	strlen@s,strlen@a
  5942   003AD6  C002  F004         	movff	strlen@s+1,strlen@a+1
  5943   003ADA  EF71  F01D         	goto	l3147
  5944   003ADE                     l3145:
  5945   003ADE  4A01               	infsnz	strlen@s^0,f,c
  5946   003AE0  2A02               	incf	(strlen@s+1)^0,f,c
  5947   003AE2                     l3147:
  5948   003AE2  C001  FFD9         	movff	strlen@s,fsr2l
  5949   003AE6  C002  FFDA         	movff	strlen@s+1,fsr2h
  5950   003AEA  50DF               	movf	indf2,w,c
  5951   003AEC  A4D8               	btfss	status,2,c
  5952   003AEE  EF7B  F01D         	goto	u2831
  5953   003AF2  EF7D  F01D         	goto	u2830
  5954   003AF6                     u2831:
  5955   003AF6  EF6F  F01D         	goto	l3145
  5956   003AFA                     u2830:
  5957   003AFA  5003               	movf	strlen@a^0,w,c
  5958   003AFC  5C01               	subwf	strlen@s^0,w,c
  5959   003AFE  6E01               	movwf	?_strlen^0,c
  5960   003B00  5004               	movf	(strlen@a+1)^0,w,c
  5961   003B02  5802               	subwfb	(strlen@s+1)^0,w,c
  5962   003B04  6E02               	movwf	(?_strlen+1)^0,c
  5963   003B06  0012               	return		;funcret
  5964   003B08                     __end_of_strlen:
  5965                           	callstack 0
  5966                           
  5967 ;; *************** function _fputs *****************
  5968 ;; Defined at:
  5969 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5972 ;;		 -> dbuf(80), 
  5973 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5974 ;;		 -> snprintf@f(11), 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  i               2   14[COMRAM] int 
  5977 ;;  c               1   13[COMRAM] unsigned char 
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  2    9[COMRAM] int 
  5980 ;; Registers used:
  5981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5987 ;;      Params:         4       0       0       0       0       0       0
  5988 ;;      Locals:         3       0       0       0       0       0       0
  5989 ;;      Temps:          0       0       0       0       0       0       0
  5990 ;;      Totals:         7       0       0       0       0       0       0
  5991 ;;Total ram usage:        7 bytes
  5992 ;; Hardware stack levels used: 1
  5993 ;; Hardware stack levels required when called: 3
  5994 ;; This function calls:
  5995 ;;		_fputc
  5996 ;; This function is called by:
  5997 ;;		_pad
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text30
  6002   0039A0                     __ptext30:
  6003                           	callstack 0
  6004   0039A0                     _fputs:
  6005                           	callstack 20
  6006   0039A0  0E00               	movlw	0
  6007   0039A2  6E10               	movwf	(fputs@i+1)^0,c
  6008   0039A4  0E00               	movlw	0
  6009   0039A6  6E0F               	movwf	fputs@i^0,c
  6010   0039A8  EFE1  F01C         	goto	l3141
  6011   0039AC                     l3137:
  6012   0039AC  C00E  F001         	movff	fputs@c,fputc@c
  6013   0039B0  6A02               	clrf	(fputc@c+1)^0,c
  6014   0039B2  C00C  F003         	movff	fputs@fp,fputc@fp
  6015   0039B6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6016   0039BA  ECB3  F016         	call	_fputc	;wreg free
  6017   0039BE  4A0F               	infsnz	fputs@i^0,f,c
  6018   0039C0  2A10               	incf	(fputs@i+1)^0,f,c
  6019   0039C2                     l3141:
  6020   0039C2  500F               	movf	fputs@i^0,w,c
  6021   0039C4  240A               	addwf	fputs@s^0,w,c
  6022   0039C6  6ED9               	movwf	fsr2l,c
  6023   0039C8  5010               	movf	(fputs@i+1)^0,w,c
  6024   0039CA  200B               	addwfc	(fputs@s+1)^0,w,c
  6025   0039CC  6EDA               	movwf	fsr2h,c
  6026   0039CE  50DF               	movf	indf2,w,c
  6027   0039D0  6E0E               	movwf	fputs@c^0,c
  6028   0039D2  500E               	movf	fputs@c^0,w,c
  6029   0039D4  A4D8               	btfss	status,2,c
  6030   0039D6  EFEF  F01C         	goto	u2821
  6031   0039DA  EFF1  F01C         	goto	u2820
  6032   0039DE                     u2821:
  6033   0039DE  EFD6  F01C         	goto	l3137
  6034   0039E2                     u2820:
  6035   0039E2  0012               	return		;funcret
  6036   0039E4                     __end_of_fputs:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function _fputc *****************
  6040 ;; Defined at:
  6041 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  c               2    0[COMRAM] int 
  6044 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6045 ;;		 -> snprintf@f(11), 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;		None
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  2    0[COMRAM] int 
  6050 ;; Registers used:
  6051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6057 ;;      Params:         4       0       0       0       0       0       0
  6058 ;;      Locals:         0       0       0       0       0       0       0
  6059 ;;      Temps:          5       0       0       0       0       0       0
  6060 ;;      Totals:         9       0       0       0       0       0       0
  6061 ;;Total ram usage:        9 bytes
  6062 ;; Hardware stack levels used: 1
  6063 ;; Hardware stack levels required when called: 2
  6064 ;; This function calls:
  6065 ;;		_putch
  6066 ;; This function is called by:
  6067 ;;		_pad
  6068 ;;		_vfpfcnvrt
  6069 ;;		_fputs
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text31
  6074   002D66                     __ptext31:
  6075                           	callstack 0
  6076   002D66                     _fputc:
  6077                           	callstack 23
  6078   002D66  5003               	movf	fputc@fp^0,w,c
  6079   002D68  1004               	iorwf	(fputc@fp+1)^0,w,c
  6080   002D6A  B4D8               	btfsc	status,2,c
  6081   002D6C  EFBA  F016         	goto	u2391
  6082   002D70  EFBC  F016         	goto	u2390
  6083   002D74                     u2391:
  6084   002D74  EFC5  F016         	goto	l2923
  6085   002D78                     u2390:
  6086   002D78  5003               	movf	fputc@fp^0,w,c
  6087   002D7A  1004               	iorwf	(fputc@fp+1)^0,w,c
  6088   002D7C  A4D8               	btfss	status,2,c
  6089   002D7E  EFC3  F016         	goto	u2401
  6090   002D82  EFC5  F016         	goto	u2400
  6091   002D86                     u2401:
  6092   002D86  EFCA  F016         	goto	l2925
  6093   002D8A                     u2400:
  6094   002D8A                     l2923:
  6095   002D8A  5001               	movf	fputc@c^0,w,c
  6096   002D8C  ECFD  F01D         	call	_putch
  6097   002D90  EF17  F017         	goto	l1166
  6098   002D94                     l2925:
  6099   002D94  EE20 F009          	lfsr	2,9
  6100   002D98  5003               	movf	fputc@fp^0,w,c
  6101   002D9A  26D9               	addwf	fsr2l,f,c
  6102   002D9C  5004               	movf	(fputc@fp+1)^0,w,c
  6103   002D9E  22DA               	addwfc	fsr2h,f,c
  6104   002DA0  50DE               	movf	postinc2,w,c
  6105   002DA2  10DE               	iorwf	postinc2,w,c
  6106   002DA4  B4D8               	btfsc	status,2,c
  6107   002DA6  EFD7  F016         	goto	u2411
  6108   002DAA  EFD9  F016         	goto	u2410
  6109   002DAE                     u2411:
  6110   002DAE  EFF4  F016         	goto	l2929
  6111   002DB2                     u2410:
  6112   002DB2  EE20 F009          	lfsr	2,9
  6113   002DB6  5003               	movf	fputc@fp^0,w,c
  6114   002DB8  26D9               	addwf	fsr2l,f,c
  6115   002DBA  5004               	movf	(fputc@fp+1)^0,w,c
  6116   002DBC  22DA               	addwfc	fsr2h,f,c
  6117   002DBE  EE10 F003          	lfsr	1,3
  6118   002DC2  5003               	movf	fputc@fp^0,w,c
  6119   002DC4  26E1               	addwf	fsr1l,f,c
  6120   002DC6  5004               	movf	(fputc@fp+1)^0,w,c
  6121   002DC8  22E2               	addwfc	fsr1h,f,c
  6122   002DCA  50DE               	movf	postinc2,w,c
  6123   002DCC  5CE6               	subwf	postinc1,w,c
  6124   002DCE  50E6               	movf	postinc1,w,c
  6125   002DD0  0A80               	xorlw	128
  6126   002DD2  6E09               	movwf	(??_fputc+4)^0,c
  6127   002DD4  50DE               	movf	postinc2,w,c
  6128   002DD6  0A80               	xorlw	128
  6129   002DD8  5809               	subwfb	(??_fputc+4)^0,w,c
  6130   002DDA  B0D8               	btfsc	status,0,c
  6131   002DDC  EFF2  F016         	goto	u2421
  6132   002DE0  EFF4  F016         	goto	u2420
  6133   002DE4                     u2421:
  6134   002DE4  EF17  F017         	goto	l1166
  6135   002DE8                     u2420:
  6136   002DE8                     l2929:
  6137   002DE8  EE20 F003          	lfsr	2,3
  6138   002DEC  5003               	movf	fputc@fp^0,w,c
  6139   002DEE  26D9               	addwf	fsr2l,f,c
  6140   002DF0  5004               	movf	(fputc@fp+1)^0,w,c
  6141   002DF2  22DA               	addwfc	fsr2h,f,c
  6142   002DF4  CFDE F005          	movff	postinc2,??_fputc
  6143   002DF8  CFDD F006          	movff	postdec2,??_fputc+1
  6144   002DFC  C003  FFD9         	movff	fputc@fp,fsr2l
  6145   002E00  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6146   002E04  CFDE F007          	movff	postinc2,??_fputc+2
  6147   002E08  CFDD F008          	movff	postdec2,??_fputc+3
  6148   002E0C  5005               	movf	??_fputc^0,w,c
  6149   002E0E  2407               	addwf	(??_fputc+2)^0,w,c
  6150   002E10  6ED9               	movwf	fsr2l,c
  6151   002E12  5006               	movf	(??_fputc+1)^0,w,c
  6152   002E14  2008               	addwfc	(??_fputc+3)^0,w,c
  6153   002E16  6EDA               	movwf	fsr2h,c
  6154   002E18  C001  FFDF         	movff	fputc@c,indf2
  6155   002E1C  EE20 F003          	lfsr	2,3
  6156   002E20  5003               	movf	fputc@fp^0,w,c
  6157   002E22  26D9               	addwf	fsr2l,f,c
  6158   002E24  5004               	movf	(fputc@fp+1)^0,w,c
  6159   002E26  22DA               	addwfc	fsr2h,f,c
  6160   002E28  2ADE               	incf	postinc2,f,c
  6161   002E2A  0E00               	movlw	0
  6162   002E2C  22DD               	addwfc	postdec2,f,c
  6163   002E2E                     l1166:
  6164   002E2E  0012               	return		;funcret
  6165   002E30                     __end_of_fputc:
  6166                           	callstack 0
  6167                           
  6168 ;; *************** function _putch *****************
  6169 ;; Defined at:
  6170 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;  c               1    wreg     unsigned char 
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;  c               1    0[COMRAM] unsigned char 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      void 
  6177 ;; Registers used:
  6178 ;;		wreg
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6184 ;;      Params:         0       0       0       0       0       0       0
  6185 ;;      Locals:         0       0       0       0       0       0       0
  6186 ;;      Temps:          0       0       0       0       0       0       0
  6187 ;;      Totals:         0       0       0       0       0       0       0
  6188 ;;Total ram usage:        0 bytes
  6189 ;; Hardware stack levels used: 1
  6190 ;; Hardware stack levels required when called: 1
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		_fputc
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text32
  6199   003BFA                     __ptext32:
  6200                           	callstack 0
  6201   003BFA                     _putch:
  6202                           	callstack 23
  6203   003BFA  0012               	return		;funcret
  6204   003BFC                     __end_of_putch:
  6205                           	callstack 0
  6206                           
  6207 ;; *************** function _memcpy *****************
  6208 ;; Defined at:
  6209 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  d1              2    0[COMRAM] PTR void 
  6212 ;;		 -> dbuf(80), 
  6213 ;;  s1              2    2[COMRAM] PTR const void 
  6214 ;;		 -> dbuf(80), 
  6215 ;;  n               2    4[COMRAM] unsigned int 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6218 ;;		 -> dbuf(80), 
  6219 ;;  d               2    6[COMRAM] PTR unsigned char 
  6220 ;;		 -> dbuf(80), 
  6221 ;;  tmp             1   10[COMRAM] unsigned char 
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  2    0[COMRAM] PTR void 
  6224 ;; Registers used:
  6225 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6231 ;;      Params:         6       0       0       0       0       0       0
  6232 ;;      Locals:         5       0       0       0       0       0       0
  6233 ;;      Temps:          0       0       0       0       0       0       0
  6234 ;;      Totals:        11       0       0       0       0       0       0
  6235 ;;Total ram usage:       11 bytes
  6236 ;; Hardware stack levels used: 1
  6237 ;; Hardware stack levels required when called: 1
  6238 ;; This function calls:
  6239 ;;		Nothing
  6240 ;; This function is called by:
  6241 ;;		_efgtoa
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           
  6245                           	psect	text33
  6246   0038C4                     __ptext33:
  6247                           	callstack 0
  6248   0038C4                     _memcpy:
  6249                           	callstack 23
  6250   0038C4  C003  F009         	movff	memcpy@s1,memcpy@s
  6251   0038C8  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  6252   0038CC  C001  F007         	movff	memcpy@d1,memcpy@d
  6253   0038D0  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  6254   0038D4  EF7C  F01C         	goto	l3609
  6255   0038D8                     l3601:
  6256   0038D8  C009  FFD9         	movff	memcpy@s,fsr2l
  6257   0038DC  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  6258   0038E0  50DF               	movf	indf2,w,c
  6259   0038E2  6E0B               	movwf	memcpy@tmp^0,c
  6260   0038E4  4A09               	infsnz	memcpy@s^0,f,c
  6261   0038E6  2A0A               	incf	(memcpy@s+1)^0,f,c
  6262   0038E8  C007  FFD9         	movff	memcpy@d,fsr2l
  6263   0038EC  C008  FFDA         	movff	memcpy@d+1,fsr2h
  6264   0038F0  C00B  FFDF         	movff	memcpy@tmp,indf2
  6265   0038F4  4A07               	infsnz	memcpy@d^0,f,c
  6266   0038F6  2A08               	incf	(memcpy@d+1)^0,f,c
  6267   0038F8                     l3609:
  6268   0038F8  0605               	decf	memcpy@n^0,f,c
  6269   0038FA  A0D8               	btfss	status,0,c
  6270   0038FC  0606               	decf	(memcpy@n+1)^0,f,c
  6271   0038FE  2805               	incf	memcpy@n^0,w,c
  6272   003900  E106               	bnz	u3631
  6273   003902  2806               	incf	(memcpy@n+1)^0,w,c
  6274   003904  A4D8               	btfss	status,2,c
  6275   003906  EF87  F01C         	goto	u3631
  6276   00390A  EF89  F01C         	goto	u3630
  6277   00390E                     u3631:
  6278   00390E  EF6C  F01C         	goto	l3601
  6279   003912                     u3630:
  6280   003912  0012               	return		;funcret
  6281   003914                     __end_of_memcpy:
  6282                           	callstack 0
  6283                           
  6284 ;; *************** function _labs *****************
  6285 ;; Defined at:
  6286 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  a               4    0[COMRAM] long 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;		None
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  4    0[COMRAM] long 
  6293 ;; Registers used:
  6294 ;;		wreg, status,2, status,0
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6300 ;;      Params:         4       0       0       0       0       0       0
  6301 ;;      Locals:         0       0       0       0       0       0       0
  6302 ;;      Temps:          4       0       0       0       0       0       0
  6303 ;;      Totals:         8       0       0       0       0       0       0
  6304 ;;Total ram usage:        8 bytes
  6305 ;; Hardware stack levels used: 1
  6306 ;; Hardware stack levels required when called: 1
  6307 ;; This function calls:
  6308 ;;		Nothing
  6309 ;; This function is called by:
  6310 ;;		_efgtoa
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           	psect	text34
  6315   003554                     __ptext34:
  6316                           	callstack 0
  6317   003554                     _labs:
  6318                           	callstack 23
  6319   003554  BE04               	btfsc	(labs@a+3)^0,7,c
  6320   003556  EFB9  F01A         	goto	u3520
  6321   00355A  5004               	movf	(labs@a+3)^0,w,c
  6322   00355C  1003               	iorwf	(labs@a+2)^0,w,c
  6323   00355E  1002               	iorwf	(labs@a+1)^0,w,c
  6324   003560  E106               	bnz	u3521
  6325   003562  0401               	decf	labs@a^0,w,c
  6326   003564  B0D8               	btfsc	status,0,c
  6327   003566  EFB7  F01A         	goto	u3521
  6328   00356A  EFB9  F01A         	goto	u3520
  6329   00356E                     u3521:
  6330   00356E  EFD4  F01A         	goto	l1145
  6331   003572                     u3520:
  6332   003572  C001  F005         	movff	labs@a,??_labs
  6333   003576  C002  F006         	movff	labs@a+1,??_labs+1
  6334   00357A  C003  F007         	movff	labs@a+2,??_labs+2
  6335   00357E  C004  F008         	movff	labs@a+3,??_labs+3
  6336   003582  1E05               	comf	??_labs^0,f,c
  6337   003584  1E06               	comf	(??_labs+1)^0,f,c
  6338   003586  1E07               	comf	(??_labs+2)^0,f,c
  6339   003588  1E08               	comf	(??_labs+3)^0,f,c
  6340   00358A  2A05               	incf	??_labs^0,f,c
  6341   00358C  0E00               	movlw	0
  6342   00358E  2206               	addwfc	(??_labs+1)^0,f,c
  6343   003590  2207               	addwfc	(??_labs+2)^0,f,c
  6344   003592  2208               	addwfc	(??_labs+3)^0,f,c
  6345   003594  C005  F001         	movff	??_labs,?_labs
  6346   003598  C006  F002         	movff	??_labs+1,?_labs+1
  6347   00359C  C007  F003         	movff	??_labs+2,?_labs+2
  6348   0035A0  C008  F004         	movff	??_labs+3,?_labs+3
  6349   0035A4  EFDC  F01A         	goto	l1148
  6350   0035A8                     l1145:
  6351   0035A8  C001  F001         	movff	labs@a,?_labs
  6352   0035AC  C002  F002         	movff	labs@a+1,?_labs+1
  6353   0035B0  C003  F003         	movff	labs@a+2,?_labs+2
  6354   0035B4  C004  F004         	movff	labs@a+3,?_labs+3
  6355   0035B8                     l1148:
  6356   0035B8  0012               	return		;funcret
  6357   0035BA                     __end_of_labs:
  6358                           	callstack 0
  6359                           
  6360 ;; *************** function _floorf *****************
  6361 ;; Defined at:
  6362 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;  x               4   39[COMRAM] float 
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;  u               4   55[COMRAM] struct .
  6367 ;;  m               4   49[COMRAM] unsigned long 
  6368 ;;  e               2   53[COMRAM] int 
  6369 ;; Return value:  Size  Location     Type
  6370 ;;                  4   39[COMRAM] float 
  6371 ;; Registers used:
  6372 ;;		wreg, status,2, status,0
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/0
  6375 ;;		On exit  : 0/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6378 ;;      Params:         4       0       0       0       0       0       0
  6379 ;;      Locals:        10       0       0       0       0       0       0
  6380 ;;      Temps:          6       0       0       0       0       0       0
  6381 ;;      Totals:        20       0       0       0       0       0       0
  6382 ;;Total ram usage:       20 bytes
  6383 ;; Hardware stack levels used: 1
  6384 ;; Hardware stack levels required when called: 1
  6385 ;; This function calls:
  6386 ;;		Nothing
  6387 ;; This function is called by:
  6388 ;;		_efgtoa
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           	psect	text35
  6393   00207C                     __ptext35:
  6394                           	callstack 0
  6395   00207C                     _floorf:
  6396                           	callstack 23
  6397   00207C  C100  F038         	movff	floorf@F526,floorf@u
  6398   002080  C101  F039         	movff	floorf@F526+1,floorf@u+1
  6399   002084  C102  F03A         	movff	floorf@F526+2,floorf@u+2
  6400   002088  C103  F03B         	movff	floorf@F526+3,floorf@u+3
  6401   00208C  C028  F038         	movff	floorf@x,floorf@u
  6402   002090  C029  F039         	movff	floorf@x+1,floorf@u+1
  6403   002094  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  6404   002098  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  6405   00209C  0E81               	movlw	129
  6406   00209E  6E2C               	movwf	??_floorf^0,c
  6407   0020A0  0EFF               	movlw	255
  6408   0020A2  6E2D               	movwf	(??_floorf+1)^0,c
  6409   0020A4  C038  F02E         	movff	floorf@u,??_floorf+2
  6410   0020A8  C039  F02F         	movff	floorf@u+1,??_floorf+3
  6411   0020AC  C03A  F030         	movff	floorf@u+2,??_floorf+4
  6412   0020B0  C03B  F031         	movff	floorf@u+3,??_floorf+5
  6413   0020B4  0E18               	movlw	24
  6414   0020B6  EF62  F010         	goto	u3530
  6415   0020BA                     u3535:
  6416   0020BA  90D8               	bcf	status,0,c
  6417   0020BC  3231               	rrcf	(??_floorf+5)^0,f,c
  6418   0020BE  3230               	rrcf	(??_floorf+4)^0,f,c
  6419   0020C0  322F               	rrcf	(??_floorf+3)^0,f,c
  6420   0020C2  322E               	rrcf	(??_floorf+2)^0,f,c
  6421   0020C4                     u3530:
  6422   0020C4  2EE8               	decfsz	wreg,f,c
  6423   0020C6  EF5D  F010         	goto	u3535
  6424   0020CA  502E               	movf	(??_floorf+2)^0,w,c
  6425   0020CC  242C               	addwf	??_floorf^0,w,c
  6426   0020CE  6E36               	movwf	floorf@e^0,c
  6427   0020D0  0E00               	movlw	0
  6428   0020D2  202D               	addwfc	(??_floorf+1)^0,w,c
  6429   0020D4  6E37               	movwf	(floorf@e+1)^0,c
  6430   0020D6  BE37               	btfsc	(floorf@e+1)^0,7,c
  6431   0020D8  EF77  F010         	goto	u3541
  6432   0020DC  5037               	movf	(floorf@e+1)^0,w,c
  6433   0020DE  E109               	bnz	u3540
  6434   0020E0  0E17               	movlw	23
  6435   0020E2  5C36               	subwf	floorf@e^0,w,c
  6436   0020E4  A0D8               	btfss	status,0,c
  6437   0020E6  EF77  F010         	goto	u3541
  6438   0020EA  EF79  F010         	goto	u3540
  6439   0020EE                     u3541:
  6440   0020EE  EF83  F010         	goto	l3577
  6441   0020F2                     u3540:
  6442   0020F2                     l3575:
  6443   0020F2  C028  F028         	movff	floorf@x,?_floorf
  6444   0020F6  C029  F029         	movff	floorf@x+1,?_floorf+1
  6445   0020FA  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  6446   0020FE  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  6447   002102  EF46  F011         	goto	l1120
  6448   002106                     l3577:
  6449   002106  BE37               	btfsc	(floorf@e+1)^0,7,c
  6450   002108  EF88  F010         	goto	u3551
  6451   00210C  EF8A  F010         	goto	u3550
  6452   002110                     u3551:
  6453   002110  EFFA  F010         	goto	l3587
  6454   002114                     u3550:
  6455   002114  C036  F02C         	movff	floorf@e,??_floorf
  6456   002118  0EFF               	movlw	255
  6457   00211A  6E2D               	movwf	(??_floorf+1)^0,c
  6458   00211C  0EFF               	movlw	255
  6459   00211E  6E2E               	movwf	(??_floorf+2)^0,c
  6460   002120  0E7F               	movlw	127
  6461   002122  6E2F               	movwf	(??_floorf+3)^0,c
  6462   002124  0E00               	movlw	0
  6463   002126  6E30               	movwf	(??_floorf+4)^0,c
  6464   002128                     u3565:
  6465   002128  662C               	tstfsz	??_floorf^0,c
  6466   00212A  EF99  F010         	goto	u3566
  6467   00212E  EFA1  F010         	goto	u3567
  6468   002132                     u3566:
  6469   002132  3430               	rlcf	(??_floorf+4)^0,w,c
  6470   002134  3230               	rrcf	(??_floorf+4)^0,f,c
  6471   002136  322F               	rrcf	(??_floorf+3)^0,f,c
  6472   002138  322E               	rrcf	(??_floorf+2)^0,f,c
  6473   00213A  322D               	rrcf	(??_floorf+1)^0,f,c
  6474   00213C  2E2C               	decfsz	??_floorf^0,f,c
  6475   00213E  EF94  F010         	goto	u3565
  6476   002142                     u3567:
  6477   002142  C02D  F032         	movff	??_floorf+1,floorf@m
  6478   002146  C02E  F033         	movff	??_floorf+2,floorf@m+1
  6479   00214A  C02F  F034         	movff	??_floorf+3,floorf@m+2
  6480   00214E  C030  F035         	movff	??_floorf+4,floorf@m+3
  6481   002152  5032               	movf	floorf@m^0,w,c
  6482   002154  1438               	andwf	floorf@u^0,w,c
  6483   002156  6E2C               	movwf	??_floorf^0,c
  6484   002158  5033               	movf	(floorf@m+1)^0,w,c
  6485   00215A  1439               	andwf	(floorf@u+1)^0,w,c
  6486   00215C  6E2D               	movwf	(??_floorf+1)^0,c
  6487   00215E  5034               	movf	(floorf@m+2)^0,w,c
  6488   002160  143A               	andwf	(floorf@u+2)^0,w,c
  6489   002162  6E2E               	movwf	(??_floorf+2)^0,c
  6490   002164  5035               	movf	(floorf@m+3)^0,w,c
  6491   002166  143B               	andwf	(floorf@u+3)^0,w,c
  6492   002168  6E2F               	movwf	(??_floorf+3)^0,c
  6493   00216A  502C               	movf	??_floorf^0,w,c
  6494   00216C  102D               	iorwf	(??_floorf+1)^0,w,c
  6495   00216E  102E               	iorwf	(??_floorf+2)^0,w,c
  6496   002170  102F               	iorwf	(??_floorf+3)^0,w,c
  6497   002172  A4D8               	btfss	status,2,c
  6498   002174  EFBE  F010         	goto	u3571
  6499   002178  EFC0  F010         	goto	u3570
  6500   00217C                     u3571:
  6501   00217C  EFC2  F010         	goto	l3583
  6502   002180                     u3570:
  6503   002180  EF79  F010         	goto	l3575
  6504   002184                     l3583:
  6505   002184  C038  F02C         	movff	floorf@u,??_floorf
  6506   002188  C039  F02D         	movff	floorf@u+1,??_floorf+1
  6507   00218C  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  6508   002190  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  6509   002194  0E20               	movlw	32
  6510   002196  EFD2  F010         	goto	u3580
  6511   00219A                     u3585:
  6512   00219A  90D8               	bcf	status,0,c
  6513   00219C  322F               	rrcf	(??_floorf+3)^0,f,c
  6514   00219E  322E               	rrcf	(??_floorf+2)^0,f,c
  6515   0021A0  322D               	rrcf	(??_floorf+1)^0,f,c
  6516   0021A2  322C               	rrcf	??_floorf^0,f,c
  6517   0021A4                     u3580:
  6518   0021A4  2EE8               	decfsz	wreg,f,c
  6519   0021A6  EFCD  F010         	goto	u3585
  6520   0021AA  502C               	movf	??_floorf^0,w,c
  6521   0021AC  102D               	iorwf	(??_floorf+1)^0,w,c
  6522   0021AE  102E               	iorwf	(??_floorf+2)^0,w,c
  6523   0021B0  102F               	iorwf	(??_floorf+3)^0,w,c
  6524   0021B2  B4D8               	btfsc	status,2,c
  6525   0021B4  EFDE  F010         	goto	u3591
  6526   0021B8  EFE0  F010         	goto	u3590
  6527   0021BC                     u3591:
  6528   0021BC  EFE8  F010         	goto	l1123
  6529   0021C0                     u3590:
  6530   0021C0  5032               	movf	floorf@m^0,w,c
  6531   0021C2  2638               	addwf	floorf@u^0,f,c
  6532   0021C4  5033               	movf	(floorf@m+1)^0,w,c
  6533   0021C6  2239               	addwfc	(floorf@u+1)^0,f,c
  6534   0021C8  5034               	movf	(floorf@m+2)^0,w,c
  6535   0021CA  223A               	addwfc	(floorf@u+2)^0,f,c
  6536   0021CC  5035               	movf	(floorf@m+3)^0,w,c
  6537   0021CE  223B               	addwfc	(floorf@u+3)^0,f,c
  6538   0021D0                     l1123:
  6539   0021D0  1C32               	comf	floorf@m^0,w,c
  6540   0021D2  6E2C               	movwf	??_floorf^0,c
  6541   0021D4  1C33               	comf	(floorf@m+1)^0,w,c
  6542   0021D6  6E2D               	movwf	(??_floorf+1)^0,c
  6543   0021D8  1C34               	comf	(floorf@m+2)^0,w,c
  6544   0021DA  6E2E               	movwf	(??_floorf+2)^0,c
  6545   0021DC  1C35               	comf	(floorf@m+3)^0,w,c
  6546   0021DE  6E2F               	movwf	(??_floorf+3)^0,c
  6547   0021E0  502C               	movf	??_floorf^0,w,c
  6548   0021E2  1638               	andwf	floorf@u^0,f,c
  6549   0021E4  502D               	movf	(??_floorf+1)^0,w,c
  6550   0021E6  1639               	andwf	(floorf@u+1)^0,f,c
  6551   0021E8  502E               	movf	(??_floorf+2)^0,w,c
  6552   0021EA  163A               	andwf	(floorf@u+2)^0,f,c
  6553   0021EC  502F               	movf	(??_floorf+3)^0,w,c
  6554   0021EE  163B               	andwf	(floorf@u+3)^0,f,c
  6555   0021F0  EF3E  F011         	goto	l3595
  6556   0021F4                     l3587:
  6557   0021F4  C038  F02C         	movff	floorf@u,??_floorf
  6558   0021F8  C039  F02D         	movff	floorf@u+1,??_floorf+1
  6559   0021FC  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  6560   002200  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  6561   002204  0E20               	movlw	32
  6562   002206  EF0A  F011         	goto	u3600
  6563   00220A                     u3605:
  6564   00220A  90D8               	bcf	status,0,c
  6565   00220C  322F               	rrcf	(??_floorf+3)^0,f,c
  6566   00220E  322E               	rrcf	(??_floorf+2)^0,f,c
  6567   002210  322D               	rrcf	(??_floorf+1)^0,f,c
  6568   002212  322C               	rrcf	??_floorf^0,f,c
  6569   002214                     u3600:
  6570   002214  2EE8               	decfsz	wreg,f,c
  6571   002216  EF05  F011         	goto	u3605
  6572   00221A  502C               	movf	??_floorf^0,w,c
  6573   00221C  102D               	iorwf	(??_floorf+1)^0,w,c
  6574   00221E  102E               	iorwf	(??_floorf+2)^0,w,c
  6575   002220  102F               	iorwf	(??_floorf+3)^0,w,c
  6576   002222  A4D8               	btfss	status,2,c
  6577   002224  EF16  F011         	goto	u3611
  6578   002228  EF18  F011         	goto	u3610
  6579   00222C                     u3611:
  6580   00222C  EF22  F011         	goto	l3591
  6581   002230                     u3610:
  6582   002230  0E00               	movlw	0
  6583   002232  6E38               	movwf	floorf@u^0,c
  6584   002234  0E00               	movlw	0
  6585   002236  6E39               	movwf	(floorf@u+1)^0,c
  6586   002238  0E00               	movlw	0
  6587   00223A  6E3A               	movwf	(floorf@u+2)^0,c
  6588   00223C  0E00               	movlw	0
  6589   00223E  6E3B               	movwf	(floorf@u+3)^0,c
  6590   002240  EF3E  F011         	goto	l3595
  6591   002244                     l3591:
  6592   002244  90D8               	bcf	status,0,c
  6593   002246  3438               	rlcf	floorf@u^0,w,c
  6594   002248  6E2C               	movwf	??_floorf^0,c
  6595   00224A  3439               	rlcf	(floorf@u+1)^0,w,c
  6596   00224C  6E2D               	movwf	(??_floorf+1)^0,c
  6597   00224E  343A               	rlcf	(floorf@u+2)^0,w,c
  6598   002250  6E2E               	movwf	(??_floorf+2)^0,c
  6599   002252  343B               	rlcf	(floorf@u+3)^0,w,c
  6600   002254  6E2F               	movwf	(??_floorf+3)^0,c
  6601   002256  502C               	movf	??_floorf^0,w,c
  6602   002258  102D               	iorwf	(??_floorf+1)^0,w,c
  6603   00225A  102E               	iorwf	(??_floorf+2)^0,w,c
  6604   00225C  102F               	iorwf	(??_floorf+3)^0,w,c
  6605   00225E  B4D8               	btfsc	status,2,c
  6606   002260  EF34  F011         	goto	u3621
  6607   002264  EF36  F011         	goto	u3620
  6608   002268                     u3621:
  6609   002268  EF3E  F011         	goto	l3595
  6610   00226C                     u3620:
  6611   00226C  0E00               	movlw	0
  6612   00226E  6E38               	movwf	floorf@u^0,c
  6613   002270  0E00               	movlw	0
  6614   002272  6E39               	movwf	(floorf@u+1)^0,c
  6615   002274  0E80               	movlw	128
  6616   002276  6E3A               	movwf	(floorf@u+2)^0,c
  6617   002278  0EBF               	movlw	191
  6618   00227A  6E3B               	movwf	(floorf@u+3)^0,c
  6619   00227C                     l3595:
  6620   00227C  C038  F028         	movff	floorf@u,?_floorf
  6621   002280  C039  F029         	movff	floorf@u+1,?_floorf+1
  6622   002284  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  6623   002288  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  6624   00228C                     l1120:
  6625   00228C  0012               	return		;funcret
  6626   00228E                     __end_of_floorf:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function ___fpclassifyf *****************
  6630 ;; Defined at:
  6631 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  x               4    0[COMRAM] float 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  u               4   10[COMRAM] struct .
  6636 ;;  e               2    8[COMRAM] int 
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  2    0[COMRAM] int 
  6639 ;; Registers used:
  6640 ;;		wreg, status,2, status,0
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6646 ;;      Params:         4       0       0       0       0       0       0
  6647 ;;      Locals:         6       0       0       0       0       0       0
  6648 ;;      Temps:          4       0       0       0       0       0       0
  6649 ;;      Totals:        14       0       0       0       0       0       0
  6650 ;;Total ram usage:       14 bytes
  6651 ;; Hardware stack levels used: 1
  6652 ;; Hardware stack levels required when called: 1
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		_efgtoa
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text36
  6661   002C68                     __ptext36:
  6662                           	callstack 0
  6663   002C68                     ___fpclassifyf:
  6664                           	callstack 23
  6665   002C68  C104  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6666   002C6C  C105  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6667   002C70  C106  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6668   002C74  C107  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6669   002C78  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6670   002C7C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6671   002C80  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6672   002C84  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6673   002C88  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6674   002C8C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6675   002C90  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6676   002C94  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6677   002C98  0E18               	movlw	24
  6678   002C9A  EF54  F016         	goto	u3440
  6679   002C9E                     u3445:
  6680   002C9E  90D8               	bcf	status,0,c
  6681   002CA0  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6682   002CA2  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6683   002CA4  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6684   002CA6  3205               	rrcf	??___fpclassifyf^0,f,c
  6685   002CA8                     u3440:
  6686   002CA8  2EE8               	decfsz	wreg,f,c
  6687   002CAA  EF4F  F016         	goto	u3445
  6688   002CAE  5005               	movf	??___fpclassifyf^0,w,c
  6689   002CB0  6E09               	movwf	___fpclassifyf@e^0,c
  6690   002CB2  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6691   002CB4  5009               	movf	___fpclassifyf@e^0,w,c
  6692   002CB6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6693   002CB8  A4D8               	btfss	status,2,c
  6694   002CBA  EF61  F016         	goto	u3451
  6695   002CBE  EF63  F016         	goto	u3450
  6696   002CC2                     u3451:
  6697   002CC2  EF83  F016         	goto	l3553
  6698   002CC6                     u3450:
  6699   002CC6  90D8               	bcf	status,0,c
  6700   002CC8  340B               	rlcf	___fpclassifyf@u^0,w,c
  6701   002CCA  6E05               	movwf	??___fpclassifyf^0,c
  6702   002CCC  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6703   002CCE  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6704   002CD0  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6705   002CD2  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6706   002CD4  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6707   002CD6  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6708   002CD8  5005               	movf	??___fpclassifyf^0,w,c
  6709   002CDA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6710   002CDC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6711   002CDE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6712   002CE0  A4D8               	btfss	status,2,c
  6713   002CE2  EF75  F016         	goto	u3461
  6714   002CE6  EF77  F016         	goto	u3460
  6715   002CEA                     u3461:
  6716   002CEA  EF7D  F016         	goto	l3549
  6717   002CEE                     u3460:
  6718   002CEE  0E00               	movlw	0
  6719   002CF0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6720   002CF2  0E02               	movlw	2
  6721   002CF4  6E01               	movwf	?___fpclassifyf^0,c
  6722   002CF6  EFB2  F016         	goto	l1086
  6723   002CFA                     l3549:
  6724   002CFA  0E00               	movlw	0
  6725   002CFC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6726   002CFE  0E03               	movlw	3
  6727   002D00  6E01               	movwf	?___fpclassifyf^0,c
  6728   002D02  EFB2  F016         	goto	l1086
  6729   002D06                     l3553:
  6730   002D06  2809               	incf	___fpclassifyf@e^0,w,c
  6731   002D08  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6732   002D0A  A4D8               	btfss	status,2,c
  6733   002D0C  EF8A  F016         	goto	u3471
  6734   002D10  EF8C  F016         	goto	u3470
  6735   002D14                     u3471:
  6736   002D14  EFAE  F016         	goto	l3559
  6737   002D18                     u3470:
  6738   002D18  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6739   002D1C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6740   002D20  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6741   002D24  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6742   002D28  0E09               	movlw	9
  6743   002D2A                     u3485:
  6744   002D2A  90D8               	bcf	status,0,c
  6745   002D2C  3605               	rlcf	??___fpclassifyf^0,f,c
  6746   002D2E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6747   002D30  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6748   002D32  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6749   002D34  2EE8               	decfsz	wreg,f,c
  6750   002D36  EF95  F016         	goto	u3485
  6751   002D3A  5005               	movf	??___fpclassifyf^0,w,c
  6752   002D3C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6753   002D3E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6754   002D40  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6755   002D42  B4D8               	btfsc	status,2,c
  6756   002D44  EFA6  F016         	goto	u3491
  6757   002D48  EFA9  F016         	goto	u3490
  6758   002D4C                     u3491:
  6759   002D4C  0E01               	movlw	1
  6760   002D4E  EFAA  F016         	goto	u3500
  6761   002D52                     u3490:
  6762   002D52  0E00               	movlw	0
  6763   002D54                     u3500:
  6764   002D54  6E01               	movwf	?___fpclassifyf^0,c
  6765   002D56  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6766   002D58  EFB2  F016         	goto	l1086
  6767   002D5C                     l3559:
  6768   002D5C  0E00               	movlw	0
  6769   002D5E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6770   002D60  0E04               	movlw	4
  6771   002D62  6E01               	movwf	?___fpclassifyf^0,c
  6772   002D64                     l1086:
  6773   002D64  0012               	return		;funcret
  6774   002D66                     __end_of___fpclassifyf:
  6775                           	callstack 0
  6776                           
  6777 ;; *************** function ___fltol *****************
  6778 ;; Defined at:
  6779 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  f1              4   64[COMRAM] int 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;  exp1            1   73[COMRAM] unsigned char 
  6784 ;;  sign1           1   72[COMRAM] unsigned char 
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  4   64[COMRAM] long 
  6787 ;; Registers used:
  6788 ;;		wreg, status,2, status,0
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6794 ;;      Params:         4       0       0       0       0       0       0
  6795 ;;      Locals:         2       0       0       0       0       0       0
  6796 ;;      Temps:          4       0       0       0       0       0       0
  6797 ;;      Totals:        10       0       0       0       0       0       0
  6798 ;;Total ram usage:       10 bytes
  6799 ;; Hardware stack levels used: 1
  6800 ;; Hardware stack levels required when called: 1
  6801 ;; This function calls:
  6802 ;;		Nothing
  6803 ;; This function is called by:
  6804 ;;		_iPWMSetDuty
  6805 ;;		_efgtoa
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text37
  6810   002960                     __ptext37:
  6811                           	callstack 0
  6812   002960                     ___fltol:
  6813                           	callstack 23
  6814   002960  3443               	rlcf	(___fltol@f1+2)^0,w,c
  6815   002962  3444               	rlcf	(___fltol@f1+3)^0,w,c
  6816   002964  6E4A               	movwf	___fltol@exp1^0,c
  6817   002966  504A               	movf	___fltol@exp1^0,w,c
  6818   002968  A4D8               	btfss	status,2,c
  6819   00296A  EFB9  F014         	goto	u3351
  6820   00296E  EFBB  F014         	goto	u3350
  6821   002972                     u3351:
  6822   002972  EFC5  F014         	goto	l3485
  6823   002976                     u3350:
  6824   002976                     l3481:
  6825   002976  0E00               	movlw	0
  6826   002978  6E41               	movwf	?___fltol^0,c
  6827   00297A  0E00               	movlw	0
  6828   00297C  6E42               	movwf	(?___fltol+1)^0,c
  6829   00297E  0E00               	movlw	0
  6830   002980  6E43               	movwf	(?___fltol+2)^0,c
  6831   002982  0E00               	movlw	0
  6832   002984  6E44               	movwf	(?___fltol+3)^0,c
  6833   002986  EF32  F015         	goto	l546
  6834   00298A                     l3485:
  6835   00298A  C041  F045         	movff	___fltol@f1,??___fltol
  6836   00298E  C042  F046         	movff	___fltol@f1+1,??___fltol+1
  6837   002992  C043  F047         	movff	___fltol@f1+2,??___fltol+2
  6838   002996  C044  F048         	movff	___fltol@f1+3,??___fltol+3
  6839   00299A  0E20               	movlw	32
  6840   00299C  EFD5  F014         	goto	u3360
  6841   0029A0                     u3365:
  6842   0029A0  90D8               	bcf	status,0,c
  6843   0029A2  3248               	rrcf	(??___fltol+3)^0,f,c
  6844   0029A4  3247               	rrcf	(??___fltol+2)^0,f,c
  6845   0029A6  3246               	rrcf	(??___fltol+1)^0,f,c
  6846   0029A8  3245               	rrcf	??___fltol^0,f,c
  6847   0029AA                     u3360:
  6848   0029AA  2EE8               	decfsz	wreg,f,c
  6849   0029AC  EFD0  F014         	goto	u3365
  6850   0029B0  5045               	movf	??___fltol^0,w,c
  6851   0029B2  6E49               	movwf	___fltol@sign1^0,c
  6852   0029B4  8E43               	bsf	(___fltol@f1+2)^0,7,c
  6853   0029B6  0EFF               	movlw	255
  6854   0029B8  1641               	andwf	___fltol@f1^0,f,c
  6855   0029BA  0EFF               	movlw	255
  6856   0029BC  1642               	andwf	(___fltol@f1+1)^0,f,c
  6857   0029BE  0EFF               	movlw	255
  6858   0029C0  1643               	andwf	(___fltol@f1+2)^0,f,c
  6859   0029C2  0E00               	movlw	0
  6860   0029C4  1644               	andwf	(___fltol@f1+3)^0,f,c
  6861   0029C6  0E96               	movlw	150
  6862   0029C8  5E4A               	subwf	___fltol@exp1^0,f,c
  6863   0029CA  BE4A               	btfsc	___fltol@exp1^0,7,c
  6864   0029CC  EFEC  F014         	goto	u3370
  6865   0029D0  EFEA  F014         	goto	u3371
  6866   0029D4                     u3371:
  6867   0029D4  EF02  F015         	goto	l3505
  6868   0029D8                     u3370:
  6869   0029D8  504A               	movf	___fltol@exp1^0,w,c
  6870   0029DA  0A80               	xorlw	128
  6871   0029DC  0F97               	addlw	151
  6872   0029DE  B0D8               	btfsc	status,0,c
  6873   0029E0  EFF4  F014         	goto	u3381
  6874   0029E4  EFF6  F014         	goto	u3380
  6875   0029E8                     u3381:
  6876   0029E8  EFF8  F014         	goto	l3501
  6877   0029EC                     u3380:
  6878   0029EC  EFBB  F014         	goto	l3481
  6879   0029F0                     l3501:
  6880   0029F0  90D8               	bcf	status,0,c
  6881   0029F2  3244               	rrcf	(___fltol@f1+3)^0,f,c
  6882   0029F4  3243               	rrcf	(___fltol@f1+2)^0,f,c
  6883   0029F6  3242               	rrcf	(___fltol@f1+1)^0,f,c
  6884   0029F8  3241               	rrcf	___fltol@f1^0,f,c
  6885   0029FA  3E4A               	incfsz	___fltol@exp1^0,f,c
  6886   0029FC  EFF8  F014         	goto	l3501
  6887   002A00  EF1A  F015         	goto	l3515
  6888   002A04                     l3505:
  6889   002A04  0E1F               	movlw	31
  6890   002A06  644A               	cpfsgt	___fltol@exp1^0,c
  6891   002A08  EF08  F015         	goto	u3391
  6892   002A0C  EF0A  F015         	goto	u3390
  6893   002A10                     u3391:
  6894   002A10  EF12  F015         	goto	l3513
  6895   002A14                     u3390:
  6896   002A14  EFBB  F014         	goto	l3481
  6897   002A18                     l3511:
  6898   002A18  90D8               	bcf	status,0,c
  6899   002A1A  3641               	rlcf	___fltol@f1^0,f,c
  6900   002A1C  3642               	rlcf	(___fltol@f1+1)^0,f,c
  6901   002A1E  3643               	rlcf	(___fltol@f1+2)^0,f,c
  6902   002A20  3644               	rlcf	(___fltol@f1+3)^0,f,c
  6903   002A22  064A               	decf	___fltol@exp1^0,f,c
  6904   002A24                     l3513:
  6905   002A24  504A               	movf	___fltol@exp1^0,w,c
  6906   002A26  A4D8               	btfss	status,2,c
  6907   002A28  EF18  F015         	goto	u3401
  6908   002A2C  EF1A  F015         	goto	u3400
  6909   002A30                     u3401:
  6910   002A30  EF0C  F015         	goto	l3511
  6911   002A34                     u3400:
  6912   002A34                     l3515:
  6913   002A34  5049               	movf	___fltol@sign1^0,w,c
  6914   002A36  B4D8               	btfsc	status,2,c
  6915   002A38  EF20  F015         	goto	u3411
  6916   002A3C  EF22  F015         	goto	u3410
  6917   002A40                     u3411:
  6918   002A40  EF2A  F015         	goto	l3519
  6919   002A44                     u3410:
  6920   002A44  1E44               	comf	(___fltol@f1+3)^0,f,c
  6921   002A46  1E43               	comf	(___fltol@f1+2)^0,f,c
  6922   002A48  1E42               	comf	(___fltol@f1+1)^0,f,c
  6923   002A4A  6C41               	negf	___fltol@f1^0,c
  6924   002A4C  0E00               	movlw	0
  6925   002A4E  2242               	addwfc	(___fltol@f1+1)^0,f,c
  6926   002A50  2243               	addwfc	(___fltol@f1+2)^0,f,c
  6927   002A52  2244               	addwfc	(___fltol@f1+3)^0,f,c
  6928   002A54                     l3519:
  6929   002A54  C041  F041         	movff	___fltol@f1,?___fltol
  6930   002A58  C042  F042         	movff	___fltol@f1+1,?___fltol+1
  6931   002A5C  C043  F043         	movff	___fltol@f1+2,?___fltol+2
  6932   002A60  C044  F044         	movff	___fltol@f1+3,?___fltol+3
  6933   002A64                     l546:
  6934   002A64  0012               	return		;funcret
  6935   002A66                     __end_of___fltol:
  6936                           	callstack 0
  6937                           
  6938 ;; *************** function ___flsub *****************
  6939 ;; Defined at:
  6940 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;  b               4   64[COMRAM] long 
  6943 ;;  a               4   68[COMRAM] long 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;		None
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  4   64[COMRAM] long 
  6948 ;; Registers used:
  6949 ;;		wreg, status,2, status,0, cstack
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6955 ;;      Params:         8       0       0       0       0       0       0
  6956 ;;      Locals:         0       0       0       0       0       0       0
  6957 ;;      Temps:          0       0       0       0       0       0       0
  6958 ;;      Totals:         8       0       0       0       0       0       0
  6959 ;;Total ram usage:        8 bytes
  6960 ;; Hardware stack levels used: 1
  6961 ;; Hardware stack levels required when called: 2
  6962 ;; This function calls:
  6963 ;;		___fladd
  6964 ;; This function is called by:
  6965 ;;		_efgtoa
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text38
  6970   003914                     __ptext38:
  6971                           	callstack 0
  6972   003914                     ___flsub:
  6973                           	callstack 22
  6974   003914  0E00               	movlw	0
  6975   003916  1A45               	xorwf	___flsub@a^0,f,c
  6976   003918  0E00               	movlw	0
  6977   00391A  1A46               	xorwf	(___flsub@a+1)^0,f,c
  6978   00391C  0E00               	movlw	0
  6979   00391E  1A47               	xorwf	(___flsub@a+2)^0,f,c
  6980   003920  0E80               	movlw	128
  6981   003922  1A48               	xorwf	(___flsub@a+3)^0,f,c
  6982   003924  C041  F001         	movff	___flsub@b,___fladd@b
  6983   003928  C042  F002         	movff	___flsub@b+1,___fladd@b+1
  6984   00392C  C043  F003         	movff	___flsub@b+2,___fladd@b+2
  6985   003930  C044  F004         	movff	___flsub@b+3,___fladd@b+3
  6986   003934  C045  F005         	movff	___flsub@a,___fladd@a
  6987   003938  C046  F006         	movff	___flsub@a+1,___fladd@a+1
  6988   00393C  C047  F007         	movff	___flsub@a+2,___fladd@a+2
  6989   003940  C048  F008         	movff	___flsub@a+3,___fladd@a+3
  6990   003944  EC39  F008         	call	___fladd	;wreg free
  6991   003948  C001  F041         	movff	?___fladd,?___flsub
  6992   00394C  C002  F042         	movff	?___fladd+1,?___flsub+1
  6993   003950  C003  F043         	movff	?___fladd+2,?___flsub+2
  6994   003954  C004  F044         	movff	?___fladd+3,?___flsub+3
  6995   003958  0012               	return		;funcret
  6996   00395A                     __end_of___flsub:
  6997                           	callstack 0
  6998                           
  6999 ;; *************** function ___fladd *****************
  7000 ;; Defined at:
  7001 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  b               4    0[COMRAM] long 
  7004 ;;  a               4    4[COMRAM] long 
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;  grs             1   15[COMRAM] unsigned char 
  7007 ;;  bexp            1   14[COMRAM] unsigned char 
  7008 ;;  aexp            1   13[COMRAM] unsigned char 
  7009 ;;  signs           1   12[COMRAM] unsigned char 
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  4    0[COMRAM] unsigned char 
  7012 ;; Registers used:
  7013 ;;		wreg, status,2, status,0
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7019 ;;      Params:         8       0       0       0       0       0       0
  7020 ;;      Locals:         4       0       0       0       0       0       0
  7021 ;;      Temps:          4       0       0       0       0       0       0
  7022 ;;      Totals:        16       0       0       0       0       0       0
  7023 ;;Total ram usage:       16 bytes
  7024 ;; Hardware stack levels used: 1
  7025 ;; Hardware stack levels required when called: 1
  7026 ;; This function calls:
  7027 ;;		Nothing
  7028 ;; This function is called by:
  7029 ;;		___flsub
  7030 ;;		_efgtoa
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text39
  7035   001072                     __ptext39:
  7036                           	callstack 0
  7037   001072                     ___fladd:
  7038                           	callstack 22
  7039   001072  5004               	movf	(___fladd@b+3)^0,w,c
  7040   001074  0B80               	andlw	128
  7041   001076  6E0D               	movwf	___fladd@signs^0,c
  7042   001078  5004               	movf	(___fladd@b+3)^0,w,c
  7043   00107A  2404               	addwf	(___fladd@b+3)^0,w,c
  7044   00107C  6E0F               	movwf	___fladd@bexp^0,c
  7045   00107E  AE03               	btfss	(___fladd@b+2)^0,7,c
  7046   001080  EF44  F008         	goto	u2431
  7047   001084  EF46  F008         	goto	u2430
  7048   001088                     u2431:
  7049   001088  EF47  F008         	goto	l2939
  7050   00108C                     u2430:
  7051   00108C  800F               	bsf	___fladd@bexp^0,0,c
  7052   00108E                     l2939:
  7053   00108E  500F               	movf	___fladd@bexp^0,w,c
  7054   001090  B4D8               	btfsc	status,2,c
  7055   001092  EF4D  F008         	goto	u2441
  7056   001096  EF4F  F008         	goto	u2440
  7057   00109A                     u2441:
  7058   00109A  EF64  F008         	goto	l2949
  7059   00109E                     u2440:
  7060   00109E  280F               	incf	___fladd@bexp^0,w,c
  7061   0010A0  A4D8               	btfss	status,2,c
  7062   0010A2  EF55  F008         	goto	u2451
  7063   0010A6  EF57  F008         	goto	u2450
  7064   0010AA                     u2451:
  7065   0010AA  EF5F  F008         	goto	l2945
  7066   0010AE                     u2450:
  7067   0010AE  0E00               	movlw	0
  7068   0010B0  6E01               	movwf	___fladd@b^0,c
  7069   0010B2  0E00               	movlw	0
  7070   0010B4  6E02               	movwf	(___fladd@b+1)^0,c
  7071   0010B6  0E00               	movlw	0
  7072   0010B8  6E03               	movwf	(___fladd@b+2)^0,c
  7073   0010BA  0E00               	movlw	0
  7074   0010BC  6E04               	movwf	(___fladd@b+3)^0,c
  7075   0010BE                     l2945:
  7076   0010BE  8E03               	bsf	(___fladd@b+2)^0,7,c
  7077   0010C0  0E00               	movlw	0
  7078   0010C2  6E04               	movwf	(___fladd@b+3)^0,c
  7079   0010C4  EF6C  F008         	goto	l2951
  7080   0010C8                     l2949:
  7081   0010C8  0E00               	movlw	0
  7082   0010CA  6E01               	movwf	___fladd@b^0,c
  7083   0010CC  0E00               	movlw	0
  7084   0010CE  6E02               	movwf	(___fladd@b+1)^0,c
  7085   0010D0  0E00               	movlw	0
  7086   0010D2  6E03               	movwf	(___fladd@b+2)^0,c
  7087   0010D4  0E00               	movlw	0
  7088   0010D6  6E04               	movwf	(___fladd@b+3)^0,c
  7089   0010D8                     l2951:
  7090   0010D8  5008               	movf	(___fladd@a+3)^0,w,c
  7091   0010DA  0B80               	andlw	128
  7092   0010DC  6E0E               	movwf	___fladd@aexp^0,c
  7093   0010DE  500D               	movf	___fladd@signs^0,w,c
  7094   0010E0  180E               	xorwf	___fladd@aexp^0,w,c
  7095   0010E2  B4D8               	btfsc	status,2,c
  7096   0010E4  EF76  F008         	goto	u2461
  7097   0010E8  EF78  F008         	goto	u2460
  7098   0010EC                     u2461:
  7099   0010EC  EF79  F008         	goto	l2957
  7100   0010F0                     u2460:
  7101   0010F0  8C0D               	bsf	___fladd@signs^0,6,c
  7102   0010F2                     l2957:
  7103   0010F2  5008               	movf	(___fladd@a+3)^0,w,c
  7104   0010F4  2408               	addwf	(___fladd@a+3)^0,w,c
  7105   0010F6  6E0E               	movwf	___fladd@aexp^0,c
  7106   0010F8  AE07               	btfss	(___fladd@a+2)^0,7,c
  7107   0010FA  EF81  F008         	goto	u2471
  7108   0010FE  EF83  F008         	goto	u2470
  7109   001102                     u2471:
  7110   001102  EF84  F008         	goto	l2963
  7111   001106                     u2470:
  7112   001106  800E               	bsf	___fladd@aexp^0,0,c
  7113   001108                     l2963:
  7114   001108  500E               	movf	___fladd@aexp^0,w,c
  7115   00110A  B4D8               	btfsc	status,2,c
  7116   00110C  EF8A  F008         	goto	u2481
  7117   001110  EF8C  F008         	goto	u2480
  7118   001114                     u2481:
  7119   001114  EFA1  F008         	goto	l2973
  7120   001118                     u2480:
  7121   001118  280E               	incf	___fladd@aexp^0,w,c
  7122   00111A  A4D8               	btfss	status,2,c
  7123   00111C  EF92  F008         	goto	u2491
  7124   001120  EF94  F008         	goto	u2490
  7125   001124                     u2491:
  7126   001124  EF9C  F008         	goto	l2969
  7127   001128                     u2490:
  7128   001128  0E00               	movlw	0
  7129   00112A  6E05               	movwf	___fladd@a^0,c
  7130   00112C  0E00               	movlw	0
  7131   00112E  6E06               	movwf	(___fladd@a+1)^0,c
  7132   001130  0E00               	movlw	0
  7133   001132  6E07               	movwf	(___fladd@a+2)^0,c
  7134   001134  0E00               	movlw	0
  7135   001136  6E08               	movwf	(___fladd@a+3)^0,c
  7136   001138                     l2969:
  7137   001138  8E07               	bsf	(___fladd@a+2)^0,7,c
  7138   00113A  0E00               	movlw	0
  7139   00113C  6E08               	movwf	(___fladd@a+3)^0,c
  7140   00113E  EFA9  F008         	goto	l2975
  7141   001142                     l2973:
  7142   001142  0E00               	movlw	0
  7143   001144  6E05               	movwf	___fladd@a^0,c
  7144   001146  0E00               	movlw	0
  7145   001148  6E06               	movwf	(___fladd@a+1)^0,c
  7146   00114A  0E00               	movlw	0
  7147   00114C  6E07               	movwf	(___fladd@a+2)^0,c
  7148   00114E  0E00               	movlw	0
  7149   001150  6E08               	movwf	(___fladd@a+3)^0,c
  7150   001152                     l2975:
  7151   001152  500F               	movf	___fladd@bexp^0,w,c
  7152   001154  5C0E               	subwf	___fladd@aexp^0,w,c
  7153   001156  B0D8               	btfsc	status,0,c
  7154   001158  EFB0  F008         	goto	u2501
  7155   00115C  EFB2  F008         	goto	u2500
  7156   001160                     u2501:
  7157   001160  EFD9  F008         	goto	l3011
  7158   001164                     u2500:
  7159   001164  AC0D               	btfss	___fladd@signs^0,6,c
  7160   001166  EFB7  F008         	goto	u2511
  7161   00116A  EFB9  F008         	goto	u2510
  7162   00116E                     u2511:
  7163   00116E  EFBB  F008         	goto	l2981
  7164   001172                     u2510:
  7165   001172  0E80               	movlw	128
  7166   001174  1A0D               	xorwf	___fladd@signs^0,f,c
  7167   001176                     l2981:
  7168   001176  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7169   00117A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7170   00117E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7171   001182  C001  F010         	movff	___fladd@b,___fladd@grs
  7172   001186  C005  F001         	movff	___fladd@a,___fladd@b
  7173   00118A  C010  F005         	movff	___fladd@grs,___fladd@a
  7174   00118E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7175   001192  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7176   001196  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7177   00119A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7178   00119E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7179   0011A2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7180   0011A6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7181   0011AA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7182   0011AE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7183   0011B2                     l3011:
  7184   0011B2  0E00               	movlw	0
  7185   0011B4  6E10               	movwf	___fladd@grs^0,c
  7186   0011B6  500F               	movf	___fladd@bexp^0,w,c
  7187   0011B8  C00E  F009         	movff	___fladd@aexp,??___fladd
  7188   0011BC  6A0A               	clrf	(??___fladd+1)^0,c
  7189   0011BE  5E09               	subwf	??___fladd^0,f,c
  7190   0011C0  0E00               	movlw	0
  7191   0011C2  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7192   0011C4  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7193   0011C6  EFEE  F008         	goto	u2521
  7194   0011CA  500A               	movf	(??___fladd+1)^0,w,c
  7195   0011CC  E109               	bnz	u2520
  7196   0011CE  0E1A               	movlw	26
  7197   0011D0  5C09               	subwf	??___fladd^0,w,c
  7198   0011D2  A0D8               	btfss	status,0,c
  7199   0011D4  EFEE  F008         	goto	u2521
  7200   0011D8  EFF0  F008         	goto	u2520
  7201   0011DC                     u2521:
  7202   0011DC  EF27  F009         	goto	l778
  7203   0011E0                     u2520:
  7204   0011E0  5001               	movf	___fladd@b^0,w,c
  7205   0011E2  1002               	iorwf	(___fladd@b+1)^0,w,c
  7206   0011E4  1003               	iorwf	(___fladd@b+2)^0,w,c
  7207   0011E6  1004               	iorwf	(___fladd@b+3)^0,w,c
  7208   0011E8  A4D8               	btfss	status,2,c
  7209   0011EA  EFF9  F008         	goto	u2531
  7210   0011EE  EFFC  F008         	goto	u2530
  7211   0011F2                     u2531:
  7212   0011F2  0E01               	movlw	1
  7213   0011F4  EFFD  F008         	goto	u2540
  7214   0011F8                     u2530:
  7215   0011F8  0E00               	movlw	0
  7216   0011FA                     u2540:
  7217   0011FA  6E10               	movwf	___fladd@grs^0,c
  7218   0011FC  0E00               	movlw	0
  7219   0011FE  6E01               	movwf	___fladd@b^0,c
  7220   001200  0E00               	movlw	0
  7221   001202  6E02               	movwf	(___fladd@b+1)^0,c
  7222   001204  0E00               	movlw	0
  7223   001206  6E03               	movwf	(___fladd@b+2)^0,c
  7224   001208  0E00               	movlw	0
  7225   00120A  6E04               	movwf	(___fladd@b+3)^0,c
  7226   00120C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7227   001210  EF30  F009         	goto	l777
  7228   001214                     l779:
  7229   001214  A010               	btfss	___fladd@grs^0,0,c
  7230   001216  EF0F  F009         	goto	u2551
  7231   00121A  EF11  F009         	goto	u2550
  7232   00121E                     u2551:
  7233   00121E  EF17  F009         	goto	l3023
  7234   001222                     u2550:
  7235   001222  90D8               	bcf	status,0,c
  7236   001224  3010               	rrcf	___fladd@grs^0,w,c
  7237   001226  0901               	iorlw	1
  7238   001228  6E10               	movwf	___fladd@grs^0,c
  7239   00122A  EF19  F009         	goto	l3025
  7240   00122E                     l3023:
  7241   00122E  90D8               	bcf	status,0,c
  7242   001230  3210               	rrcf	___fladd@grs^0,f,c
  7243   001232                     l3025:
  7244   001232  A001               	btfss	___fladd@b^0,0,c
  7245   001234  EF1E  F009         	goto	u2561
  7246   001238  EF20  F009         	goto	u2560
  7247   00123C                     u2561:
  7248   00123C  EF21  F009         	goto	l3029
  7249   001240                     u2560:
  7250   001240  8E10               	bsf	___fladd@grs^0,7,c
  7251   001242                     l3029:
  7252   001242  3404               	rlcf	(___fladd@b+3)^0,w,c
  7253   001244  3204               	rrcf	(___fladd@b+3)^0,f,c
  7254   001246  3203               	rrcf	(___fladd@b+2)^0,f,c
  7255   001248  3202               	rrcf	(___fladd@b+1)^0,f,c
  7256   00124A  3201               	rrcf	___fladd@b^0,f,c
  7257   00124C  2A0F               	incf	___fladd@bexp^0,f,c
  7258   00124E                     l778:
  7259   00124E  500E               	movf	___fladd@aexp^0,w,c
  7260   001250  5C0F               	subwf	___fladd@bexp^0,w,c
  7261   001252  A0D8               	btfss	status,0,c
  7262   001254  EF2E  F009         	goto	u2571
  7263   001258  EF30  F009         	goto	u2570
  7264   00125C                     u2571:
  7265   00125C  EF0A  F009         	goto	l779
  7266   001260                     u2570:
  7267   001260                     l777:
  7268   001260  BC0D               	btfsc	___fladd@signs^0,6,c
  7269   001262  EF35  F009         	goto	u2581
  7270   001266  EF37  F009         	goto	u2580
  7271   00126A                     u2581:
  7272   00126A  EF77  F009         	goto	l3057
  7273   00126E                     u2580:
  7274   00126E  500F               	movf	___fladd@bexp^0,w,c
  7275   001270  A4D8               	btfss	status,2,c
  7276   001272  EF3D  F009         	goto	u2591
  7277   001276  EF3F  F009         	goto	u2590
  7278   00127A                     u2591:
  7279   00127A  EF49  F009         	goto	l3039
  7280   00127E                     u2590:
  7281   00127E  0E00               	movlw	0
  7282   001280  6E01               	movwf	?___fladd^0,c
  7283   001282  0E00               	movlw	0
  7284   001284  6E02               	movwf	(?___fladd+1)^0,c
  7285   001286  0E00               	movlw	0
  7286   001288  6E03               	movwf	(?___fladd+2)^0,c
  7287   00128A  0E00               	movlw	0
  7288   00128C  6E04               	movwf	(?___fladd+3)^0,c
  7289   00128E  EF98  F00A         	goto	l786
  7290   001292                     l3039:
  7291   001292  5005               	movf	___fladd@a^0,w,c
  7292   001294  2601               	addwf	___fladd@b^0,f,c
  7293   001296  5006               	movf	(___fladd@a+1)^0,w,c
  7294   001298  2202               	addwfc	(___fladd@b+1)^0,f,c
  7295   00129A  5007               	movf	(___fladd@a+2)^0,w,c
  7296   00129C  2203               	addwfc	(___fladd@b+2)^0,f,c
  7297   00129E  5008               	movf	(___fladd@a+3)^0,w,c
  7298   0012A0  2204               	addwfc	(___fladd@b+3)^0,f,c
  7299   0012A2  A004               	btfss	(___fladd@b+3)^0,0,c
  7300   0012A4  EF56  F009         	goto	u2601
  7301   0012A8  EF58  F009         	goto	u2600
  7302   0012AC                     u2601:
  7303   0012AC  EF04  F00A         	goto	l3093
  7304   0012B0                     u2600:
  7305   0012B0  A010               	btfss	___fladd@grs^0,0,c
  7306   0012B2  EF5D  F009         	goto	u2611
  7307   0012B6  EF5F  F009         	goto	u2610
  7308   0012BA                     u2611:
  7309   0012BA  EF65  F009         	goto	l3047
  7310   0012BE                     u2610:
  7311   0012BE  90D8               	bcf	status,0,c
  7312   0012C0  3010               	rrcf	___fladd@grs^0,w,c
  7313   0012C2  0901               	iorlw	1
  7314   0012C4  6E10               	movwf	___fladd@grs^0,c
  7315   0012C6  EF67  F009         	goto	l3049
  7316   0012CA                     l3047:
  7317   0012CA  90D8               	bcf	status,0,c
  7318   0012CC  3210               	rrcf	___fladd@grs^0,f,c
  7319   0012CE                     l3049:
  7320   0012CE  A001               	btfss	___fladd@b^0,0,c
  7321   0012D0  EF6C  F009         	goto	u2621
  7322   0012D4  EF6E  F009         	goto	u2620
  7323   0012D8                     u2621:
  7324   0012D8  EF6F  F009         	goto	l3053
  7325   0012DC                     u2620:
  7326   0012DC  8E10               	bsf	___fladd@grs^0,7,c
  7327   0012DE                     l3053:
  7328   0012DE  3404               	rlcf	(___fladd@b+3)^0,w,c
  7329   0012E0  3204               	rrcf	(___fladd@b+3)^0,f,c
  7330   0012E2  3203               	rrcf	(___fladd@b+2)^0,f,c
  7331   0012E4  3202               	rrcf	(___fladd@b+1)^0,f,c
  7332   0012E6  3201               	rrcf	___fladd@b^0,f,c
  7333   0012E8  2A0F               	incf	___fladd@bexp^0,f,c
  7334   0012EA  EF04  F00A         	goto	l3093
  7335   0012EE                     l3057:
  7336   0012EE  5005               	movf	___fladd@a^0,w,c
  7337   0012F0  5C01               	subwf	___fladd@b^0,w,c
  7338   0012F2  5006               	movf	(___fladd@a+1)^0,w,c
  7339   0012F4  5802               	subwfb	(___fladd@b+1)^0,w,c
  7340   0012F6  5007               	movf	(___fladd@a+2)^0,w,c
  7341   0012F8  5803               	subwfb	(___fladd@b+2)^0,w,c
  7342   0012FA  5004               	movf	(___fladd@b+3)^0,w,c
  7343   0012FC  0A80               	xorlw	128
  7344   0012FE  6E09               	movwf	??___fladd^0,c
  7345   001300  5008               	movf	(___fladd@a+3)^0,w,c
  7346   001302  0A80               	xorlw	128
  7347   001304  5809               	subwfb	??___fladd^0,w,c
  7348   001306  B0D8               	btfsc	status,0,c
  7349   001308  EF88  F009         	goto	u2631
  7350   00130C  EF8A  F009         	goto	u2630
  7351   001310                     u2631:
  7352   001310  EFB5  F009         	goto	l3067
  7353   001314                     u2630:
  7354   001314  5001               	movf	___fladd@b^0,w,c
  7355   001316  5C05               	subwf	___fladd@a^0,w,c
  7356   001318  6E09               	movwf	??___fladd^0,c
  7357   00131A  5002               	movf	(___fladd@b+1)^0,w,c
  7358   00131C  5806               	subwfb	(___fladd@a+1)^0,w,c
  7359   00131E  6E0A               	movwf	(??___fladd+1)^0,c
  7360   001320  5003               	movf	(___fladd@b+2)^0,w,c
  7361   001322  5807               	subwfb	(___fladd@a+2)^0,w,c
  7362   001324  6E0B               	movwf	(??___fladd+2)^0,c
  7363   001326  5004               	movf	(___fladd@b+3)^0,w,c
  7364   001328  5808               	subwfb	(___fladd@a+3)^0,w,c
  7365   00132A  6E0C               	movwf	(??___fladd+3)^0,c
  7366   00132C  0EFF               	movlw	255
  7367   00132E  2409               	addwf	??___fladd^0,w,c
  7368   001330  6E01               	movwf	___fladd@b^0,c
  7369   001332  0EFF               	movlw	255
  7370   001334  200A               	addwfc	(??___fladd+1)^0,w,c
  7371   001336  6E02               	movwf	(___fladd@b+1)^0,c
  7372   001338  0EFF               	movlw	255
  7373   00133A  200B               	addwfc	(??___fladd+2)^0,w,c
  7374   00133C  6E03               	movwf	(___fladd@b+2)^0,c
  7375   00133E  0EFF               	movlw	255
  7376   001340  200C               	addwfc	(??___fladd+3)^0,w,c
  7377   001342  6E04               	movwf	(___fladd@b+3)^0,c
  7378   001344  0E80               	movlw	128
  7379   001346  1A0D               	xorwf	___fladd@signs^0,f,c
  7380   001348  6C10               	negf	___fladd@grs^0,c
  7381   00134A  5010               	movf	___fladd@grs^0,w,c
  7382   00134C  A4D8               	btfss	status,2,c
  7383   00134E  EFAB  F009         	goto	u2641
  7384   001352  EFAD  F009         	goto	u2640
  7385   001356                     u2641:
  7386   001356  EFBD  F009         	goto	l794
  7387   00135A                     u2640:
  7388   00135A  0E01               	movlw	1
  7389   00135C  2601               	addwf	___fladd@b^0,f,c
  7390   00135E  0E00               	movlw	0
  7391   001360  2202               	addwfc	(___fladd@b+1)^0,f,c
  7392   001362  2203               	addwfc	(___fladd@b+2)^0,f,c
  7393   001364  2204               	addwfc	(___fladd@b+3)^0,f,c
  7394   001366  EFBD  F009         	goto	l794
  7395   00136A                     l3067:
  7396   00136A  5005               	movf	___fladd@a^0,w,c
  7397   00136C  5E01               	subwf	___fladd@b^0,f,c
  7398   00136E  5006               	movf	(___fladd@a+1)^0,w,c
  7399   001370  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7400   001372  5007               	movf	(___fladd@a+2)^0,w,c
  7401   001374  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7402   001376  5008               	movf	(___fladd@a+3)^0,w,c
  7403   001378  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7404   00137A                     l794:
  7405   00137A  5001               	movf	___fladd@b^0,w,c
  7406   00137C  1002               	iorwf	(___fladd@b+1)^0,w,c
  7407   00137E  1003               	iorwf	(___fladd@b+2)^0,w,c
  7408   001380  1004               	iorwf	(___fladd@b+3)^0,w,c
  7409   001382  A4D8               	btfss	status,2,c
  7410   001384  EFC6  F009         	goto	u2651
  7411   001388  EFC8  F009         	goto	u2650
  7412   00138C                     u2651:
  7413   00138C  EFFD  F009         	goto	l3091
  7414   001390                     u2650:
  7415   001390  5010               	movf	___fladd@grs^0,w,c
  7416   001392  A4D8               	btfss	status,2,c
  7417   001394  EFCE  F009         	goto	u2661
  7418   001398  EFD0  F009         	goto	u2660
  7419   00139C                     u2661:
  7420   00139C  EFFD  F009         	goto	l3091
  7421   0013A0                     u2660:
  7422   0013A0  0E00               	movlw	0
  7423   0013A2  6E01               	movwf	?___fladd^0,c
  7424   0013A4  0E00               	movlw	0
  7425   0013A6  6E02               	movwf	(?___fladd+1)^0,c
  7426   0013A8  0E00               	movlw	0
  7427   0013AA  6E03               	movwf	(?___fladd+2)^0,c
  7428   0013AC  0E00               	movlw	0
  7429   0013AE  6E04               	movwf	(?___fladd+3)^0,c
  7430   0013B0  EF98  F00A         	goto	l786
  7431   0013B4                     l3075:
  7432   0013B4  90D8               	bcf	status,0,c
  7433   0013B6  3601               	rlcf	___fladd@b^0,f,c
  7434   0013B8  3602               	rlcf	(___fladd@b+1)^0,f,c
  7435   0013BA  3603               	rlcf	(___fladd@b+2)^0,f,c
  7436   0013BC  3604               	rlcf	(___fladd@b+3)^0,f,c
  7437   0013BE  AE10               	btfss	___fladd@grs^0,7,c
  7438   0013C0  EFE4  F009         	goto	u2671
  7439   0013C4  EFE6  F009         	goto	u2670
  7440   0013C8                     u2671:
  7441   0013C8  EFE7  F009         	goto	l3081
  7442   0013CC                     u2670:
  7443   0013CC  8001               	bsf	___fladd@b^0,0,c
  7444   0013CE                     l3081:
  7445   0013CE  A010               	btfss	___fladd@grs^0,0,c
  7446   0013D0  EFEC  F009         	goto	u2681
  7447   0013D4  EFEE  F009         	goto	u2680
  7448   0013D8                     u2681:
  7449   0013D8  EFF2  F009         	goto	l3085
  7450   0013DC                     u2680:
  7451   0013DC  80D8               	bsf	status,0,c
  7452   0013DE  3610               	rlcf	___fladd@grs^0,f,c
  7453   0013E0  EFF4  F009         	goto	l3087
  7454   0013E4                     l3085:
  7455   0013E4  90D8               	bcf	status,0,c
  7456   0013E6  3610               	rlcf	___fladd@grs^0,f,c
  7457   0013E8                     l3087:
  7458   0013E8  500F               	movf	___fladd@bexp^0,w,c
  7459   0013EA  B4D8               	btfsc	status,2,c
  7460   0013EC  EFFA  F009         	goto	u2691
  7461   0013F0  EFFC  F009         	goto	u2690
  7462   0013F4                     u2691:
  7463   0013F4  EFFD  F009         	goto	l3091
  7464   0013F8                     u2690:
  7465   0013F8  060F               	decf	___fladd@bexp^0,f,c
  7466   0013FA                     l3091:
  7467   0013FA  AE03               	btfss	(___fladd@b+2)^0,7,c
  7468   0013FC  EF02  F00A         	goto	u2701
  7469   001400  EF04  F00A         	goto	u2700
  7470   001404                     u2701:
  7471   001404  EFDA  F009         	goto	l3075
  7472   001408                     u2700:
  7473   001408                     l3093:
  7474   001408  0E00               	movlw	0
  7475   00140A  6E0E               	movwf	___fladd@aexp^0,c
  7476   00140C  AE10               	btfss	___fladd@grs^0,7,c
  7477   00140E  EF0B  F00A         	goto	u2711
  7478   001412  EF0D  F00A         	goto	u2710
  7479   001416                     u2711:
  7480   001416  EF25  F00A         	goto	l803
  7481   00141A                     u2710:
  7482   00141A  C010  F009         	movff	___fladd@grs,??___fladd
  7483   00141E  0E7F               	movlw	127
  7484   001420  1609               	andwf	??___fladd^0,f,c
  7485   001422  B4D8               	btfsc	status,2,c
  7486   001424  EF16  F00A         	goto	u2721
  7487   001428  EF18  F00A         	goto	u2720
  7488   00142C                     u2721:
  7489   00142C  EF1C  F00A         	goto	l804
  7490   001430                     u2720:
  7491   001430                     l3099:
  7492   001430  0E01               	movlw	1
  7493   001432  6E0E               	movwf	___fladd@aexp^0,c
  7494   001434  EF25  F00A         	goto	l803
  7495   001438                     l804:
  7496   001438  A001               	btfss	___fladd@b^0,0,c
  7497   00143A  EF21  F00A         	goto	u2731
  7498   00143E  EF23  F00A         	goto	u2730
  7499   001442                     u2731:
  7500   001442  EF25  F00A         	goto	l803
  7501   001446                     u2730:
  7502   001446  EF18  F00A         	goto	l3099
  7503   00144A                     l803:
  7504   00144A  500E               	movf	___fladd@aexp^0,w,c
  7505   00144C  B4D8               	btfsc	status,2,c
  7506   00144E  EF2B  F00A         	goto	u2741
  7507   001452  EF2D  F00A         	goto	u2740
  7508   001456                     u2741:
  7509   001456  EF58  F00A         	goto	l3111
  7510   00145A                     u2740:
  7511   00145A  0E01               	movlw	1
  7512   00145C  2601               	addwf	___fladd@b^0,f,c
  7513   00145E  0E00               	movlw	0
  7514   001460  2202               	addwfc	(___fladd@b+1)^0,f,c
  7515   001462  2203               	addwfc	(___fladd@b+2)^0,f,c
  7516   001464  2204               	addwfc	(___fladd@b+3)^0,f,c
  7517   001466  A004               	btfss	(___fladd@b+3)^0,0,c
  7518   001468  EF38  F00A         	goto	u2751
  7519   00146C  EF3A  F00A         	goto	u2750
  7520   001470                     u2751:
  7521   001470  EF58  F00A         	goto	l3111
  7522   001474                     u2750:
  7523   001474  C001  F009         	movff	___fladd@b,??___fladd
  7524   001478  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7525   00147C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7526   001480  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7527   001484  340C               	rlcf	(??___fladd+3)^0,w,c
  7528   001486  320C               	rrcf	(??___fladd+3)^0,f,c
  7529   001488  320B               	rrcf	(??___fladd+2)^0,f,c
  7530   00148A  320A               	rrcf	(??___fladd+1)^0,f,c
  7531   00148C  3209               	rrcf	??___fladd^0,f,c
  7532   00148E  C009  F001         	movff	??___fladd,___fladd@b
  7533   001492  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7534   001496  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7535   00149A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7536   00149E  280F               	incf	___fladd@bexp^0,w,c
  7537   0014A0  B4D8               	btfsc	status,2,c
  7538   0014A2  EF55  F00A         	goto	u2761
  7539   0014A6  EF57  F00A         	goto	u2760
  7540   0014AA                     u2761:
  7541   0014AA  EF58  F00A         	goto	l3111
  7542   0014AE                     u2760:
  7543   0014AE  2A0F               	incf	___fladd@bexp^0,f,c
  7544   0014B0                     l3111:
  7545   0014B0  280F               	incf	___fladd@bexp^0,w,c
  7546   0014B2  B4D8               	btfsc	status,2,c
  7547   0014B4  EF5E  F00A         	goto	u2771
  7548   0014B8  EF60  F00A         	goto	u2770
  7549   0014BC                     u2771:
  7550   0014BC  EF68  F00A         	goto	l3115
  7551   0014C0                     u2770:
  7552   0014C0  500F               	movf	___fladd@bexp^0,w,c
  7553   0014C2  A4D8               	btfss	status,2,c
  7554   0014C4  EF66  F00A         	goto	u2781
  7555   0014C8  EF68  F00A         	goto	u2780
  7556   0014CC                     u2781:
  7557   0014CC  EF7A  F00A         	goto	l3119
  7558   0014D0                     u2780:
  7559   0014D0                     l3115:
  7560   0014D0  0E00               	movlw	0
  7561   0014D2  6E01               	movwf	___fladd@b^0,c
  7562   0014D4  0E00               	movlw	0
  7563   0014D6  6E02               	movwf	(___fladd@b+1)^0,c
  7564   0014D8  0E00               	movlw	0
  7565   0014DA  6E03               	movwf	(___fladd@b+2)^0,c
  7566   0014DC  0E00               	movlw	0
  7567   0014DE  6E04               	movwf	(___fladd@b+3)^0,c
  7568   0014E0  500F               	movf	___fladd@bexp^0,w,c
  7569   0014E2  A4D8               	btfss	status,2,c
  7570   0014E4  EF76  F00A         	goto	u2791
  7571   0014E8  EF78  F00A         	goto	u2790
  7572   0014EC                     u2791:
  7573   0014EC  EF7A  F00A         	goto	l3119
  7574   0014F0                     u2790:
  7575   0014F0  0E00               	movlw	0
  7576   0014F2  6E0D               	movwf	___fladd@signs^0,c
  7577   0014F4                     l3119:
  7578   0014F4  A00F               	btfss	___fladd@bexp^0,0,c
  7579   0014F6  EF7F  F00A         	goto	u2801
  7580   0014FA  EF81  F00A         	goto	u2800
  7581   0014FE                     u2801:
  7582   0014FE  EF84  F00A         	goto	l3123
  7583   001502                     u2800:
  7584   001502  8E03               	bsf	(___fladd@b+2)^0,7,c
  7585   001504  EF85  F00A         	goto	l3125
  7586   001508                     l3123:
  7587   001508  9E03               	bcf	(___fladd@b+2)^0,7,c
  7588   00150A                     l3125:
  7589   00150A  90D8               	bcf	status,0,c
  7590   00150C  300F               	rrcf	___fladd@bexp^0,w,c
  7591   00150E  6E04               	movwf	(___fladd@b+3)^0,c
  7592   001510  AE0D               	btfss	___fladd@signs^0,7,c
  7593   001512  EF8D  F00A         	goto	u2811
  7594   001516  EF8F  F00A         	goto	u2810
  7595   00151A                     u2811:
  7596   00151A  EF90  F00A         	goto	l3131
  7597   00151E                     u2810:
  7598   00151E  8E04               	bsf	(___fladd@b+3)^0,7,c
  7599   001520                     l3131:
  7600   001520  C001  F001         	movff	___fladd@b,?___fladd
  7601   001524  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7602   001528  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7603   00152C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7604   001530                     l786:
  7605   001530  0012               	return		;funcret
  7606   001532                     __end_of___fladd:
  7607                           	callstack 0
  7608                           
  7609 ;; *************** function ___flneg *****************
  7610 ;; Defined at:
  7611 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  f1              4    0[COMRAM] unsigned char 
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;		None
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  4    0[COMRAM] unsigned char 
  7618 ;; Registers used:
  7619 ;;		wreg, status,2, status,0
  7620 ;; Tracked objects:
  7621 ;;		On entry : 0/0
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7625 ;;      Params:         4       0       0       0       0       0       0
  7626 ;;      Locals:         0       0       0       0       0       0       0
  7627 ;;      Temps:          0       0       0       0       0       0       0
  7628 ;;      Totals:         4       0       0       0       0       0       0
  7629 ;;Total ram usage:        4 bytes
  7630 ;; Hardware stack levels used: 1
  7631 ;; Hardware stack levels required when called: 1
  7632 ;; This function calls:
  7633 ;;		Nothing
  7634 ;; This function is called by:
  7635 ;;		_efgtoa
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           	psect	text40
  7640   003A62                     __ptext40:
  7641                           	callstack 0
  7642   003A62                     ___flneg:
  7643                           	callstack 23
  7644   003A62  5001               	movf	___flneg@f1^0,w,c
  7645   003A64  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7646   003A66  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7647   003A68  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7648   003A6A  B4D8               	btfsc	status,2,c
  7649   003A6C  EF3A  F01D         	goto	u3341
  7650   003A70  EF3C  F01D         	goto	u3340
  7651   003A74                     u3341:
  7652   003A74  EF44  F01D         	goto	l3475
  7653   003A78                     u3340:
  7654   003A78  0E00               	movlw	0
  7655   003A7A  1A01               	xorwf	___flneg@f1^0,f,c
  7656   003A7C  0E00               	movlw	0
  7657   003A7E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7658   003A80  0E00               	movlw	0
  7659   003A82  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7660   003A84  0E80               	movlw	128
  7661   003A86  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7662   003A88                     l3475:
  7663   003A88  C001  F001         	movff	___flneg@f1,?___flneg
  7664   003A8C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7665   003A90  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7666   003A94  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7667   003A98  0012               	return		;funcret
  7668   003A9A                     __end_of___flneg:
  7669                           	callstack 0
  7670                           
  7671 ;; *************** function ___flmul *****************
  7672 ;; Defined at:
  7673 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;  b               4   39[COMRAM] unsigned char 
  7676 ;;  a               4   43[COMRAM] unsigned char 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;  prod            4   58[COMRAM] struct .
  7679 ;;  grs             4   52[COMRAM] unsigned long 
  7680 ;;  temp            2   62[COMRAM] struct .
  7681 ;;  bexp            1   57[COMRAM] unsigned char 
  7682 ;;  aexp            1   56[COMRAM] unsigned char 
  7683 ;;  sign            1   51[COMRAM] unsigned char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  4   39[COMRAM] unsigned char 
  7686 ;; Registers used:
  7687 ;;		wreg, status,2, status,0, prodl, prodh
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7693 ;;      Params:         8       0       0       0       0       0       0
  7694 ;;      Locals:        13       0       0       0       0       0       0
  7695 ;;      Temps:          4       0       0       0       0       0       0
  7696 ;;      Totals:        25       0       0       0       0       0       0
  7697 ;;Total ram usage:       25 bytes
  7698 ;; Hardware stack levels used: 1
  7699 ;; Hardware stack levels required when called: 1
  7700 ;; This function calls:
  7701 ;;		Nothing
  7702 ;; This function is called by:
  7703 ;;		_fGetVoltage
  7704 ;;		_fGetPercentDuty
  7705 ;;		_iPWMSetDuty
  7706 ;;		_efgtoa
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text41
  7711   001532                     __ptext41:
  7712                           	callstack 0
  7713   001532                     ___flmul:
  7714                           	callstack 23
  7715   001532  502B               	movf	(___flmul@b+3)^0,w,c
  7716   001534  0B80               	andlw	128
  7717   001536  6E34               	movwf	___flmul@sign^0,c
  7718   001538  502B               	movf	(___flmul@b+3)^0,w,c
  7719   00153A  242B               	addwf	(___flmul@b+3)^0,w,c
  7720   00153C  6E3A               	movwf	___flmul@bexp^0,c
  7721   00153E  AE2A               	btfss	(___flmul@b+2)^0,7,c
  7722   001540  EFA4  F00A         	goto	u3071
  7723   001544  EFA6  F00A         	goto	u3070
  7724   001548                     u3071:
  7725   001548  EFA7  F00A         	goto	l3303
  7726   00154C                     u3070:
  7727   00154C  803A               	bsf	___flmul@bexp^0,0,c
  7728   00154E                     l3303:
  7729   00154E  503A               	movf	___flmul@bexp^0,w,c
  7730   001550  B4D8               	btfsc	status,2,c
  7731   001552  EFAD  F00A         	goto	u3081
  7732   001556  EFAF  F00A         	goto	u3080
  7733   00155A                     u3081:
  7734   00155A  EFC2  F00A         	goto	l3311
  7735   00155E                     u3080:
  7736   00155E  283A               	incf	___flmul@bexp^0,w,c
  7737   001560  A4D8               	btfss	status,2,c
  7738   001562  EFB5  F00A         	goto	u3091
  7739   001566  EFB7  F00A         	goto	u3090
  7740   00156A                     u3091:
  7741   00156A  EFBF  F00A         	goto	l3309
  7742   00156E                     u3090:
  7743   00156E  0E00               	movlw	0
  7744   001570  6E28               	movwf	___flmul@b^0,c
  7745   001572  0E00               	movlw	0
  7746   001574  6E29               	movwf	(___flmul@b+1)^0,c
  7747   001576  0E00               	movlw	0
  7748   001578  6E2A               	movwf	(___flmul@b+2)^0,c
  7749   00157A  0E00               	movlw	0
  7750   00157C  6E2B               	movwf	(___flmul@b+3)^0,c
  7751   00157E                     l3309:
  7752   00157E  8E2A               	bsf	(___flmul@b+2)^0,7,c
  7753   001580  EFCA  F00A         	goto	l3313
  7754   001584                     l3311:
  7755   001584  0E00               	movlw	0
  7756   001586  6E28               	movwf	___flmul@b^0,c
  7757   001588  0E00               	movlw	0
  7758   00158A  6E29               	movwf	(___flmul@b+1)^0,c
  7759   00158C  0E00               	movlw	0
  7760   00158E  6E2A               	movwf	(___flmul@b+2)^0,c
  7761   001590  0E00               	movlw	0
  7762   001592  6E2B               	movwf	(___flmul@b+3)^0,c
  7763   001594                     l3313:
  7764   001594  502F               	movf	(___flmul@a+3)^0,w,c
  7765   001596  0B80               	andlw	128
  7766   001598  1A34               	xorwf	___flmul@sign^0,f,c
  7767   00159A  502F               	movf	(___flmul@a+3)^0,w,c
  7768   00159C  242F               	addwf	(___flmul@a+3)^0,w,c
  7769   00159E  6E39               	movwf	___flmul@aexp^0,c
  7770   0015A0  AE2E               	btfss	(___flmul@a+2)^0,7,c
  7771   0015A2  EFD5  F00A         	goto	u3101
  7772   0015A6  EFD7  F00A         	goto	u3100
  7773   0015AA                     u3101:
  7774   0015AA  EFD8  F00A         	goto	l3321
  7775   0015AE                     u3100:
  7776   0015AE  8039               	bsf	___flmul@aexp^0,0,c
  7777   0015B0                     l3321:
  7778   0015B0  5039               	movf	___flmul@aexp^0,w,c
  7779   0015B2  B4D8               	btfsc	status,2,c
  7780   0015B4  EFDE  F00A         	goto	u3111
  7781   0015B8  EFE0  F00A         	goto	u3110
  7782   0015BC                     u3111:
  7783   0015BC  EFF3  F00A         	goto	l3329
  7784   0015C0                     u3110:
  7785   0015C0  2839               	incf	___flmul@aexp^0,w,c
  7786   0015C2  A4D8               	btfss	status,2,c
  7787   0015C4  EFE6  F00A         	goto	u3121
  7788   0015C8  EFE8  F00A         	goto	u3120
  7789   0015CC                     u3121:
  7790   0015CC  EFF0  F00A         	goto	l3327
  7791   0015D0                     u3120:
  7792   0015D0  0E00               	movlw	0
  7793   0015D2  6E2C               	movwf	___flmul@a^0,c
  7794   0015D4  0E00               	movlw	0
  7795   0015D6  6E2D               	movwf	(___flmul@a+1)^0,c
  7796   0015D8  0E00               	movlw	0
  7797   0015DA  6E2E               	movwf	(___flmul@a+2)^0,c
  7798   0015DC  0E00               	movlw	0
  7799   0015DE  6E2F               	movwf	(___flmul@a+3)^0,c
  7800   0015E0                     l3327:
  7801   0015E0  8E2E               	bsf	(___flmul@a+2)^0,7,c
  7802   0015E2  EFFB  F00A         	goto	l863
  7803   0015E6                     l3329:
  7804   0015E6  0E00               	movlw	0
  7805   0015E8  6E2C               	movwf	___flmul@a^0,c
  7806   0015EA  0E00               	movlw	0
  7807   0015EC  6E2D               	movwf	(___flmul@a+1)^0,c
  7808   0015EE  0E00               	movlw	0
  7809   0015F0  6E2E               	movwf	(___flmul@a+2)^0,c
  7810   0015F2  0E00               	movlw	0
  7811   0015F4  6E2F               	movwf	(___flmul@a+3)^0,c
  7812   0015F6                     l863:
  7813   0015F6  5039               	movf	___flmul@aexp^0,w,c
  7814   0015F8  B4D8               	btfsc	status,2,c
  7815   0015FA  EF01  F00B         	goto	u3131
  7816   0015FE  EF03  F00B         	goto	u3130
  7817   001602                     u3131:
  7818   001602  EF0B  F00B         	goto	l3333
  7819   001606                     u3130:
  7820   001606  503A               	movf	___flmul@bexp^0,w,c
  7821   001608  A4D8               	btfss	status,2,c
  7822   00160A  EF09  F00B         	goto	u3141
  7823   00160E  EF0B  F00B         	goto	u3140
  7824   001612                     u3141:
  7825   001612  EF15  F00B         	goto	l3337
  7826   001616                     u3140:
  7827   001616                     l3333:
  7828   001616  0E00               	movlw	0
  7829   001618  6E28               	movwf	?___flmul^0,c
  7830   00161A  0E00               	movlw	0
  7831   00161C  6E29               	movwf	(?___flmul+1)^0,c
  7832   00161E  0E00               	movlw	0
  7833   001620  6E2A               	movwf	(?___flmul+2)^0,c
  7834   001622  0E00               	movlw	0
  7835   001624  6E2B               	movwf	(?___flmul+3)^0,c
  7836   001626  EFAD  F00C         	goto	l867
  7837   00162A                     l3337:
  7838   00162A  502E               	movf	(___flmul@a+2)^0,w,c
  7839   00162C  0228               	mulwf	___flmul@b^0,c
  7840   00162E  CFF3 F03F          	movff	prodl,___flmul@temp
  7841   001632  CFF4 F040          	movff	prodh,___flmul@temp+1
  7842   001636  503F               	movf	___flmul@temp^0,w,c
  7843   001638  6E35               	movwf	___flmul@grs^0,c
  7844   00163A  6A36               	clrf	(___flmul@grs+1)^0,c
  7845   00163C  6A37               	clrf	(___flmul@grs+2)^0,c
  7846   00163E  6A38               	clrf	(___flmul@grs+3)^0,c
  7847   001640  5040               	movf	(___flmul@temp+1)^0,w,c
  7848   001642  6E3B               	movwf	___flmul@prod^0,c
  7849   001644  6A3C               	clrf	(___flmul@prod+1)^0,c
  7850   001646  6A3D               	clrf	(___flmul@prod+2)^0,c
  7851   001648  6A3E               	clrf	(___flmul@prod+3)^0,c
  7852   00164A  502D               	movf	(___flmul@a+1)^0,w,c
  7853   00164C  0229               	mulwf	(___flmul@b+1)^0,c
  7854   00164E  CFF3 F03F          	movff	prodl,___flmul@temp
  7855   001652  CFF4 F040          	movff	prodh,___flmul@temp+1
  7856   001656  503F               	movf	___flmul@temp^0,w,c
  7857   001658  2635               	addwf	___flmul@grs^0,f,c
  7858   00165A  0E00               	movlw	0
  7859   00165C  2236               	addwfc	(___flmul@grs+1)^0,f,c
  7860   00165E  2237               	addwfc	(___flmul@grs+2)^0,f,c
  7861   001660  2238               	addwfc	(___flmul@grs+3)^0,f,c
  7862   001662  5040               	movf	(___flmul@temp+1)^0,w,c
  7863   001664  263B               	addwf	___flmul@prod^0,f,c
  7864   001666  0E00               	movlw	0
  7865   001668  223C               	addwfc	(___flmul@prod+1)^0,f,c
  7866   00166A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  7867   00166C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  7868   00166E  502C               	movf	___flmul@a^0,w,c
  7869   001670  022A               	mulwf	(___flmul@b+2)^0,c
  7870   001672  CFF3 F03F          	movff	prodl,___flmul@temp
  7871   001676  CFF4 F040          	movff	prodh,___flmul@temp+1
  7872   00167A  503F               	movf	___flmul@temp^0,w,c
  7873   00167C  2635               	addwf	___flmul@grs^0,f,c
  7874   00167E  0E00               	movlw	0
  7875   001680  2236               	addwfc	(___flmul@grs+1)^0,f,c
  7876   001682  2237               	addwfc	(___flmul@grs+2)^0,f,c
  7877   001684  2238               	addwfc	(___flmul@grs+3)^0,f,c
  7878   001686  5040               	movf	(___flmul@temp+1)^0,w,c
  7879   001688  263B               	addwf	___flmul@prod^0,f,c
  7880   00168A  0E00               	movlw	0
  7881   00168C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  7882   00168E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  7883   001690  223E               	addwfc	(___flmul@prod+3)^0,f,c
  7884   001692  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  7885   001696  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  7886   00169A  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  7887   00169E  6A35               	clrf	___flmul@grs^0,c
  7888   0016A0  502C               	movf	___flmul@a^0,w,c
  7889   0016A2  0229               	mulwf	(___flmul@b+1)^0,c
  7890   0016A4  CFF3 F03F          	movff	prodl,___flmul@temp
  7891   0016A8  CFF4 F040          	movff	prodh,___flmul@temp+1
  7892   0016AC  503F               	movf	___flmul@temp^0,w,c
  7893   0016AE  2635               	addwf	___flmul@grs^0,f,c
  7894   0016B0  5040               	movf	(___flmul@temp+1)^0,w,c
  7895   0016B2  2236               	addwfc	(___flmul@grs+1)^0,f,c
  7896   0016B4  0E00               	movlw	0
  7897   0016B6  2237               	addwfc	(___flmul@grs+2)^0,f,c
  7898   0016B8  0E00               	movlw	0
  7899   0016BA  2238               	addwfc	(___flmul@grs+3)^0,f,c
  7900   0016BC  502D               	movf	(___flmul@a+1)^0,w,c
  7901   0016BE  0228               	mulwf	___flmul@b^0,c
  7902   0016C0  CFF3 F03F          	movff	prodl,___flmul@temp
  7903   0016C4  CFF4 F040          	movff	prodh,___flmul@temp+1
  7904   0016C8  503F               	movf	___flmul@temp^0,w,c
  7905   0016CA  2635               	addwf	___flmul@grs^0,f,c
  7906   0016CC  5040               	movf	(___flmul@temp+1)^0,w,c
  7907   0016CE  2236               	addwfc	(___flmul@grs+1)^0,f,c
  7908   0016D0  0E00               	movlw	0
  7909   0016D2  2237               	addwfc	(___flmul@grs+2)^0,f,c
  7910   0016D4  0E00               	movlw	0
  7911   0016D6  2238               	addwfc	(___flmul@grs+3)^0,f,c
  7912   0016D8  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  7913   0016DC  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  7914   0016E0  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  7915   0016E4  6A35               	clrf	___flmul@grs^0,c
  7916   0016E6  502C               	movf	___flmul@a^0,w,c
  7917   0016E8  0228               	mulwf	___flmul@b^0,c
  7918   0016EA  CFF3 F03F          	movff	prodl,___flmul@temp
  7919   0016EE  CFF4 F040          	movff	prodh,___flmul@temp+1
  7920   0016F2  503F               	movf	___flmul@temp^0,w,c
  7921   0016F4  2635               	addwf	___flmul@grs^0,f,c
  7922   0016F6  5040               	movf	(___flmul@temp+1)^0,w,c
  7923   0016F8  2236               	addwfc	(___flmul@grs+1)^0,f,c
  7924   0016FA  0E00               	movlw	0
  7925   0016FC  2237               	addwfc	(___flmul@grs+2)^0,f,c
  7926   0016FE  0E00               	movlw	0
  7927   001700  2238               	addwfc	(___flmul@grs+3)^0,f,c
  7928   001702  502E               	movf	(___flmul@a+2)^0,w,c
  7929   001704  0229               	mulwf	(___flmul@b+1)^0,c
  7930   001706  CFF3 F03F          	movff	prodl,___flmul@temp
  7931   00170A  CFF4 F040          	movff	prodh,___flmul@temp+1
  7932   00170E  503F               	movf	___flmul@temp^0,w,c
  7933   001710  263B               	addwf	___flmul@prod^0,f,c
  7934   001712  5040               	movf	(___flmul@temp+1)^0,w,c
  7935   001714  223C               	addwfc	(___flmul@prod+1)^0,f,c
  7936   001716  0E00               	movlw	0
  7937   001718  223D               	addwfc	(___flmul@prod+2)^0,f,c
  7938   00171A  0E00               	movlw	0
  7939   00171C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  7940   00171E  502D               	movf	(___flmul@a+1)^0,w,c
  7941   001720  022A               	mulwf	(___flmul@b+2)^0,c
  7942   001722  CFF3 F03F          	movff	prodl,___flmul@temp
  7943   001726  CFF4 F040          	movff	prodh,___flmul@temp+1
  7944   00172A  503F               	movf	___flmul@temp^0,w,c
  7945   00172C  263B               	addwf	___flmul@prod^0,f,c
  7946   00172E  5040               	movf	(___flmul@temp+1)^0,w,c
  7947   001730  223C               	addwfc	(___flmul@prod+1)^0,f,c
  7948   001732  0E00               	movlw	0
  7949   001734  223D               	addwfc	(___flmul@prod+2)^0,f,c
  7950   001736  0E00               	movlw	0
  7951   001738  223E               	addwfc	(___flmul@prod+3)^0,f,c
  7952   00173A  502E               	movf	(___flmul@a+2)^0,w,c
  7953   00173C  022A               	mulwf	(___flmul@b+2)^0,c
  7954   00173E  CFF3 F03F          	movff	prodl,___flmul@temp
  7955   001742  CFF4 F040          	movff	prodh,___flmul@temp+1
  7956   001746  503F               	movf	___flmul@temp^0,w,c
  7957   001748  6E30               	movwf	??___flmul^0,c
  7958   00174A  5040               	movf	(___flmul@temp+1)^0,w,c
  7959   00174C  6E31               	movwf	(??___flmul+1)^0,c
  7960   00174E  6A32               	clrf	(??___flmul+2)^0,c
  7961   001750  6A33               	clrf	(??___flmul+3)^0,c
  7962   001752  C032  F033         	movff	??___flmul+2,??___flmul+3
  7963   001756  C031  F032         	movff	??___flmul+1,??___flmul+2
  7964   00175A  C030  F031         	movff	??___flmul,??___flmul+1
  7965   00175E  6A30               	clrf	??___flmul^0,c
  7966   001760  5030               	movf	??___flmul^0,w,c
  7967   001762  263B               	addwf	___flmul@prod^0,f,c
  7968   001764  5031               	movf	(??___flmul+1)^0,w,c
  7969   001766  223C               	addwfc	(___flmul@prod+1)^0,f,c
  7970   001768  5032               	movf	(??___flmul+2)^0,w,c
  7971   00176A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  7972   00176C  5033               	movf	(??___flmul+3)^0,w,c
  7973   00176E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  7974   001770  C035  F030         	movff	___flmul@grs,??___flmul
  7975   001774  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  7976   001778  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  7977   00177C  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  7978   001780  0E19               	movlw	25
  7979   001782  EFC8  F00B         	goto	u3150
  7980   001786                     u3155:
  7981   001786  90D8               	bcf	status,0,c
  7982   001788  3233               	rrcf	(??___flmul+3)^0,f,c
  7983   00178A  3232               	rrcf	(??___flmul+2)^0,f,c
  7984   00178C  3231               	rrcf	(??___flmul+1)^0,f,c
  7985   00178E  3230               	rrcf	??___flmul^0,f,c
  7986   001790                     u3150:
  7987   001790  2EE8               	decfsz	wreg,f,c
  7988   001792  EFC3  F00B         	goto	u3155
  7989   001796  5030               	movf	??___flmul^0,w,c
  7990   001798  263B               	addwf	___flmul@prod^0,f,c
  7991   00179A  5031               	movf	(??___flmul+1)^0,w,c
  7992   00179C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  7993   00179E  5032               	movf	(??___flmul+2)^0,w,c
  7994   0017A0  223D               	addwfc	(___flmul@prod+2)^0,f,c
  7995   0017A2  5033               	movf	(??___flmul+3)^0,w,c
  7996   0017A4  223E               	addwfc	(___flmul@prod+3)^0,f,c
  7997   0017A6  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  7998   0017AA  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  7999   0017AE  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  8000   0017B2  6A35               	clrf	___flmul@grs^0,c
  8001   0017B4  5039               	movf	___flmul@aexp^0,w,c
  8002   0017B6  C03A  F030         	movff	___flmul@bexp,??___flmul
  8003   0017BA  6A31               	clrf	(??___flmul+1)^0,c
  8004   0017BC  2630               	addwf	??___flmul^0,f,c
  8005   0017BE  0E00               	movlw	0
  8006   0017C0  2231               	addwfc	(??___flmul+1)^0,f,c
  8007   0017C2  0E82               	movlw	130
  8008   0017C4  2430               	addwf	??___flmul^0,w,c
  8009   0017C6  6E3F               	movwf	___flmul@temp^0,c
  8010   0017C8  0EFF               	movlw	255
  8011   0017CA  2031               	addwfc	(??___flmul+1)^0,w,c
  8012   0017CC  6E40               	movwf	(___flmul@temp+1)^0,c
  8013   0017CE  EFFE  F00B         	goto	l3385
  8014   0017D2                     l3379:
  8015   0017D2  90D8               	bcf	status,0,c
  8016   0017D4  363B               	rlcf	___flmul@prod^0,f,c
  8017   0017D6  363C               	rlcf	(___flmul@prod+1)^0,f,c
  8018   0017D8  363D               	rlcf	(___flmul@prod+2)^0,f,c
  8019   0017DA  363E               	rlcf	(___flmul@prod+3)^0,f,c
  8020   0017DC  AE38               	btfss	(___flmul@grs+3)^0,7,c
  8021   0017DE  EFF3  F00B         	goto	u3161
  8022   0017E2  EFF5  F00B         	goto	u3160
  8023   0017E6                     u3161:
  8024   0017E6  EFF6  F00B         	goto	l870
  8025   0017EA                     u3160:
  8026   0017EA  803B               	bsf	___flmul@prod^0,0,c
  8027   0017EC                     l870:
  8028   0017EC  90D8               	bcf	status,0,c
  8029   0017EE  3635               	rlcf	___flmul@grs^0,f,c
  8030   0017F0  3636               	rlcf	(___flmul@grs+1)^0,f,c
  8031   0017F2  3637               	rlcf	(___flmul@grs+2)^0,f,c
  8032   0017F4  3638               	rlcf	(___flmul@grs+3)^0,f,c
  8033   0017F6  063F               	decf	___flmul@temp^0,f,c
  8034   0017F8  A0D8               	btfss	status,0,c
  8035   0017FA  0640               	decf	(___flmul@temp+1)^0,f,c
  8036   0017FC                     l3385:
  8037   0017FC  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  8038   0017FE  EF03  F00C         	goto	u3171
  8039   001802  EF05  F00C         	goto	u3170
  8040   001806                     u3171:
  8041   001806  EFE9  F00B         	goto	l3379
  8042   00180A                     u3170:
  8043   00180A  0E00               	movlw	0
  8044   00180C  6E39               	movwf	___flmul@aexp^0,c
  8045   00180E  AE38               	btfss	(___flmul@grs+3)^0,7,c
  8046   001810  EF0C  F00C         	goto	u3181
  8047   001814  EF0E  F00C         	goto	u3180
  8048   001818                     u3181:
  8049   001818  EF32  F00C         	goto	l872
  8050   00181C                     u3180:
  8051   00181C  0EFF               	movlw	255
  8052   00181E  1435               	andwf	___flmul@grs^0,w,c
  8053   001820  6E30               	movwf	??___flmul^0,c
  8054   001822  0EFF               	movlw	255
  8055   001824  1436               	andwf	(___flmul@grs+1)^0,w,c
  8056   001826  6E31               	movwf	(??___flmul+1)^0,c
  8057   001828  0EFF               	movlw	255
  8058   00182A  1437               	andwf	(___flmul@grs+2)^0,w,c
  8059   00182C  6E32               	movwf	(??___flmul+2)^0,c
  8060   00182E  0E7F               	movlw	127
  8061   001830  1438               	andwf	(___flmul@grs+3)^0,w,c
  8062   001832  6E33               	movwf	(??___flmul+3)^0,c
  8063   001834  5030               	movf	??___flmul^0,w,c
  8064   001836  1031               	iorwf	(??___flmul+1)^0,w,c
  8065   001838  1032               	iorwf	(??___flmul+2)^0,w,c
  8066   00183A  1033               	iorwf	(??___flmul+3)^0,w,c
  8067   00183C  B4D8               	btfsc	status,2,c
  8068   00183E  EF23  F00C         	goto	u3191
  8069   001842  EF25  F00C         	goto	u3190
  8070   001846                     u3191:
  8071   001846  EF29  F00C         	goto	l873
  8072   00184A                     u3190:
  8073   00184A                     l3393:
  8074   00184A  0E01               	movlw	1
  8075   00184C  6E39               	movwf	___flmul@aexp^0,c
  8076   00184E  EF32  F00C         	goto	l872
  8077   001852                     l873:
  8078   001852  A03B               	btfss	___flmul@prod^0,0,c
  8079   001854  EF2E  F00C         	goto	u3201
  8080   001858  EF30  F00C         	goto	u3200
  8081   00185C                     u3201:
  8082   00185C  EF32  F00C         	goto	l872
  8083   001860                     u3200:
  8084   001860  EF25  F00C         	goto	l3393
  8085   001864                     l872:
  8086   001864  5039               	movf	___flmul@aexp^0,w,c
  8087   001866  B4D8               	btfsc	status,2,c
  8088   001868  EF38  F00C         	goto	u3211
  8089   00186C  EF3A  F00C         	goto	u3210
  8090   001870                     u3211:
  8091   001870  EF5E  F00C         	goto	l3405
  8092   001874                     u3210:
  8093   001874  0E01               	movlw	1
  8094   001876  263B               	addwf	___flmul@prod^0,f,c
  8095   001878  0E00               	movlw	0
  8096   00187A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8097   00187C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8098   00187E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8099   001880  A03E               	btfss	(___flmul@prod+3)^0,0,c
  8100   001882  EF45  F00C         	goto	u3221
  8101   001886  EF47  F00C         	goto	u3220
  8102   00188A                     u3221:
  8103   00188A  EF5E  F00C         	goto	l3405
  8104   00188E                     u3220:
  8105   00188E  C03B  F030         	movff	___flmul@prod,??___flmul
  8106   001892  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  8107   001896  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  8108   00189A  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  8109   00189E  3433               	rlcf	(??___flmul+3)^0,w,c
  8110   0018A0  3233               	rrcf	(??___flmul+3)^0,f,c
  8111   0018A2  3232               	rrcf	(??___flmul+2)^0,f,c
  8112   0018A4  3231               	rrcf	(??___flmul+1)^0,f,c
  8113   0018A6  3230               	rrcf	??___flmul^0,f,c
  8114   0018A8  C030  F03B         	movff	??___flmul,___flmul@prod
  8115   0018AC  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  8116   0018B0  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  8117   0018B4  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  8118   0018B8  4A3F               	infsnz	___flmul@temp^0,f,c
  8119   0018BA  2A40               	incf	(___flmul@temp+1)^0,f,c
  8120   0018BC                     l3405:
  8121   0018BC  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  8122   0018BE  EF69  F00C         	goto	u3231
  8123   0018C2  5040               	movf	(___flmul@temp+1)^0,w,c
  8124   0018C4  E108               	bnz	u3230
  8125   0018C6  283F               	incf	___flmul@temp^0,w,c
  8126   0018C8  A0D8               	btfss	status,0,c
  8127   0018CA  EF69  F00C         	goto	u3231
  8128   0018CE  EF6B  F00C         	goto	u3230
  8129   0018D2                     u3231:
  8130   0018D2  EF75  F00C         	goto	l3409
  8131   0018D6                     u3230:
  8132   0018D6  0E00               	movlw	0
  8133   0018D8  6E3B               	movwf	___flmul@prod^0,c
  8134   0018DA  0E00               	movlw	0
  8135   0018DC  6E3C               	movwf	(___flmul@prod+1)^0,c
  8136   0018DE  0E80               	movlw	128
  8137   0018E0  6E3D               	movwf	(___flmul@prod+2)^0,c
  8138   0018E2  0E7F               	movlw	127
  8139   0018E4  6E3E               	movwf	(___flmul@prod+3)^0,c
  8140   0018E6  EFA3  F00C         	goto	l3421
  8141   0018EA                     l3409:
  8142   0018EA  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  8143   0018EC  EF82  F00C         	goto	u3240
  8144   0018F0  5040               	movf	(___flmul@temp+1)^0,w,c
  8145   0018F2  E106               	bnz	u3241
  8146   0018F4  043F               	decf	___flmul@temp^0,w,c
  8147   0018F6  B0D8               	btfsc	status,0,c
  8148   0018F8  EF80  F00C         	goto	u3241
  8149   0018FC  EF82  F00C         	goto	u3240
  8150   001900                     u3241:
  8151   001900  EF8E  F00C         	goto	l880
  8152   001904                     u3240:
  8153   001904  0E00               	movlw	0
  8154   001906  6E3B               	movwf	___flmul@prod^0,c
  8155   001908  0E00               	movlw	0
  8156   00190A  6E3C               	movwf	(___flmul@prod+1)^0,c
  8157   00190C  0E00               	movlw	0
  8158   00190E  6E3D               	movwf	(___flmul@prod+2)^0,c
  8159   001910  0E00               	movlw	0
  8160   001912  6E3E               	movwf	(___flmul@prod+3)^0,c
  8161   001914  0E00               	movlw	0
  8162   001916  6E34               	movwf	___flmul@sign^0,c
  8163   001918  EFA3  F00C         	goto	l3421
  8164   00191C                     l880:
  8165   00191C  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  8166   001920  0EFF               	movlw	255
  8167   001922  163B               	andwf	___flmul@prod^0,f,c
  8168   001924  0EFF               	movlw	255
  8169   001926  163C               	andwf	(___flmul@prod+1)^0,f,c
  8170   001928  0E7F               	movlw	127
  8171   00192A  163D               	andwf	(___flmul@prod+2)^0,f,c
  8172   00192C  0E00               	movlw	0
  8173   00192E  163E               	andwf	(___flmul@prod+3)^0,f,c
  8174   001930  A03A               	btfss	___flmul@bexp^0,0,c
  8175   001932  EF9D  F00C         	goto	u3251
  8176   001936  EF9F  F00C         	goto	u3250
  8177   00193A                     u3251:
  8178   00193A  EFA0  F00C         	goto	l3419
  8179   00193E                     u3250:
  8180   00193E  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  8181   001940                     l3419:
  8182   001940  90D8               	bcf	status,0,c
  8183   001942  303A               	rrcf	___flmul@bexp^0,w,c
  8184   001944  6E3E               	movwf	(___flmul@prod+3)^0,c
  8185   001946                     l3421:
  8186   001946  5034               	movf	___flmul@sign^0,w,c
  8187   001948  123E               	iorwf	(___flmul@prod+3)^0,f,c
  8188   00194A  C03B  F028         	movff	___flmul@prod,?___flmul
  8189   00194E  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  8190   001952  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  8191   001956  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  8192   00195A                     l867:
  8193   00195A  0012               	return		;funcret
  8194   00195C                     __end_of___flmul:
  8195                           	callstack 0
  8196                           
  8197 ;; *************** function ___flge *****************
  8198 ;; Defined at:
  8199 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;  ff1             4   64[COMRAM] unsigned char 
  8202 ;;  ff2             4   68[COMRAM] unsigned char 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;		None
  8205 ;; Return value:  Size  Location     Type
  8206 ;;		None               void
  8207 ;; Registers used:
  8208 ;;		wreg, status,2, status,0
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8214 ;;      Params:         8       0       0       0       0       0       0
  8215 ;;      Locals:         0       0       0       0       0       0       0
  8216 ;;      Temps:          4       0       0       0       0       0       0
  8217 ;;      Totals:        12       0       0       0       0       0       0
  8218 ;;Total ram usage:       12 bytes
  8219 ;; Hardware stack levels used: 1
  8220 ;; Hardware stack levels required when called: 1
  8221 ;; This function calls:
  8222 ;;		Nothing
  8223 ;; This function is called by:
  8224 ;;		_efgtoa
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           	psect	text42
  8229   002A66                     __ptext42:
  8230                           	callstack 0
  8231   002A66                     ___flge:
  8232                           	callstack 23
  8233   002A66  0E00               	movlw	0
  8234   002A68  1441               	andwf	___flge@ff1^0,w,c
  8235   002A6A  6E49               	movwf	??___flge^0,c
  8236   002A6C  0E00               	movlw	0
  8237   002A6E  1442               	andwf	(___flge@ff1+1)^0,w,c
  8238   002A70  6E4A               	movwf	(??___flge+1)^0,c
  8239   002A72  0E80               	movlw	128
  8240   002A74  1443               	andwf	(___flge@ff1+2)^0,w,c
  8241   002A76  6E4B               	movwf	(??___flge+2)^0,c
  8242   002A78  0E7F               	movlw	127
  8243   002A7A  1444               	andwf	(___flge@ff1+3)^0,w,c
  8244   002A7C  6E4C               	movwf	(??___flge+3)^0,c
  8245   002A7E  5049               	movf	??___flge^0,w,c
  8246   002A80  104A               	iorwf	(??___flge+1)^0,w,c
  8247   002A82  104B               	iorwf	(??___flge+2)^0,w,c
  8248   002A84  104C               	iorwf	(??___flge+3)^0,w,c
  8249   002A86  A4D8               	btfss	status,2,c
  8250   002A88  EF48  F015         	goto	u3291
  8251   002A8C  EF4A  F015         	goto	u3290
  8252   002A90                     u3291:
  8253   002A90  EF52  F015         	goto	l3453
  8254   002A94                     u3290:
  8255   002A94  0E00               	movlw	0
  8256   002A96  6E41               	movwf	___flge@ff1^0,c
  8257   002A98  0E00               	movlw	0
  8258   002A9A  6E42               	movwf	(___flge@ff1+1)^0,c
  8259   002A9C  0E00               	movlw	0
  8260   002A9E  6E43               	movwf	(___flge@ff1+2)^0,c
  8261   002AA0  0E00               	movlw	0
  8262   002AA2  6E44               	movwf	(___flge@ff1+3)^0,c
  8263   002AA4                     l3453:
  8264   002AA4  0E00               	movlw	0
  8265   002AA6  1445               	andwf	___flge@ff2^0,w,c
  8266   002AA8  6E49               	movwf	??___flge^0,c
  8267   002AAA  0E00               	movlw	0
  8268   002AAC  1446               	andwf	(___flge@ff2+1)^0,w,c
  8269   002AAE  6E4A               	movwf	(??___flge+1)^0,c
  8270   002AB0  0E80               	movlw	128
  8271   002AB2  1447               	andwf	(___flge@ff2+2)^0,w,c
  8272   002AB4  6E4B               	movwf	(??___flge+2)^0,c
  8273   002AB6  0E7F               	movlw	127
  8274   002AB8  1448               	andwf	(___flge@ff2+3)^0,w,c
  8275   002ABA  6E4C               	movwf	(??___flge+3)^0,c
  8276   002ABC  5049               	movf	??___flge^0,w,c
  8277   002ABE  104A               	iorwf	(??___flge+1)^0,w,c
  8278   002AC0  104B               	iorwf	(??___flge+2)^0,w,c
  8279   002AC2  104C               	iorwf	(??___flge+3)^0,w,c
  8280   002AC4  A4D8               	btfss	status,2,c
  8281   002AC6  EF67  F015         	goto	u3301
  8282   002ACA  EF69  F015         	goto	u3300
  8283   002ACE                     u3301:
  8284   002ACE  EF71  F015         	goto	l3457
  8285   002AD2                     u3300:
  8286   002AD2  0E00               	movlw	0
  8287   002AD4  6E45               	movwf	___flge@ff2^0,c
  8288   002AD6  0E00               	movlw	0
  8289   002AD8  6E46               	movwf	(___flge@ff2+1)^0,c
  8290   002ADA  0E00               	movlw	0
  8291   002ADC  6E47               	movwf	(___flge@ff2+2)^0,c
  8292   002ADE  0E00               	movlw	0
  8293   002AE0  6E48               	movwf	(___flge@ff2+3)^0,c
  8294   002AE2                     l3457:
  8295   002AE2  AE44               	btfss	(___flge@ff1+3)^0,7,c
  8296   002AE4  EF76  F015         	goto	u3311
  8297   002AE8  EF78  F015         	goto	u3310
  8298   002AEC                     u3311:
  8299   002AEC  EF81  F015         	goto	l3461
  8300   002AF0                     u3310:
  8301   002AF0  6C41               	negf	___flge@ff1^0,c
  8302   002AF2  1E42               	comf	(___flge@ff1+1)^0,f,c
  8303   002AF4  B0D8               	btfsc	status,0,c
  8304   002AF6  2A42               	incf	(___flge@ff1+1)^0,f,c
  8305   002AF8  1E43               	comf	(___flge@ff1+2)^0,f,c
  8306   002AFA  B0D8               	btfsc	status,0,c
  8307   002AFC  2A43               	incf	(___flge@ff1+2)^0,f,c
  8308   002AFE  0E80               	movlw	128
  8309   002B00  5644               	subfwb	(___flge@ff1+3)^0,f,c
  8310   002B02                     l3461:
  8311   002B02  AE48               	btfss	(___flge@ff2+3)^0,7,c
  8312   002B04  EF86  F015         	goto	u3321
  8313   002B08  EF88  F015         	goto	u3320
  8314   002B0C                     u3321:
  8315   002B0C  EF91  F015         	goto	l514
  8316   002B10                     u3320:
  8317   002B10  6C45               	negf	___flge@ff2^0,c
  8318   002B12  1E46               	comf	(___flge@ff2+1)^0,f,c
  8319   002B14  B0D8               	btfsc	status,0,c
  8320   002B16  2A46               	incf	(___flge@ff2+1)^0,f,c
  8321   002B18  1E47               	comf	(___flge@ff2+2)^0,f,c
  8322   002B1A  B0D8               	btfsc	status,0,c
  8323   002B1C  2A47               	incf	(___flge@ff2+2)^0,f,c
  8324   002B1E  0E80               	movlw	128
  8325   002B20  5648               	subfwb	(___flge@ff2+3)^0,f,c
  8326   002B22                     l514:
  8327   002B22  0E00               	movlw	0
  8328   002B24  1A41               	xorwf	___flge@ff1^0,f,c
  8329   002B26  0E00               	movlw	0
  8330   002B28  1A42               	xorwf	(___flge@ff1+1)^0,f,c
  8331   002B2A  0E00               	movlw	0
  8332   002B2C  1A43               	xorwf	(___flge@ff1+2)^0,f,c
  8333   002B2E  0E80               	movlw	128
  8334   002B30  1A44               	xorwf	(___flge@ff1+3)^0,f,c
  8335   002B32  0E00               	movlw	0
  8336   002B34  1A45               	xorwf	___flge@ff2^0,f,c
  8337   002B36  0E00               	movlw	0
  8338   002B38  1A46               	xorwf	(___flge@ff2+1)^0,f,c
  8339   002B3A  0E00               	movlw	0
  8340   002B3C  1A47               	xorwf	(___flge@ff2+2)^0,f,c
  8341   002B3E  0E80               	movlw	128
  8342   002B40  1A48               	xorwf	(___flge@ff2+3)^0,f,c
  8343   002B42  5045               	movf	___flge@ff2^0,w,c
  8344   002B44  5C41               	subwf	___flge@ff1^0,w,c
  8345   002B46  5046               	movf	(___flge@ff2+1)^0,w,c
  8346   002B48  5842               	subwfb	(___flge@ff1+1)^0,w,c
  8347   002B4A  5047               	movf	(___flge@ff2+2)^0,w,c
  8348   002B4C  5843               	subwfb	(___flge@ff1+2)^0,w,c
  8349   002B4E  5048               	movf	(___flge@ff2+3)^0,w,c
  8350   002B50  5844               	subwfb	(___flge@ff1+3)^0,w,c
  8351   002B52  B0D8               	btfsc	status,0,c
  8352   002B54  EFAE  F015         	goto	u3331
  8353   002B58  EFB0  F015         	goto	u3330
  8354   002B5C                     u3331:
  8355   002B5C  EFB3  F015         	goto	l3467
  8356   002B60                     u3330:
  8357   002B60  90D8               	bcf	status,0,c
  8358   002B62  EFB4  F015         	goto	l519
  8359   002B66                     l3467:
  8360   002B66  80D8               	bsf	status,0,c
  8361   002B68                     l519:
  8362   002B68  0012               	return		;funcret
  8363   002B6A                     __end_of___flge:
  8364                           	callstack 0
  8365                           
  8366 ;; *************** function ___fleq *****************
  8367 ;; Defined at:
  8368 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  ff1             4    0[COMRAM] unsigned char 
  8371 ;;  ff2             4    4[COMRAM] unsigned char 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;		None               void
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8383 ;;      Params:         8       0       0       0       0       0       0
  8384 ;;      Locals:         0       0       0       0       0       0       0
  8385 ;;      Temps:          4       0       0       0       0       0       0
  8386 ;;      Totals:        12       0       0       0       0       0       0
  8387 ;;Total ram usage:       12 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; Hardware stack levels required when called: 1
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_efgtoa
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text43
  8398   002FB6                     __ptext43:
  8399                           	callstack 0
  8400   002FB6                     ___fleq:
  8401                           	callstack 23
  8402   002FB6  0E00               	movlw	0
  8403   002FB8  1401               	andwf	___fleq@ff1^0,w,c
  8404   002FBA  6E09               	movwf	??___fleq^0,c
  8405   002FBC  0E00               	movlw	0
  8406   002FBE  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8407   002FC0  6E0A               	movwf	(??___fleq+1)^0,c
  8408   002FC2  0E80               	movlw	128
  8409   002FC4  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8410   002FC6  6E0B               	movwf	(??___fleq+2)^0,c
  8411   002FC8  0E7F               	movlw	127
  8412   002FCA  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8413   002FCC  6E0C               	movwf	(??___fleq+3)^0,c
  8414   002FCE  5009               	movf	??___fleq^0,w,c
  8415   002FD0  100A               	iorwf	(??___fleq+1)^0,w,c
  8416   002FD2  100B               	iorwf	(??___fleq+2)^0,w,c
  8417   002FD4  100C               	iorwf	(??___fleq+3)^0,w,c
  8418   002FD6  A4D8               	btfss	status,2,c
  8419   002FD8  EFF0  F017         	goto	u3261
  8420   002FDC  EFF2  F017         	goto	u3260
  8421   002FE0                     u3261:
  8422   002FE0  EFFA  F017         	goto	l3437
  8423   002FE4                     u3260:
  8424   002FE4  0E00               	movlw	0
  8425   002FE6  6E01               	movwf	___fleq@ff1^0,c
  8426   002FE8  0E00               	movlw	0
  8427   002FEA  6E02               	movwf	(___fleq@ff1+1)^0,c
  8428   002FEC  0E00               	movlw	0
  8429   002FEE  6E03               	movwf	(___fleq@ff1+2)^0,c
  8430   002FF0  0E00               	movlw	0
  8431   002FF2  6E04               	movwf	(___fleq@ff1+3)^0,c
  8432   002FF4                     l3437:
  8433   002FF4  0E00               	movlw	0
  8434   002FF6  1405               	andwf	___fleq@ff2^0,w,c
  8435   002FF8  6E09               	movwf	??___fleq^0,c
  8436   002FFA  0E00               	movlw	0
  8437   002FFC  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8438   002FFE  6E0A               	movwf	(??___fleq+1)^0,c
  8439   003000  0E80               	movlw	128
  8440   003002  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8441   003004  6E0B               	movwf	(??___fleq+2)^0,c
  8442   003006  0E7F               	movlw	127
  8443   003008  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8444   00300A  6E0C               	movwf	(??___fleq+3)^0,c
  8445   00300C  5009               	movf	??___fleq^0,w,c
  8446   00300E  100A               	iorwf	(??___fleq+1)^0,w,c
  8447   003010  100B               	iorwf	(??___fleq+2)^0,w,c
  8448   003012  100C               	iorwf	(??___fleq+3)^0,w,c
  8449   003014  A4D8               	btfss	status,2,c
  8450   003016  EF0F  F018         	goto	u3271
  8451   00301A  EF11  F018         	goto	u3270
  8452   00301E                     u3271:
  8453   00301E  EF19  F018         	goto	l3441
  8454   003022                     u3270:
  8455   003022  0E00               	movlw	0
  8456   003024  6E05               	movwf	___fleq@ff2^0,c
  8457   003026  0E00               	movlw	0
  8458   003028  6E06               	movwf	(___fleq@ff2+1)^0,c
  8459   00302A  0E00               	movlw	0
  8460   00302C  6E07               	movwf	(___fleq@ff2+2)^0,c
  8461   00302E  0E00               	movlw	0
  8462   003030  6E08               	movwf	(___fleq@ff2+3)^0,c
  8463   003032                     l3441:
  8464   003032  5005               	movf	___fleq@ff2^0,w,c
  8465   003034  1801               	xorwf	___fleq@ff1^0,w,c
  8466   003036  E10F               	bnz	u3280
  8467   003038  5006               	movf	(___fleq@ff2+1)^0,w,c
  8468   00303A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8469   00303C  E10C               	bnz	u3280
  8470   00303E  5007               	movf	(___fleq@ff2+2)^0,w,c
  8471   003040  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8472   003042  E109               	bnz	u3280
  8473   003044  5008               	movf	(___fleq@ff2+3)^0,w,c
  8474   003046  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8475   003048  B4D8               	btfsc	status,2,c
  8476   00304A  EF29  F018         	goto	u3281
  8477   00304E  EF2B  F018         	goto	u3280
  8478   003052                     u3281:
  8479   003052  EF2E  F018         	goto	l3445
  8480   003056                     u3280:
  8481   003056  90D8               	bcf	status,0,c
  8482   003058  EF2F  F018         	goto	l508
  8483   00305C                     l3445:
  8484   00305C  80D8               	bsf	status,0,c
  8485   00305E                     l508:
  8486   00305E  0012               	return		;funcret
  8487   003060                     __end_of___fleq:
  8488                           	callstack 0
  8489                           
  8490 ;; *************** function ___fldiv *****************
  8491 ;; Defined at:
  8492 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;  b               4   14[COMRAM] unsigned char 
  8495 ;;  a               4   18[COMRAM] unsigned char 
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;  grs             4   33[COMRAM] unsigned long 
  8498 ;;  rem             4   26[COMRAM] unsigned long 
  8499 ;;  new_exp         2   31[COMRAM] short 
  8500 ;;  aexp            1   38[COMRAM] unsigned char 
  8501 ;;  bexp            1   37[COMRAM] unsigned char 
  8502 ;;  sign            1   30[COMRAM] unsigned char 
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  4   14[COMRAM] unsigned char 
  8505 ;; Registers used:
  8506 ;;		wreg, status,2, status,0
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8512 ;;      Params:         8       0       0       0       0       0       0
  8513 ;;      Locals:        13       0       0       0       0       0       0
  8514 ;;      Temps:          4       0       0       0       0       0       0
  8515 ;;      Totals:        25       0       0       0       0       0       0
  8516 ;;Total ram usage:       25 bytes
  8517 ;; Hardware stack levels used: 1
  8518 ;; Hardware stack levels required when called: 1
  8519 ;; This function calls:
  8520 ;;		Nothing
  8521 ;; This function is called by:
  8522 ;;		_fGetVoltage
  8523 ;;		_fGetPercentDuty
  8524 ;;		_iPWMSetDuty
  8525 ;;		_efgtoa
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text44
  8530   00195C                     __ptext44:
  8531                           	callstack 0
  8532   00195C                     ___fldiv:
  8533                           	callstack 23
  8534   00195C  5012               	movf	(___fldiv@b+3)^0,w,c
  8535   00195E  0B80               	andlw	128
  8536   001960  6E1F               	movwf	___fldiv@sign^0,c
  8537   001962  5012               	movf	(___fldiv@b+3)^0,w,c
  8538   001964  2412               	addwf	(___fldiv@b+3)^0,w,c
  8539   001966  6E26               	movwf	___fldiv@bexp^0,c
  8540   001968  AE11               	btfss	(___fldiv@b+2)^0,7,c
  8541   00196A  EFB9  F00C         	goto	u2841
  8542   00196E  EFBB  F00C         	goto	u2840
  8543   001972                     u2841:
  8544   001972  EFBC  F00C         	goto	l3165
  8545   001976                     u2840:
  8546   001976  8026               	bsf	___fldiv@bexp^0,0,c
  8547   001978                     l3165:
  8548   001978  5026               	movf	___fldiv@bexp^0,w,c
  8549   00197A  B4D8               	btfsc	status,2,c
  8550   00197C  EFC2  F00C         	goto	u2851
  8551   001980  EFC4  F00C         	goto	u2850
  8552   001984                     u2851:
  8553   001984  EFD9  F00C         	goto	l3175
  8554   001988                     u2850:
  8555   001988  2826               	incf	___fldiv@bexp^0,w,c
  8556   00198A  A4D8               	btfss	status,2,c
  8557   00198C  EFCA  F00C         	goto	u2861
  8558   001990  EFCC  F00C         	goto	u2860
  8559   001994                     u2861:
  8560   001994  EFD4  F00C         	goto	l3171
  8561   001998                     u2860:
  8562   001998  0E00               	movlw	0
  8563   00199A  6E0F               	movwf	___fldiv@b^0,c
  8564   00199C  0E00               	movlw	0
  8565   00199E  6E10               	movwf	(___fldiv@b+1)^0,c
  8566   0019A0  0E00               	movlw	0
  8567   0019A2  6E11               	movwf	(___fldiv@b+2)^0,c
  8568   0019A4  0E00               	movlw	0
  8569   0019A6  6E12               	movwf	(___fldiv@b+3)^0,c
  8570   0019A8                     l3171:
  8571   0019A8  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8572   0019AA  0E00               	movlw	0
  8573   0019AC  6E12               	movwf	(___fldiv@b+3)^0,c
  8574   0019AE  EFE1  F00C         	goto	l3177
  8575   0019B2                     l3175:
  8576   0019B2  0E00               	movlw	0
  8577   0019B4  6E0F               	movwf	___fldiv@b^0,c
  8578   0019B6  0E00               	movlw	0
  8579   0019B8  6E10               	movwf	(___fldiv@b+1)^0,c
  8580   0019BA  0E00               	movlw	0
  8581   0019BC  6E11               	movwf	(___fldiv@b+2)^0,c
  8582   0019BE  0E00               	movlw	0
  8583   0019C0  6E12               	movwf	(___fldiv@b+3)^0,c
  8584   0019C2                     l3177:
  8585   0019C2  5016               	movf	(___fldiv@a+3)^0,w,c
  8586   0019C4  0B80               	andlw	128
  8587   0019C6  1A1F               	xorwf	___fldiv@sign^0,f,c
  8588   0019C8  5016               	movf	(___fldiv@a+3)^0,w,c
  8589   0019CA  2416               	addwf	(___fldiv@a+3)^0,w,c
  8590   0019CC  6E27               	movwf	___fldiv@aexp^0,c
  8591   0019CE  AE15               	btfss	(___fldiv@a+2)^0,7,c
  8592   0019D0  EFEC  F00C         	goto	u2871
  8593   0019D4  EFEE  F00C         	goto	u2870
  8594   0019D8                     u2871:
  8595   0019D8  EFEF  F00C         	goto	l3185
  8596   0019DC                     u2870:
  8597   0019DC  8027               	bsf	___fldiv@aexp^0,0,c
  8598   0019DE                     l3185:
  8599   0019DE  5027               	movf	___fldiv@aexp^0,w,c
  8600   0019E0  B4D8               	btfsc	status,2,c
  8601   0019E2  EFF5  F00C         	goto	u2881
  8602   0019E6  EFF7  F00C         	goto	u2880
  8603   0019EA                     u2881:
  8604   0019EA  EF0C  F00D         	goto	l3195
  8605   0019EE                     u2880:
  8606   0019EE  2827               	incf	___fldiv@aexp^0,w,c
  8607   0019F0  A4D8               	btfss	status,2,c
  8608   0019F2  EFFD  F00C         	goto	u2891
  8609   0019F6  EFFF  F00C         	goto	u2890
  8610   0019FA                     u2891:
  8611   0019FA  EF07  F00D         	goto	l3191
  8612   0019FE                     u2890:
  8613   0019FE  0E00               	movlw	0
  8614   001A00  6E13               	movwf	___fldiv@a^0,c
  8615   001A02  0E00               	movlw	0
  8616   001A04  6E14               	movwf	(___fldiv@a+1)^0,c
  8617   001A06  0E00               	movlw	0
  8618   001A08  6E15               	movwf	(___fldiv@a+2)^0,c
  8619   001A0A  0E00               	movlw	0
  8620   001A0C  6E16               	movwf	(___fldiv@a+3)^0,c
  8621   001A0E                     l3191:
  8622   001A0E  8E15               	bsf	(___fldiv@a+2)^0,7,c
  8623   001A10  0E00               	movlw	0
  8624   001A12  6E16               	movwf	(___fldiv@a+3)^0,c
  8625   001A14  EF14  F00D         	goto	l3197
  8626   001A18                     l3195:
  8627   001A18  0E00               	movlw	0
  8628   001A1A  6E13               	movwf	___fldiv@a^0,c
  8629   001A1C  0E00               	movlw	0
  8630   001A1E  6E14               	movwf	(___fldiv@a+1)^0,c
  8631   001A20  0E00               	movlw	0
  8632   001A22  6E15               	movwf	(___fldiv@a+2)^0,c
  8633   001A24  0E00               	movlw	0
  8634   001A26  6E16               	movwf	(___fldiv@a+3)^0,c
  8635   001A28                     l3197:
  8636   001A28  5013               	movf	___fldiv@a^0,w,c
  8637   001A2A  1014               	iorwf	(___fldiv@a+1)^0,w,c
  8638   001A2C  1015               	iorwf	(___fldiv@a+2)^0,w,c
  8639   001A2E  1016               	iorwf	(___fldiv@a+3)^0,w,c
  8640   001A30  A4D8               	btfss	status,2,c
  8641   001A32  EF1D  F00D         	goto	u2901
  8642   001A36  EF1F  F00D         	goto	u2900
  8643   001A3A                     u2901:
  8644   001A3A  EF37  F00D         	goto	l3209
  8645   001A3E                     u2900:
  8646   001A3E  0E00               	movlw	0
  8647   001A40  6E0F               	movwf	___fldiv@b^0,c
  8648   001A42  0E00               	movlw	0
  8649   001A44  6E10               	movwf	(___fldiv@b+1)^0,c
  8650   001A46  0E00               	movlw	0
  8651   001A48  6E11               	movwf	(___fldiv@b+2)^0,c
  8652   001A4A  0E00               	movlw	0
  8653   001A4C  6E12               	movwf	(___fldiv@b+3)^0,c
  8654   001A4E  0E80               	movlw	128
  8655   001A50  1211               	iorwf	(___fldiv@b+2)^0,f,c
  8656   001A52  0E7F               	movlw	127
  8657   001A54  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8658   001A56                     l3203:
  8659   001A56  501F               	movf	___fldiv@sign^0,w,c
  8660   001A58  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8661   001A5A  C00F  F00F         	movff	___fldiv@b,?___fldiv
  8662   001A5E  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  8663   001A62  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  8664   001A66  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  8665   001A6A  EF7A  F00E         	goto	l831
  8666   001A6E                     l3209:
  8667   001A6E  5026               	movf	___fldiv@bexp^0,w,c
  8668   001A70  A4D8               	btfss	status,2,c
  8669   001A72  EF3D  F00D         	goto	u2911
  8670   001A76  EF3F  F00D         	goto	u2910
  8671   001A7A                     u2911:
  8672   001A7A  EF49  F00D         	goto	l3217
  8673   001A7E                     u2910:
  8674   001A7E  0E00               	movlw	0
  8675   001A80  6E0F               	movwf	?___fldiv^0,c
  8676   001A82  0E00               	movlw	0
  8677   001A84  6E10               	movwf	(?___fldiv+1)^0,c
  8678   001A86  0E00               	movlw	0
  8679   001A88  6E11               	movwf	(?___fldiv+2)^0,c
  8680   001A8A  0E00               	movlw	0
  8681   001A8C  6E12               	movwf	(?___fldiv+3)^0,c
  8682   001A8E  EF7A  F00E         	goto	l831
  8683   001A92                     l3217:
  8684   001A92  5027               	movf	___fldiv@aexp^0,w,c
  8685   001A94  C026  F017         	movff	___fldiv@bexp,??___fldiv
  8686   001A98  6A18               	clrf	(??___fldiv+1)^0,c
  8687   001A9A  5E17               	subwf	??___fldiv^0,f,c
  8688   001A9C  0E00               	movlw	0
  8689   001A9E  5A18               	subwfb	(??___fldiv+1)^0,f,c
  8690   001AA0  0E7F               	movlw	127
  8691   001AA2  2417               	addwf	??___fldiv^0,w,c
  8692   001AA4  6E20               	movwf	___fldiv@new_exp^0,c
  8693   001AA6  0E00               	movlw	0
  8694   001AA8  2018               	addwfc	(??___fldiv+1)^0,w,c
  8695   001AAA  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8696   001AAC  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  8697   001AB0  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  8698   001AB4  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  8699   001AB8  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  8700   001ABC  0E00               	movlw	0
  8701   001ABE  6E0F               	movwf	___fldiv@b^0,c
  8702   001AC0  0E00               	movlw	0
  8703   001AC2  6E10               	movwf	(___fldiv@b+1)^0,c
  8704   001AC4  0E00               	movlw	0
  8705   001AC6  6E11               	movwf	(___fldiv@b+2)^0,c
  8706   001AC8  0E00               	movlw	0
  8707   001ACA  6E12               	movwf	(___fldiv@b+3)^0,c
  8708   001ACC  0E00               	movlw	0
  8709   001ACE  6E22               	movwf	___fldiv@grs^0,c
  8710   001AD0  0E00               	movlw	0
  8711   001AD2  6E23               	movwf	(___fldiv@grs+1)^0,c
  8712   001AD4  0E00               	movlw	0
  8713   001AD6  6E24               	movwf	(___fldiv@grs+2)^0,c
  8714   001AD8  0E00               	movlw	0
  8715   001ADA  6E25               	movwf	(___fldiv@grs+3)^0,c
  8716   001ADC  0E00               	movlw	0
  8717   001ADE  6E27               	movwf	___fldiv@aexp^0,c
  8718   001AE0  EFAA  F00D         	goto	l833
  8719   001AE4                     l3227:
  8720   001AE4  5027               	movf	___fldiv@aexp^0,w,c
  8721   001AE6  B4D8               	btfsc	status,2,c
  8722   001AE8  EF78  F00D         	goto	u2921
  8723   001AEC  EF7A  F00D         	goto	u2920
  8724   001AF0                     u2921:
  8725   001AF0  EF91  F00D         	goto	l3235
  8726   001AF4                     u2920:
  8727   001AF4  90D8               	bcf	status,0,c
  8728   001AF6  361B               	rlcf	___fldiv@rem^0,f,c
  8729   001AF8  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  8730   001AFA  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  8731   001AFC  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  8732   001AFE  90D8               	bcf	status,0,c
  8733   001B00  360F               	rlcf	___fldiv@b^0,f,c
  8734   001B02  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8735   001B04  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8736   001B06  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8737   001B08  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8738   001B0A  EF89  F00D         	goto	u2931
  8739   001B0E  EF8B  F00D         	goto	u2930
  8740   001B12                     u2931:
  8741   001B12  EF8C  F00D         	goto	l836
  8742   001B16                     u2930:
  8743   001B16  800F               	bsf	___fldiv@b^0,0,c
  8744   001B18                     l836:
  8745   001B18  90D8               	bcf	status,0,c
  8746   001B1A  3622               	rlcf	___fldiv@grs^0,f,c
  8747   001B1C  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8748   001B1E  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8749   001B20  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8750   001B22                     l3235:
  8751   001B22  5013               	movf	___fldiv@a^0,w,c
  8752   001B24  5C1B               	subwf	___fldiv@rem^0,w,c
  8753   001B26  5014               	movf	(___fldiv@a+1)^0,w,c
  8754   001B28  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  8755   001B2A  5015               	movf	(___fldiv@a+2)^0,w,c
  8756   001B2C  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  8757   001B2E  5016               	movf	(___fldiv@a+3)^0,w,c
  8758   001B30  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  8759   001B32  A0D8               	btfss	status,0,c
  8760   001B34  EF9E  F00D         	goto	u2941
  8761   001B38  EFA0  F00D         	goto	u2940
  8762   001B3C                     u2941:
  8763   001B3C  EFA9  F00D         	goto	l3241
  8764   001B40                     u2940:
  8765   001B40  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  8766   001B42  5013               	movf	___fldiv@a^0,w,c
  8767   001B44  5E1B               	subwf	___fldiv@rem^0,f,c
  8768   001B46  5014               	movf	(___fldiv@a+1)^0,w,c
  8769   001B48  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  8770   001B4A  5015               	movf	(___fldiv@a+2)^0,w,c
  8771   001B4C  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  8772   001B4E  5016               	movf	(___fldiv@a+3)^0,w,c
  8773   001B50  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  8774   001B52                     l3241:
  8775   001B52  2A27               	incf	___fldiv@aexp^0,f,c
  8776   001B54                     l833:
  8777   001B54  0E19               	movlw	25
  8778   001B56  6427               	cpfsgt	___fldiv@aexp^0,c
  8779   001B58  EFB0  F00D         	goto	u2951
  8780   001B5C  EFB2  F00D         	goto	u2950
  8781   001B60                     u2951:
  8782   001B60  EF72  F00D         	goto	l3227
  8783   001B64                     u2950:
  8784   001B64  501B               	movf	___fldiv@rem^0,w,c
  8785   001B66  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  8786   001B68  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  8787   001B6A  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  8788   001B6C  B4D8               	btfsc	status,2,c
  8789   001B6E  EFBB  F00D         	goto	u2961
  8790   001B72  EFBD  F00D         	goto	u2960
  8791   001B76                     u2961:
  8792   001B76  EFD5  F00D         	goto	l3253
  8793   001B7A                     u2960:
  8794   001B7A  8022               	bsf	___fldiv@grs^0,0,c
  8795   001B7C  EFD5  F00D         	goto	l3253
  8796   001B80                     l3247:
  8797   001B80  90D8               	bcf	status,0,c
  8798   001B82  360F               	rlcf	___fldiv@b^0,f,c
  8799   001B84  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8800   001B86  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8801   001B88  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8802   001B8A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8803   001B8C  EFCA  F00D         	goto	u2971
  8804   001B90  EFCC  F00D         	goto	u2970
  8805   001B94                     u2971:
  8806   001B94  EFCD  F00D         	goto	l842
  8807   001B98                     u2970:
  8808   001B98  800F               	bsf	___fldiv@b^0,0,c
  8809   001B9A                     l842:
  8810   001B9A  90D8               	bcf	status,0,c
  8811   001B9C  3622               	rlcf	___fldiv@grs^0,f,c
  8812   001B9E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8813   001BA0  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8814   001BA2  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8815   001BA4  0620               	decf	___fldiv@new_exp^0,f,c
  8816   001BA6  A0D8               	btfss	status,0,c
  8817   001BA8  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  8818   001BAA                     l3253:
  8819   001BAA  AE11               	btfss	(___fldiv@b+2)^0,7,c
  8820   001BAC  EFDA  F00D         	goto	u2981
  8821   001BB0  EFDC  F00D         	goto	u2980
  8822   001BB4                     u2981:
  8823   001BB4  EFC0  F00D         	goto	l3247
  8824   001BB8                     u2980:
  8825   001BB8  0E00               	movlw	0
  8826   001BBA  6E27               	movwf	___fldiv@aexp^0,c
  8827   001BBC  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8828   001BBE  EFE3  F00D         	goto	u2991
  8829   001BC2  EFE5  F00D         	goto	u2990
  8830   001BC6                     u2991:
  8831   001BC6  EF09  F00E         	goto	l844
  8832   001BCA                     u2990:
  8833   001BCA  0EFF               	movlw	255
  8834   001BCC  1422               	andwf	___fldiv@grs^0,w,c
  8835   001BCE  6E17               	movwf	??___fldiv^0,c
  8836   001BD0  0EFF               	movlw	255
  8837   001BD2  1423               	andwf	(___fldiv@grs+1)^0,w,c
  8838   001BD4  6E18               	movwf	(??___fldiv+1)^0,c
  8839   001BD6  0EFF               	movlw	255
  8840   001BD8  1424               	andwf	(___fldiv@grs+2)^0,w,c
  8841   001BDA  6E19               	movwf	(??___fldiv+2)^0,c
  8842   001BDC  0E7F               	movlw	127
  8843   001BDE  1425               	andwf	(___fldiv@grs+3)^0,w,c
  8844   001BE0  6E1A               	movwf	(??___fldiv+3)^0,c
  8845   001BE2  5017               	movf	??___fldiv^0,w,c
  8846   001BE4  1018               	iorwf	(??___fldiv+1)^0,w,c
  8847   001BE6  1019               	iorwf	(??___fldiv+2)^0,w,c
  8848   001BE8  101A               	iorwf	(??___fldiv+3)^0,w,c
  8849   001BEA  B4D8               	btfsc	status,2,c
  8850   001BEC  EFFA  F00D         	goto	u3001
  8851   001BF0  EFFC  F00D         	goto	u3000
  8852   001BF4                     u3001:
  8853   001BF4  EF00  F00E         	goto	l845
  8854   001BF8                     u3000:
  8855   001BF8                     l3261:
  8856   001BF8  0E01               	movlw	1
  8857   001BFA  6E27               	movwf	___fldiv@aexp^0,c
  8858   001BFC  EF09  F00E         	goto	l844
  8859   001C00                     l845:
  8860   001C00  A00F               	btfss	___fldiv@b^0,0,c
  8861   001C02  EF05  F00E         	goto	u3011
  8862   001C06  EF07  F00E         	goto	u3010
  8863   001C0A                     u3011:
  8864   001C0A  EF09  F00E         	goto	l844
  8865   001C0E                     u3010:
  8866   001C0E  EFFC  F00D         	goto	l3261
  8867   001C12                     l844:
  8868   001C12  5027               	movf	___fldiv@aexp^0,w,c
  8869   001C14  B4D8               	btfsc	status,2,c
  8870   001C16  EF0F  F00E         	goto	u3021
  8871   001C1A  EF11  F00E         	goto	u3020
  8872   001C1E                     u3021:
  8873   001C1E  EF35  F00E         	goto	l3273
  8874   001C22                     u3020:
  8875   001C22  0E01               	movlw	1
  8876   001C24  260F               	addwf	___fldiv@b^0,f,c
  8877   001C26  0E00               	movlw	0
  8878   001C28  2210               	addwfc	(___fldiv@b+1)^0,f,c
  8879   001C2A  2211               	addwfc	(___fldiv@b+2)^0,f,c
  8880   001C2C  2212               	addwfc	(___fldiv@b+3)^0,f,c
  8881   001C2E  A012               	btfss	(___fldiv@b+3)^0,0,c
  8882   001C30  EF1C  F00E         	goto	u3031
  8883   001C34  EF1E  F00E         	goto	u3030
  8884   001C38                     u3031:
  8885   001C38  EF35  F00E         	goto	l3273
  8886   001C3C                     u3030:
  8887   001C3C  C00F  F017         	movff	___fldiv@b,??___fldiv
  8888   001C40  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  8889   001C44  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  8890   001C48  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  8891   001C4C  341A               	rlcf	(??___fldiv+3)^0,w,c
  8892   001C4E  321A               	rrcf	(??___fldiv+3)^0,f,c
  8893   001C50  3219               	rrcf	(??___fldiv+2)^0,f,c
  8894   001C52  3218               	rrcf	(??___fldiv+1)^0,f,c
  8895   001C54  3217               	rrcf	??___fldiv^0,f,c
  8896   001C56  C017  F00F         	movff	??___fldiv,___fldiv@b
  8897   001C5A  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  8898   001C5E  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  8899   001C62  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  8900   001C66  4A20               	infsnz	___fldiv@new_exp^0,f,c
  8901   001C68  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  8902   001C6A                     l3273:
  8903   001C6A  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8904   001C6C  EF40  F00E         	goto	u3041
  8905   001C70  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8906   001C72  E108               	bnz	u3040
  8907   001C74  2820               	incf	___fldiv@new_exp^0,w,c
  8908   001C76  A0D8               	btfss	status,0,c
  8909   001C78  EF40  F00E         	goto	u3041
  8910   001C7C  EF42  F00E         	goto	u3040
  8911   001C80                     u3041:
  8912   001C80  EF4D  F00E         	goto	l3277
  8913   001C84                     u3040:
  8914   001C84  0E00               	movlw	0
  8915   001C86  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8916   001C88  6820               	setf	___fldiv@new_exp^0,c
  8917   001C8A  0E00               	movlw	0
  8918   001C8C  6E0F               	movwf	___fldiv@b^0,c
  8919   001C8E  0E00               	movlw	0
  8920   001C90  6E10               	movwf	(___fldiv@b+1)^0,c
  8921   001C92  0E00               	movlw	0
  8922   001C94  6E11               	movwf	(___fldiv@b+2)^0,c
  8923   001C96  0E00               	movlw	0
  8924   001C98  6E12               	movwf	(___fldiv@b+3)^0,c
  8925   001C9A                     l3277:
  8926   001C9A  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8927   001C9C  EF5A  F00E         	goto	u3050
  8928   001CA0  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8929   001CA2  E106               	bnz	u3051
  8930   001CA4  0420               	decf	___fldiv@new_exp^0,w,c
  8931   001CA6  B0D8               	btfsc	status,0,c
  8932   001CA8  EF58  F00E         	goto	u3051
  8933   001CAC  EF5A  F00E         	goto	u3050
  8934   001CB0                     u3051:
  8935   001CB0  EF68  F00E         	goto	l3281
  8936   001CB4                     u3050:
  8937   001CB4  0E00               	movlw	0
  8938   001CB6  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8939   001CB8  0E00               	movlw	0
  8940   001CBA  6E20               	movwf	___fldiv@new_exp^0,c
  8941   001CBC  0E00               	movlw	0
  8942   001CBE  6E0F               	movwf	___fldiv@b^0,c
  8943   001CC0  0E00               	movlw	0
  8944   001CC2  6E10               	movwf	(___fldiv@b+1)^0,c
  8945   001CC4  0E00               	movlw	0
  8946   001CC6  6E11               	movwf	(___fldiv@b+2)^0,c
  8947   001CC8  0E00               	movlw	0
  8948   001CCA  6E12               	movwf	(___fldiv@b+3)^0,c
  8949   001CCC  0E00               	movlw	0
  8950   001CCE  6E1F               	movwf	___fldiv@sign^0,c
  8951   001CD0                     l3281:
  8952   001CD0  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  8953   001CD4  A026               	btfss	___fldiv@bexp^0,0,c
  8954   001CD6  EF6F  F00E         	goto	u3061
  8955   001CDA  EF71  F00E         	goto	u3060
  8956   001CDE                     u3061:
  8957   001CDE  EF74  F00E         	goto	l3287
  8958   001CE2                     u3060:
  8959   001CE2  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8960   001CE4  EF75  F00E         	goto	l3289
  8961   001CE8                     l3287:
  8962   001CE8  9E11               	bcf	(___fldiv@b+2)^0,7,c
  8963   001CEA                     l3289:
  8964   001CEA  90D8               	bcf	status,0,c
  8965   001CEC  3026               	rrcf	___fldiv@bexp^0,w,c
  8966   001CEE  6E12               	movwf	(___fldiv@b+3)^0,c
  8967   001CF0  EF2B  F00D         	goto	l3203
  8968   001CF4                     l831:
  8969   001CF4  0012               	return		;funcret
  8970   001CF6                     __end_of___fldiv:
  8971                           	callstack 0
  8972                           
  8973 ;; *************** function _atoi *****************
  8974 ;; Defined at:
  8975 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  s               2    6[COMRAM] PTR const unsigned char 
  8978 ;;		 -> STR_6(15), STR_5(14), 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;  n               2   13[COMRAM] int 
  8981 ;;  neg             2   11[COMRAM] int 
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  2    6[COMRAM] int 
  8984 ;; Registers used:
  8985 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8991 ;;      Params:         2       0       0       0       0       0       0
  8992 ;;      Locals:         4       0       0       0       0       0       0
  8993 ;;      Temps:          3       0       0       0       0       0       0
  8994 ;;      Totals:         9       0       0       0       0       0       0
  8995 ;;Total ram usage:        9 bytes
  8996 ;; Hardware stack levels used: 1
  8997 ;; Hardware stack levels required when called: 2
  8998 ;; This function calls:
  8999 ;;		___wmul
  9000 ;;		_isdigit
  9001 ;;		_isspace
  9002 ;; This function is called by:
  9003 ;;		_vfpfcnvrt
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           	psect	text45
  9008   00270C                     __ptext45:
  9009                           	callstack 0
  9010   00270C                     _atoi:
  9011                           	callstack 23
  9012   00270C  0E00               	movlw	0
  9013   00270E  6E0F               	movwf	(atoi@n+1)^0,c
  9014   002710  0E00               	movlw	0
  9015   002712  6E0E               	movwf	atoi@n^0,c
  9016   002714  0E00               	movlw	0
  9017   002716  6E0D               	movwf	(atoi@neg+1)^0,c
  9018   002718  0E00               	movlw	0
  9019   00271A  6E0C               	movwf	atoi@neg^0,c
  9020   00271C  EF92  F013         	goto	l3855
  9021   002720                     l3851:
  9022   002720  4A07               	infsnz	atoi@s^0,f,c
  9023   002722  2A08               	incf	(atoi@s+1)^0,f,c
  9024   002724                     l3855:
  9025   002724  C007  FFF6         	movff	atoi@s,tblptrl
  9026   002728  C008  FFF7         	movff	atoi@s+1,tblptrh
  9027   00272C                     	if	0	;tblptru may be non-zero
  9028   00272C                     	endif
  9029   00272C                     	if	0	;tblptru may be non-zero
  9030   00272C                     	endif
  9031   00272C  0008               	tblrd		*
  9032   00272E  50F5               	movf	tablat,w,c
  9033   002730  0A20               	xorlw	32
  9034   002732  B4D8               	btfsc	status,2,c
  9035   002734  EF9E  F013         	goto	u4001
  9036   002738  EFA0  F013         	goto	u4000
  9037   00273C                     u4001:
  9038   00273C  EF90  F013         	goto	l3851
  9039   002740                     u4000:
  9040   002740  C007  FFF6         	movff	atoi@s,tblptrl
  9041   002744  C008  FFF7         	movff	atoi@s+1,tblptrh
  9042   002748                     	if	0	;tblptru may be non-zero
  9043   002748                     	endif
  9044   002748                     	if	0	;tblptru may be non-zero
  9045   002748                     	endif
  9046   002748  0008               	tblrd		*
  9047   00274A  CFF5 F009          	movff	tablat,??_atoi
  9048   00274E  0EF7               	movlw	247
  9049   002750  2409               	addwf	??_atoi^0,w,c
  9050   002752  6E0A               	movwf	(??_atoi+1)^0,c
  9051   002754  6A0B               	clrf	(??_atoi+2)^0,c
  9052   002756  0EFF               	movlw	255
  9053   002758  220B               	addwfc	(??_atoi+2)^0,f,c
  9054   00275A  500B               	movf	(??_atoi+2)^0,w,c
  9055   00275C  E109               	bnz	u4010
  9056   00275E  0E05               	movlw	5
  9057   002760  5C0A               	subwf	(??_atoi+1)^0,w,c
  9058   002762  A0D8               	btfss	status,0,c
  9059   002764  EFB6  F013         	goto	u4011
  9060   002768  EFB8  F013         	goto	u4010
  9061   00276C                     u4011:
  9062   00276C  EF90  F013         	goto	l3851
  9063   002770                     u4010:
  9064   002770  EFC2  F013         	goto	l3863
  9065   002774                     l3859:
  9066   002774  0E00               	movlw	0
  9067   002776  6E0D               	movwf	(atoi@neg+1)^0,c
  9068   002778  0E01               	movlw	1
  9069   00277A  6E0C               	movwf	atoi@neg^0,c
  9070   00277C                     l3861:
  9071   00277C  4A07               	infsnz	atoi@s^0,f,c
  9072   00277E  2A08               	incf	(atoi@s+1)^0,f,c
  9073   002780  EFF7  F013         	goto	l3871
  9074   002784                     l3863:
  9075   002784  C007  FFF6         	movff	atoi@s,tblptrl
  9076   002788  C008  FFF7         	movff	atoi@s+1,tblptrh
  9077   00278C                     	if	0	;tblptru may be non-zero
  9078   00278C                     	endif
  9079   00278C                     	if	0	;tblptru may be non-zero
  9080   00278C                     	endif
  9081   00278C  0008               	tblrd		*
  9082   00278E  50F5               	movf	tablat,w,c
  9083   002790  6E09               	movwf	??_atoi^0,c
  9084   002792  6A0A               	clrf	(??_atoi+1)^0,c
  9085                           
  9086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9087                           ; Switch size 1, requested type "simple"
  9088                           ; Number of cases is 1, Range of values is 0 to 0
  9089                           ; switch strategies available:
  9090                           ; Name         Instructions Cycles
  9091                           ; simple_byte            4     3 (average)
  9092                           ;	Chosen strategy is simple_byte
  9093   002794  500A               	movf	(??_atoi+1)^0,w,c
  9094   002796  0A00               	xorlw	0	; case 0
  9095   002798  B4D8               	btfsc	status,2,c
  9096   00279A  EFD1  F013         	goto	l4731
  9097   00279E  EFF7  F013         	goto	l3871
  9098   0027A2                     l4731:
  9099                           
  9100                           ; Switch size 1, requested type "simple"
  9101                           ; Number of cases is 2, Range of values is 43 to 45
  9102                           ; switch strategies available:
  9103                           ; Name         Instructions Cycles
  9104                           ; simple_byte            7     4 (average)
  9105                           ;	Chosen strategy is simple_byte
  9106   0027A2  5009               	movf	??_atoi^0,w,c
  9107   0027A4  0A2B               	xorlw	43	; case 43
  9108   0027A6  B4D8               	btfsc	status,2,c
  9109   0027A8  EFBE  F013         	goto	l3861
  9110   0027AC  0A06               	xorlw	6	; case 45
  9111   0027AE  B4D8               	btfsc	status,2,c
  9112   0027B0  EFBA  F013         	goto	l3859
  9113   0027B4  EFF7  F013         	goto	l3871
  9114   0027B8                     l3865:
  9115   0027B8  C00E  F001         	movff	atoi@n,___wmul@multiplier
  9116   0027BC  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9117   0027C0  0E00               	movlw	0
  9118   0027C2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9119   0027C4  0E0A               	movlw	10
  9120   0027C6  6E03               	movwf	___wmul@multiplicand^0,c
  9121   0027C8  EC9A  F01D         	call	___wmul	;wreg free
  9122   0027CC  C007  FFF6         	movff	atoi@s,tblptrl
  9123   0027D0  C008  FFF7         	movff	atoi@s+1,tblptrh
  9124   0027D4                     	if	0	;tblptru may be non-zero
  9125   0027D4                     	endif
  9126   0027D4                     	if	0	;tblptru may be non-zero
  9127   0027D4                     	endif
  9128   0027D4  0008               	tblrd		*
  9129   0027D6  50F5               	movf	tablat,w,c
  9130   0027D8  5E01               	subwf	?___wmul^0,f,c
  9131   0027DA  0E00               	movlw	0
  9132   0027DC  5A02               	subwfb	(?___wmul+1)^0,f,c
  9133   0027DE  0E30               	movlw	48
  9134   0027E0  2401               	addwf	?___wmul^0,w,c
  9135   0027E2  6E0E               	movwf	atoi@n^0,c
  9136   0027E4  0E00               	movlw	0
  9137   0027E6  2002               	addwfc	(?___wmul+1)^0,w,c
  9138   0027E8  6E0F               	movwf	(atoi@n+1)^0,c
  9139   0027EA  EFBE  F013         	goto	l3861
  9140   0027EE                     l3871:
  9141   0027EE  C007  FFF6         	movff	atoi@s,tblptrl
  9142   0027F2  C008  FFF7         	movff	atoi@s+1,tblptrh
  9143   0027F6                     	if	0	;tblptru may be non-zero
  9144   0027F6                     	endif
  9145   0027F6                     	if	0	;tblptru may be non-zero
  9146   0027F6                     	endif
  9147   0027F6  0008               	tblrd		*
  9148   0027F8  CFF5 F009          	movff	tablat,??_atoi
  9149   0027FC  0ED0               	movlw	208
  9150   0027FE  2409               	addwf	??_atoi^0,w,c
  9151   002800  6E0A               	movwf	(??_atoi+1)^0,c
  9152   002802  6A0B               	clrf	(??_atoi+2)^0,c
  9153   002804  0EFF               	movlw	255
  9154   002806  220B               	addwfc	(??_atoi+2)^0,f,c
  9155   002808  500B               	movf	(??_atoi+2)^0,w,c
  9156   00280A  E109               	bnz	u4020
  9157   00280C  0E0A               	movlw	10
  9158   00280E  5C0A               	subwf	(??_atoi+1)^0,w,c
  9159   002810  A0D8               	btfss	status,0,c
  9160   002812  EF0D  F014         	goto	u4021
  9161   002816  EF0F  F014         	goto	u4020
  9162   00281A                     u4021:
  9163   00281A  EFDC  F013         	goto	l3865
  9164   00281E                     u4020:
  9165   00281E  500C               	movf	atoi@neg^0,w,c
  9166   002820  100D               	iorwf	(atoi@neg+1)^0,w,c
  9167   002822  A4D8               	btfss	status,2,c
  9168   002824  EF16  F014         	goto	u4031
  9169   002828  EF18  F014         	goto	u4030
  9170   00282C                     u4031:
  9171   00282C  EF26  F014         	goto	l1109
  9172   002830                     u4030:
  9173   002830  C00E  F009         	movff	atoi@n,??_atoi
  9174   002834  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  9175   002838  1E09               	comf	??_atoi^0,f,c
  9176   00283A  1E0A               	comf	(??_atoi+1)^0,f,c
  9177   00283C  4A09               	infsnz	??_atoi^0,f,c
  9178   00283E  2A0A               	incf	(??_atoi+1)^0,f,c
  9179   002840  C009  F007         	movff	??_atoi,?_atoi
  9180   002844  C00A  F008         	movff	??_atoi+1,?_atoi+1
  9181   002848  EF2A  F014         	goto	l1112
  9182   00284C                     l1109:
  9183   00284C  C00E  F007         	movff	atoi@n,?_atoi
  9184   002850  C00F  F008         	movff	atoi@n+1,?_atoi+1
  9185   002854                     l1112:
  9186   002854  0012               	return		;funcret
  9187   002856                     __end_of_atoi:
  9188                           	callstack 0
  9189                           
  9190 ;; *************** function _isspace *****************
  9191 ;; Defined at:
  9192 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;  c               2    0[COMRAM] int 
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;		None
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  2    0[COMRAM] int 
  9199 ;; Registers used:
  9200 ;;		wreg, status,2, status,0
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9206 ;;      Params:         2       0       0       0       0       0       0
  9207 ;;      Locals:         1       0       0       0       0       0       0
  9208 ;;      Temps:          2       0       0       0       0       0       0
  9209 ;;      Totals:         5       0       0       0       0       0       0
  9210 ;;Total ram usage:        5 bytes
  9211 ;; Hardware stack levels used: 1
  9212 ;; Hardware stack levels required when called: 1
  9213 ;; This function calls:
  9214 ;;		Nothing
  9215 ;; This function is called by:
  9216 ;;		_atoi
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	text46
  9221   00395A                     __ptext46:
  9222                           	callstack 0
  9223   00395A                     _isspace:
  9224                           	callstack 23
  9225   00395A  0E01               	movlw	1
  9226   00395C  6E05               	movwf	_isspace$1235^0,c
  9227   00395E  0E20               	movlw	32
  9228   003960  1801               	xorwf	isspace@c^0,w,c
  9229   003962  1002               	iorwf	(isspace@c+1)^0,w,c
  9230   003964  B4D8               	btfsc	status,2,c
  9231   003966  EFB7  F01C         	goto	u3661
  9232   00396A  EFB9  F01C         	goto	u3660
  9233   00396E                     u3661:
  9234   00396E  EFCC  F01C         	goto	l3623
  9235   003972                     u3660:
  9236   003972  0EF7               	movlw	247
  9237   003974  2401               	addwf	isspace@c^0,w,c
  9238   003976  6E03               	movwf	??_isspace^0,c
  9239   003978  0EFF               	movlw	255
  9240   00397A  2002               	addwfc	(isspace@c+1)^0,w,c
  9241   00397C  6E04               	movwf	(??_isspace+1)^0,c
  9242   00397E  5004               	movf	(??_isspace+1)^0,w,c
  9243   003980  E109               	bnz	u3670
  9244   003982  0E05               	movlw	5
  9245   003984  5C03               	subwf	??_isspace^0,w,c
  9246   003986  A0D8               	btfss	status,0,c
  9247   003988  EFC8  F01C         	goto	u3671
  9248   00398C  EFCA  F01C         	goto	u3670
  9249   003990                     u3671:
  9250   003990  EFCC  F01C         	goto	l3623
  9251   003994                     u3670:
  9252   003994  0E00               	movlw	0
  9253   003996  6E05               	movwf	_isspace$1235^0,c
  9254   003998                     l3623:
  9255   003998  C005  F001         	movff	_isspace$1235,?_isspace
  9256   00399C  6A02               	clrf	(?_isspace+1)^0,c
  9257   00399E  0012               	return		;funcret
  9258   0039A0                     __end_of_isspace:
  9259                           	callstack 0
  9260                           
  9261 ;; *************** function _isdigit *****************
  9262 ;; Defined at:
  9263 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  c               2    0[COMRAM] int 
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;		None
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  2    0[COMRAM] int 
  9270 ;; Registers used:
  9271 ;;		wreg, status,2, status,0
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9277 ;;      Params:         2       0       0       0       0       0       0
  9278 ;;      Locals:         0       0       0       0       0       0       0
  9279 ;;      Temps:          2       0       0       0       0       0       0
  9280 ;;      Totals:         4       0       0       0       0       0       0
  9281 ;;Total ram usage:        4 bytes
  9282 ;; Hardware stack levels used: 1
  9283 ;; Hardware stack levels required when called: 1
  9284 ;; This function calls:
  9285 ;;		Nothing
  9286 ;; This function is called by:
  9287 ;;		_vfpfcnvrt
  9288 ;;		_atoi
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text47
  9293   003B08                     __ptext47:
  9294                           	callstack 0
  9295   003B08                     _isdigit:
  9296                           	callstack 24
  9297   003B08  0ED0               	movlw	208
  9298   003B0A  2401               	addwf	isdigit@c^0,w,c
  9299   003B0C  6E03               	movwf	??_isdigit^0,c
  9300   003B0E  0EFF               	movlw	255
  9301   003B10  2002               	addwfc	(isdigit@c+1)^0,w,c
  9302   003B12  6E04               	movwf	(??_isdigit+1)^0,c
  9303   003B14  5004               	movf	(??_isdigit+1)^0,w,c
  9304   003B16  E10A               	bnz	u3640
  9305   003B18  0E0A               	movlw	10
  9306   003B1A  5C03               	subwf	??_isdigit^0,w,c
  9307   003B1C  A0D8               	btfss	status,0,c
  9308   003B1E  EF93  F01D         	goto	u3641
  9309   003B22  EF96  F01D         	goto	u3640
  9310   003B26                     u3641:
  9311   003B26  0E01               	movlw	1
  9312   003B28  EF97  F01D         	goto	u3650
  9313   003B2C                     u3640:
  9314   003B2C  0E00               	movlw	0
  9315   003B2E                     u3650:
  9316   003B2E  6E01               	movwf	?_isdigit^0,c
  9317   003B30  6A02               	clrf	(?_isdigit+1)^0,c
  9318   003B32  0012               	return		;funcret
  9319   003B34                     __end_of_isdigit:
  9320                           	callstack 0
  9321                           
  9322 ;; *************** function ___wmul *****************
  9323 ;; Defined at:
  9324 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  multiplier      2    0[COMRAM] unsigned int 
  9327 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;  product         2    4[COMRAM] unsigned int 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  2    0[COMRAM] unsigned int 
  9332 ;; Registers used:
  9333 ;;		wreg, status,2, status,0, prodl, prodh
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9339 ;;      Params:         4       0       0       0       0       0       0
  9340 ;;      Locals:         2       0       0       0       0       0       0
  9341 ;;      Temps:          0       0       0       0       0       0       0
  9342 ;;      Totals:         6       0       0       0       0       0       0
  9343 ;;Total ram usage:        6 bytes
  9344 ;; Hardware stack levels used: 1
  9345 ;; Hardware stack levels required when called: 1
  9346 ;; This function calls:
  9347 ;;		Nothing
  9348 ;; This function is called by:
  9349 ;;		_atoi
  9350 ;; This function uses a non-reentrant model
  9351 ;;
  9352                           
  9353                           	psect	text48
  9354   003B34                     __ptext48:
  9355                           	callstack 0
  9356   003B34                     ___wmul:
  9357                           	callstack 23
  9358   003B34  5001               	movf	___wmul@multiplier^0,w,c
  9359   003B36  0203               	mulwf	___wmul@multiplicand^0,c
  9360   003B38  CFF3 F005          	movff	prodl,___wmul@product
  9361   003B3C  CFF4 F006          	movff	prodh,___wmul@product+1
  9362   003B40  5001               	movf	___wmul@multiplier^0,w,c
  9363   003B42  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9364   003B44  50F3               	movf	243,w,c
  9365   003B46  2606               	addwf	(___wmul@product+1)^0,f,c
  9366   003B48  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9367   003B4A  0203               	mulwf	___wmul@multiplicand^0,c
  9368   003B4C  50F3               	movf	243,w,c
  9369   003B4E  2606               	addwf	(___wmul@product+1)^0,f,c
  9370   003B50  C005  F001         	movff	___wmul@product,?___wmul
  9371   003B54  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9372   003B58  0012               	return		;funcret
  9373   003B5A                     __end_of___wmul:
  9374                           	callstack 0
  9375                           
  9376 ;; *************** function _memset *****************
  9377 ;; Defined at:
  9378 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memset.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  dest            2    0[COMRAM] PTR void 
  9381 ;;		 -> DispSystemParam@szPercentDutyDisp(16), DispSystemParam@szAdcVoltageDisp(16), 
  9382 ;;  c               2    2[COMRAM] int 
  9383 ;;  n               2    4[COMRAM] unsigned int 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;  s               2   10[COMRAM] PTR unsigned char 
  9386 ;;		 -> DispSystemParam@szPercentDutyDisp(16), DispSystemParam@szAdcVoltageDisp(16), 
  9387 ;;  k               2    8[COMRAM] unsigned int 
  9388 ;; Return value:  Size  Location     Type
  9389 ;;                  2    0[COMRAM] PTR void 
  9390 ;; Registers used:
  9391 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9392 ;; Tracked objects:
  9393 ;;		On entry : 0/0
  9394 ;;		On exit  : 0/0
  9395 ;;		Unchanged: 0/0
  9396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9397 ;;      Params:         6       0       0       0       0       0       0
  9398 ;;      Locals:         4       0       0       0       0       0       0
  9399 ;;      Temps:          2       0       0       0       0       0       0
  9400 ;;      Totals:        12       0       0       0       0       0       0
  9401 ;;Total ram usage:       12 bytes
  9402 ;; Hardware stack levels used: 1
  9403 ;; Hardware stack levels required when called: 1
  9404 ;; This function calls:
  9405 ;;		Nothing
  9406 ;; This function is called by:
  9407 ;;		_DispSystemParam
  9408 ;; This function uses a non-reentrant model
  9409 ;;
  9410                           
  9411                           	psect	text49
  9412   002442                     __ptext49:
  9413                           	callstack 0
  9414   002442                     _memset:
  9415                           	callstack 27
  9416   002442  C001  F00B         	movff	memset@dest,memset@s
  9417   002446  C002  F00C         	movff	memset@dest+1,memset@s+1
  9418   00244A  5005               	movf	memset@n^0,w,c
  9419   00244C  1006               	iorwf	(memset@n+1)^0,w,c
  9420   00244E  A4D8               	btfss	status,2,c
  9421   002450  EF2C  F012         	goto	u4201
  9422   002454  EF2E  F012         	goto	u4200
  9423   002458                     u4201:
  9424   002458  EF30  F012         	goto	l4109
  9425   00245C                     u4200:
  9426   00245C  EFDB  F012         	goto	l924
  9427   002460                     l4109:
  9428   002460  C00B  FFD9         	movff	memset@s,fsr2l
  9429   002464  C00C  FFDA         	movff	memset@s+1,fsr2h
  9430   002468  C003  FFDF         	movff	memset@c,indf2
  9431   00246C  5005               	movf	memset@n^0,w,c
  9432   00246E  240B               	addwf	memset@s^0,w,c
  9433   002470  6E07               	movwf	??_memset^0,c
  9434   002472  5006               	movf	(memset@n+1)^0,w,c
  9435   002474  200C               	addwfc	(memset@s+1)^0,w,c
  9436   002476  6E08               	movwf	(??_memset+1)^0,c
  9437   002478  0EFF               	movlw	255
  9438   00247A  2407               	addwf	??_memset^0,w,c
  9439   00247C  6ED9               	movwf	fsr2l,c
  9440   00247E  0EFF               	movlw	255
  9441   002480  2008               	addwfc	(??_memset+1)^0,w,c
  9442   002482  6EDA               	movwf	fsr2h,c
  9443   002484  C003  FFDF         	movff	memset@c,indf2
  9444   002488  5006               	movf	(memset@n+1)^0,w,c
  9445   00248A  E107               	bnz	u4211
  9446   00248C  0E03               	movlw	3
  9447   00248E  5C05               	subwf	memset@n^0,w,c
  9448   002490  B0D8               	btfsc	status,0,c
  9449   002492  EF4D  F012         	goto	u4211
  9450   002496  EF4F  F012         	goto	u4210
  9451   00249A                     u4211:
  9452   00249A  EF51  F012         	goto	l4115
  9453   00249E                     u4210:
  9454   00249E  EFDB  F012         	goto	l924
  9455   0024A2                     l4115:
  9456   0024A2  EE20 F001          	lfsr	2,1
  9457   0024A6  500B               	movf	memset@s^0,w,c
  9458   0024A8  26D9               	addwf	fsr2l,f,c
  9459   0024AA  500C               	movf	(memset@s+1)^0,w,c
  9460   0024AC  22DA               	addwfc	fsr2h,f,c
  9461   0024AE  C003  FFDF         	movff	memset@c,indf2
  9462   0024B2  EE20 F002          	lfsr	2,2
  9463   0024B6  500B               	movf	memset@s^0,w,c
  9464   0024B8  26D9               	addwf	fsr2l,f,c
  9465   0024BA  500C               	movf	(memset@s+1)^0,w,c
  9466   0024BC  22DA               	addwfc	fsr2h,f,c
  9467   0024BE  C003  FFDF         	movff	memset@c,indf2
  9468   0024C2  5005               	movf	memset@n^0,w,c
  9469   0024C4  240B               	addwf	memset@s^0,w,c
  9470   0024C6  6E07               	movwf	??_memset^0,c
  9471   0024C8  5006               	movf	(memset@n+1)^0,w,c
  9472   0024CA  200C               	addwfc	(memset@s+1)^0,w,c
  9473   0024CC  6E08               	movwf	(??_memset+1)^0,c
  9474   0024CE  0EFE               	movlw	254
  9475   0024D0  2407               	addwf	??_memset^0,w,c
  9476   0024D2  6ED9               	movwf	fsr2l,c
  9477   0024D4  0EFF               	movlw	255
  9478   0024D6  2008               	addwfc	(??_memset+1)^0,w,c
  9479   0024D8  6EDA               	movwf	fsr2h,c
  9480   0024DA  C003  FFDF         	movff	memset@c,indf2
  9481   0024DE  5005               	movf	memset@n^0,w,c
  9482   0024E0  240B               	addwf	memset@s^0,w,c
  9483   0024E2  6E07               	movwf	??_memset^0,c
  9484   0024E4  5006               	movf	(memset@n+1)^0,w,c
  9485   0024E6  200C               	addwfc	(memset@s+1)^0,w,c
  9486   0024E8  6E08               	movwf	(??_memset+1)^0,c
  9487   0024EA  0EFD               	movlw	253
  9488   0024EC  2407               	addwf	??_memset^0,w,c
  9489   0024EE  6ED9               	movwf	fsr2l,c
  9490   0024F0  0EFF               	movlw	255
  9491   0024F2  2008               	addwfc	(??_memset+1)^0,w,c
  9492   0024F4  6EDA               	movwf	fsr2h,c
  9493   0024F6  C003  FFDF         	movff	memset@c,indf2
  9494   0024FA  5006               	movf	(memset@n+1)^0,w,c
  9495   0024FC  E107               	bnz	u4221
  9496   0024FE  0E07               	movlw	7
  9497   002500  5C05               	subwf	memset@n^0,w,c
  9498   002502  B0D8               	btfsc	status,0,c
  9499   002504  EF86  F012         	goto	u4221
  9500   002508  EF88  F012         	goto	u4220
  9501   00250C                     u4221:
  9502   00250C  EF8A  F012         	goto	l4121
  9503   002510                     u4220:
  9504   002510  EFDB  F012         	goto	l924
  9505   002514                     l4121:
  9506   002514  EE20 F003          	lfsr	2,3
  9507   002518  500B               	movf	memset@s^0,w,c
  9508   00251A  26D9               	addwf	fsr2l,f,c
  9509   00251C  500C               	movf	(memset@s+1)^0,w,c
  9510   00251E  22DA               	addwfc	fsr2h,f,c
  9511   002520  C003  FFDF         	movff	memset@c,indf2
  9512   002524  5005               	movf	memset@n^0,w,c
  9513   002526  240B               	addwf	memset@s^0,w,c
  9514   002528  6E07               	movwf	??_memset^0,c
  9515   00252A  5006               	movf	(memset@n+1)^0,w,c
  9516   00252C  200C               	addwfc	(memset@s+1)^0,w,c
  9517   00252E  6E08               	movwf	(??_memset+1)^0,c
  9518   002530  0EFC               	movlw	252
  9519   002532  2407               	addwf	??_memset^0,w,c
  9520   002534  6ED9               	movwf	fsr2l,c
  9521   002536  0EFF               	movlw	255
  9522   002538  2008               	addwfc	(??_memset+1)^0,w,c
  9523   00253A  6EDA               	movwf	fsr2h,c
  9524   00253C  C003  FFDF         	movff	memset@c,indf2
  9525   002540  5006               	movf	(memset@n+1)^0,w,c
  9526   002542  E107               	bnz	u4231
  9527   002544  0E09               	movlw	9
  9528   002546  5C05               	subwf	memset@n^0,w,c
  9529   002548  B0D8               	btfsc	status,0,c
  9530   00254A  EFA9  F012         	goto	u4231
  9531   00254E  EFAB  F012         	goto	u4230
  9532   002552                     u4231:
  9533   002552  EFAD  F012         	goto	l4127
  9534   002556                     u4230:
  9535   002556  EFDB  F012         	goto	l924
  9536   00255A                     l4127:
  9537   00255A  C00B  F007         	movff	memset@s,??_memset
  9538   00255E  C00C  F008         	movff	memset@s+1,??_memset+1
  9539   002562  1E07               	comf	??_memset^0,f,c
  9540   002564  1E08               	comf	(??_memset+1)^0,f,c
  9541   002566  4A07               	infsnz	??_memset^0,f,c
  9542   002568  2A08               	incf	(??_memset+1)^0,f,c
  9543   00256A  0E03               	movlw	3
  9544   00256C  1407               	andwf	??_memset^0,w,c
  9545   00256E  6E09               	movwf	memset@k^0,c
  9546   002570  6A0A               	clrf	(memset@k+1)^0,c
  9547   002572  5009               	movf	memset@k^0,w,c
  9548   002574  260B               	addwf	memset@s^0,f,c
  9549   002576  500A               	movf	(memset@k+1)^0,w,c
  9550   002578  220C               	addwfc	(memset@s+1)^0,f,c
  9551   00257A  5009               	movf	memset@k^0,w,c
  9552   00257C  5E05               	subwf	memset@n^0,f,c
  9553   00257E  500A               	movf	(memset@k+1)^0,w,c
  9554   002580  5A06               	subwfb	(memset@n+1)^0,f,c
  9555   002582  0EFC               	movlw	252
  9556   002584  1605               	andwf	memset@n^0,f,c
  9557   002586  0EFF               	movlw	255
  9558   002588  1606               	andwf	(memset@n+1)^0,f,c
  9559   00258A  EFD2  F012         	goto	l4135
  9560   00258E                     l4129:
  9561   00258E  C00B  FFD9         	movff	memset@s,fsr2l
  9562   002592  C00C  FFDA         	movff	memset@s+1,fsr2h
  9563   002596  C003  FFDF         	movff	memset@c,indf2
  9564   00259A  0605               	decf	memset@n^0,f,c
  9565   00259C  A0D8               	btfss	status,0,c
  9566   00259E  0606               	decf	(memset@n+1)^0,f,c
  9567   0025A0  4A0B               	infsnz	memset@s^0,f,c
  9568   0025A2  2A0C               	incf	(memset@s+1)^0,f,c
  9569   0025A4                     l4135:
  9570   0025A4  5005               	movf	memset@n^0,w,c
  9571   0025A6  1006               	iorwf	(memset@n+1)^0,w,c
  9572   0025A8  A4D8               	btfss	status,2,c
  9573   0025AA  EFD9  F012         	goto	u4241
  9574   0025AE  EFDB  F012         	goto	u4240
  9575   0025B2                     u4241:
  9576   0025B2  EFC7  F012         	goto	l4129
  9577   0025B6                     u4240:
  9578   0025B6                     l924:
  9579   0025B6  0012               	return		;funcret
  9580   0025B8                     __end_of_memset:
  9581                           	callstack 0
  9582                           
  9583 ;; *************** function _LcdSetCursor *****************
  9584 ;; Defined at:
  9585 ;;		line 84 in file "lcd.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;  x               1    wreg     unsigned char 
  9588 ;;  y               1    3[COMRAM] unsigned char 
  9589 ;; Auto vars:     Size  Location     Type
  9590 ;;  x               1    4[COMRAM] unsigned char 
  9591 ;;  temp            1    7[COMRAM] unsigned char 
  9592 ;;  j               1    6[COMRAM] unsigned char 
  9593 ;;  k               1    5[COMRAM] unsigned char 
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  1    wreg      void 
  9596 ;; Registers used:
  9597 ;;		wreg, status,2, status,0, cstack
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/0
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9603 ;;      Params:         1       0       0       0       0       0       0
  9604 ;;      Locals:         4       0       0       0       0       0       0
  9605 ;;      Temps:          0       0       0       0       0       0       0
  9606 ;;      Totals:         5       0       0       0       0       0       0
  9607 ;;Total ram usage:        5 bytes
  9608 ;; Hardware stack levels used: 1
  9609 ;; Hardware stack levels required when called: 3
  9610 ;; This function calls:
  9611 ;;		_LcdCmd
  9612 ;; This function is called by:
  9613 ;;		_MsgInicialLcd
  9614 ;;		_DispSystemParam
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618                           	psect	text50
  9619   0035BA                     __ptext50:
  9620                           	callstack 0
  9621   0035BA                     _LcdSetCursor:
  9622                           	callstack 25
  9623                           
  9624                           ;incstack = 0
  9625                           ;LcdSetCursor@x stored from wreg
  9626   0035BA  6E05               	movwf	LcdSetCursor@x^0,c
  9627   0035BC                     
  9628                           ;lcd.c: 85:     char temp, k, j;;lcd.c: 86:     if (x == 1) {
  9629   0035BC  0405               	decf	LcdSetCursor@x^0,w,c
  9630   0035BE  A4D8               	btfss	status,2,c
  9631   0035C0  EFE4  F01A         	goto	u4151
  9632   0035C4  EFE6  F01A         	goto	u4150
  9633   0035C8                     u4151:
  9634   0035C8  EFF7  F01A         	goto	l4087
  9635   0035CC                     u4150:
  9636   0035CC                     
  9637                           ;lcd.c: 87:         temp = 0x80 + y - 1;
  9638   0035CC  5004               	movf	LcdSetCursor@y^0,w,c
  9639   0035CE  0F7F               	addlw	127
  9640   0035D0  6E08               	movwf	LcdSetCursor@temp^0,c
  9641                           
  9642                           ;lcd.c: 88:         k = temp >> 4;
  9643   0035D2  3808               	swapf	LcdSetCursor@temp^0,w,c
  9644   0035D4  0B0F               	andlw	15
  9645   0035D6  6E06               	movwf	LcdSetCursor@k^0,c
  9646                           
  9647                           ;lcd.c: 89:         j = temp & 0x0F;
  9648   0035D8  5008               	movf	LcdSetCursor@temp^0,w,c
  9649   0035DA  0B0F               	andlw	15
  9650   0035DC  6E07               	movwf	LcdSetCursor@j^0,c
  9651   0035DE                     
  9652                           ;lcd.c: 90:         LcdCmd(k);
  9653   0035DE  5006               	movf	LcdSetCursor@k^0,w,c
  9654   0035E0  ECBF  F01D         	call	_LcdCmd
  9655   0035E4                     
  9656                           ;lcd.c: 91:         LcdCmd(j);
  9657   0035E4  5007               	movf	LcdSetCursor@j^0,w,c
  9658   0035E6  ECBF  F01D         	call	_LcdCmd
  9659                           
  9660                           ;lcd.c: 92:     } else if (x == 2) {
  9661   0035EA  EF0F  F01B         	goto	l226
  9662   0035EE                     l4087:
  9663   0035EE  0E02               	movlw	2
  9664   0035F0  1805               	xorwf	LcdSetCursor@x^0,w,c
  9665   0035F2  A4D8               	btfss	status,2,c
  9666   0035F4  EFFE  F01A         	goto	u4161
  9667   0035F8  EF00  F01B         	goto	u4160
  9668   0035FC                     u4161:
  9669   0035FC  EF0F  F01B         	goto	l226
  9670   003600                     u4160:
  9671   003600                     
  9672                           ;lcd.c: 93:         temp = 0xC0 + y - 1;
  9673   003600  5004               	movf	LcdSetCursor@y^0,w,c
  9674   003602  0FBF               	addlw	191
  9675   003604  6E08               	movwf	LcdSetCursor@temp^0,c
  9676                           
  9677                           ;lcd.c: 94:         k = temp >> 4;
  9678   003606  3808               	swapf	LcdSetCursor@temp^0,w,c
  9679   003608  0B0F               	andlw	15
  9680   00360A  6E06               	movwf	LcdSetCursor@k^0,c
  9681                           
  9682                           ;lcd.c: 95:         j = temp & 0x0F;
  9683   00360C  5008               	movf	LcdSetCursor@temp^0,w,c
  9684   00360E  0B0F               	andlw	15
  9685   003610  6E07               	movwf	LcdSetCursor@j^0,c
  9686   003612                     
  9687                           ;lcd.c: 96:         LcdCmd(k);
  9688   003612  5006               	movf	LcdSetCursor@k^0,w,c
  9689   003614  ECBF  F01D         	call	_LcdCmd
  9690   003618                     
  9691                           ;lcd.c: 97:         LcdCmd(j);
  9692   003618  5007               	movf	LcdSetCursor@j^0,w,c
  9693   00361A  ECBF  F01D         	call	_LcdCmd
  9694   00361E                     l226:
  9695   00361E  0012               	return		;funcret
  9696   003620                     __end_of_LcdSetCursor:
  9697                           	callstack 0
  9698                           
  9699 ;; *************** function _LcdCmd *****************
  9700 ;; Defined at:
  9701 ;;		line 41 in file "lcd.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  c               1    wreg     unsigned char 
  9704 ;; Auto vars:     Size  Location     Type
  9705 ;;  c               1    2[COMRAM] unsigned char 
  9706 ;; Return value:  Size  Location     Type
  9707 ;;                  1    wreg      void 
  9708 ;; Registers used:
  9709 ;;		wreg, status,2, cstack
  9710 ;; Tracked objects:
  9711 ;;		On entry : 0/0
  9712 ;;		On exit  : 0/0
  9713 ;;		Unchanged: 0/0
  9714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9715 ;;      Params:         0       0       0       0       0       0       0
  9716 ;;      Locals:         1       0       0       0       0       0       0
  9717 ;;      Temps:          1       0       0       0       0       0       0
  9718 ;;      Totals:         2       0       0       0       0       0       0
  9719 ;;Total ram usage:        2 bytes
  9720 ;; Hardware stack levels used: 1
  9721 ;; Hardware stack levels required when called: 2
  9722 ;; This function calls:
  9723 ;;		_LcdOut
  9724 ;; This function is called by:
  9725 ;;		_LcdInit
  9726 ;;		_LcdClear
  9727 ;;		_LcdSetCursor
  9728 ;; This function uses a non-reentrant model
  9729 ;;
  9730                           
  9731                           	psect	text51
  9732   003B7E                     __ptext51:
  9733                           	callstack 0
  9734   003B7E                     _LcdCmd:
  9735                           	callstack 25
  9736                           
  9737                           ;incstack = 0
  9738                           ;LcdCmd@c stored from wreg
  9739   003B7E  6E03               	movwf	LcdCmd@c^0,c
  9740   003B80                     
  9741                           ;lcd.c: 42:     PORTEbits.RE2 = 0;
  9742   003B80  9484               	bcf	132,2,c	;volatile
  9743   003B82                     
  9744                           ;lcd.c: 43:     LcdOut(c);
  9745   003B82  5003               	movf	LcdCmd@c^0,w,c
  9746   003B84  EC09  F01C         	call	_LcdOut
  9747   003B88                     
  9748                           ;lcd.c: 44:     PORTEbits.RE1 = 1;
  9749   003B88  8284               	bsf	132,1,c	;volatile
  9750   003B8A                     
  9751                           ;lcd.c: 45:     _delay((unsigned long)((4)*(20E6/4000.0)));
  9752   003B8A  0E1A               	movlw	26
  9753   003B8C  6E02               	movwf	??_LcdCmd^0,c
  9754   003B8E  0EF8               	movlw	248
  9755   003B90                     u4827:
  9756   003B90  2EE8               	decfsz	wreg,f,c
  9757   003B92  D7FE               	bra	u4827
  9758   003B94  2E02               	decfsz	??_LcdCmd^0,f,c
  9759   003B96  D7FC               	bra	u4827
  9760   003B98  D000               	nop2	
  9761   003B9A                     
  9762                           ;lcd.c: 46:     PORTEbits.RE1 = 0;
  9763   003B9A  9284               	bcf	132,1,c	;volatile
  9764   003B9C  0012               	return		;funcret
  9765   003B9E                     __end_of_LcdCmd:
  9766                           	callstack 0
  9767                           
  9768 ;; *************** function _LcdPutStr *****************
  9769 ;; Defined at:
  9770 ;;		line 116 in file "lcd.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;  str             2    4[COMRAM] PTR unsigned char 
  9773 ;;		 -> DispSystemParam@szPercentDutyDisp(16), DispSystemParam@szAdcVoltageDisp(16), STR_4(15), STR_3(13), 
  9774 ;;		 -> STR_2(15), STR_1(13), 
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;  i               2    8[COMRAM] int 
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9786 ;;      Params:         2       0       0       0       0       0       0
  9787 ;;      Locals:         2       0       0       0       0       0       0
  9788 ;;      Temps:          2       0       0       0       0       0       0
  9789 ;;      Totals:         6       0       0       0       0       0       0
  9790 ;;Total ram usage:        6 bytes
  9791 ;; Hardware stack levels used: 1
  9792 ;; Hardware stack levels required when called: 3
  9793 ;; This function calls:
  9794 ;;		_LcdPutChar
  9795 ;; This function is called by:
  9796 ;;		_MsgInicialLcd
  9797 ;;		_DispSystemParam
  9798 ;; This function uses a non-reentrant model
  9799 ;;
  9800                           
  9801                           	psect	text52
  9802   003184                     __ptext52:
  9803                           	callstack 0
  9804   003184                     _LcdPutStr:
  9805                           	callstack 25
  9806   003184                     
  9807                           ;lcd.c: 117:     int i = 0;
  9808   003184  0E00               	movlw	0
  9809   003186  6E0A               	movwf	(LcdPutStr@i+1)^0,c
  9810   003188  0E00               	movlw	0
  9811   00318A  6E09               	movwf	LcdPutStr@i^0,c
  9812                           
  9813                           ;lcd.c: 118:     for (i = 0; str[i] != '\0'; i++) {
  9814   00318C  0E00               	movlw	0
  9815   00318E  6E0A               	movwf	(LcdPutStr@i+1)^0,c
  9816   003190  0E00               	movlw	0
  9817   003192  6E09               	movwf	LcdPutStr@i^0,c
  9818   003194  EFE6  F018         	goto	l4101
  9819   003198                     l4097:
  9820                           
  9821                           ;lcd.c: 119:         LcdPutChar(str[i]);
  9822   003198  5009               	movf	LcdPutStr@i^0,w,c
  9823   00319A  2405               	addwf	LcdPutStr@str^0,w,c
  9824   00319C  6E07               	movwf	??_LcdPutStr^0,c
  9825   00319E  500A               	movf	(LcdPutStr@i+1)^0,w,c
  9826   0031A0  2006               	addwfc	(LcdPutStr@str+1)^0,w,c
  9827   0031A2  6E08               	movwf	(??_LcdPutStr+1)^0,c
  9828   0031A4  C007  FFF6         	movff	??_LcdPutStr,tblptrl
  9829   0031A8  C008  FFF7         	movff	??_LcdPutStr+1,tblptrh
  9830   0031AC  6AF8               	clrf	tblptru,c
  9831   0031AE  0E05               	movlw	(high __ramtop+-1)
  9832   0031B0  64F7               	cpfsgt	tblptrh,c
  9833   0031B2  D003               	bra	u4177
  9834   0031B4  0008               	tblrd		*
  9835   0031B6  50F5               	movf	tablat,w,c
  9836   0031B8  D005               	bra	u4170
  9837   0031BA                     u4177:
  9838   0031BA  CFF6 FFE1          	movff	tblptrl,fsr1l
  9839   0031BE  CFF7 FFE2          	movff	tblptrh,fsr1h
  9840   0031C2  50E7               	movf	indf1,w,c
  9841   0031C4                     u4170:
  9842   0031C4  EC4D  F01D         	call	_LcdPutChar
  9843   0031C8                     
  9844                           ;lcd.c: 120:     }
  9845   0031C8  4A09               	infsnz	LcdPutStr@i^0,f,c
  9846   0031CA  2A0A               	incf	(LcdPutStr@i+1)^0,f,c
  9847   0031CC                     l4101:
  9848   0031CC  5009               	movf	LcdPutStr@i^0,w,c
  9849   0031CE  2405               	addwf	LcdPutStr@str^0,w,c
  9850   0031D0  6E07               	movwf	??_LcdPutStr^0,c
  9851   0031D2  500A               	movf	(LcdPutStr@i+1)^0,w,c
  9852   0031D4  2006               	addwfc	(LcdPutStr@str+1)^0,w,c
  9853   0031D6  6E08               	movwf	(??_LcdPutStr+1)^0,c
  9854   0031D8  C007  FFF6         	movff	??_LcdPutStr,tblptrl
  9855   0031DC  C008  FFF7         	movff	??_LcdPutStr+1,tblptrh
  9856   0031E0  6AF8               	clrf	tblptru,c
  9857   0031E2  0E05               	movlw	(high __ramtop+-1)
  9858   0031E4  64F7               	cpfsgt	tblptrh,c
  9859   0031E6  D003               	bra	u4187
  9860   0031E8  0008               	tblrd		*
  9861   0031EA  50F5               	movf	tablat,w,c
  9862   0031EC  D005               	bra	u4180
  9863   0031EE                     u4187:
  9864   0031EE  CFF6 FFE1          	movff	tblptrl,fsr1l
  9865   0031F2  CFF7 FFE2          	movff	tblptrh,fsr1h
  9866   0031F6  50E7               	movf	indf1,w,c
  9867   0031F8                     u4180:
  9868   0031F8  0900               	iorlw	0
  9869   0031FA  A4D8               	btfss	status,2,c
  9870   0031FC  EF02  F019         	goto	u4191
  9871   003200  EF04  F019         	goto	u4190
  9872   003204                     u4191:
  9873   003204  EFCC  F018         	goto	l4097
  9874   003208                     u4190:
  9875   003208  0012               	return		;funcret
  9876   00320A                     __end_of_LcdPutStr:
  9877                           	callstack 0
  9878                           
  9879 ;; *************** function _LcdPutChar *****************
  9880 ;; Defined at:
  9881 ;;		line 101 in file "lcd.c"
  9882 ;; Parameters:    Size  Location     Type
  9883 ;;  c               1    wreg     unsigned char 
  9884 ;; Auto vars:     Size  Location     Type
  9885 ;;  c               1    3[COMRAM] unsigned char 
  9886 ;;  y               1    2[COMRAM] unsigned char 
  9887 ;;  temp            1    1[COMRAM] unsigned char 
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  1    wreg      void 
  9890 ;; Registers used:
  9891 ;;		wreg, status,2, status,0, cstack
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9897 ;;      Params:         0       0       0       0       0       0       0
  9898 ;;      Locals:         3       0       0       0       0       0       0
  9899 ;;      Temps:          0       0       0       0       0       0       0
  9900 ;;      Totals:         3       0       0       0       0       0       0
  9901 ;;Total ram usage:        3 bytes
  9902 ;; Hardware stack levels used: 1
  9903 ;; Hardware stack levels required when called: 2
  9904 ;; This function calls:
  9905 ;;		_LcdOut
  9906 ;; This function is called by:
  9907 ;;		_LcdPutStr
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           	psect	text53
  9912   003A9A                     __ptext53:
  9913                           	callstack 0
  9914   003A9A                     _LcdPutChar:
  9915                           	callstack 25
  9916                           
  9917                           ;incstack = 0
  9918                           ;LcdPutChar@c stored from wreg
  9919   003A9A  6E04               	movwf	LcdPutChar@c^0,c
  9920   003A9C                     
  9921                           ;lcd.c: 102:     char temp, y;;lcd.c: 103:     temp = c & 0x0F;
  9922   003A9C  5004               	movf	LcdPutChar@c^0,w,c
  9923   003A9E  0B0F               	andlw	15
  9924   003AA0  6E02               	movwf	LcdPutChar@temp^0,c
  9925                           
  9926                           ;lcd.c: 104:     y = c & 0xF0;
  9927   003AA2  5004               	movf	LcdPutChar@c^0,w,c
  9928   003AA4  0BF0               	andlw	240
  9929   003AA6  6E03               	movwf	LcdPutChar@y^0,c
  9930   003AA8                     
  9931                           ;lcd.c: 105:     PORTEbits.RE2 = 1;
  9932   003AA8  8484               	bsf	132,2,c	;volatile
  9933   003AAA                     
  9934                           ;lcd.c: 106:     LcdOut(y >> 4);
  9935   003AAA  3803               	swapf	LcdPutChar@y^0,w,c
  9936   003AAC  0B0F               	andlw	15
  9937   003AAE  EC09  F01C         	call	_LcdOut
  9938   003AB2                     
  9939                           ;lcd.c: 107:     PORTEbits.RE1 = 1;
  9940   003AB2  8284               	bsf	132,1,c	;volatile
  9941   003AB4                     
  9942                           ;lcd.c: 108:     _delay((unsigned long)((40)*(20E6/4000000.0)));
  9943   003AB4  0E42               	movlw	66
  9944   003AB6                     u4837:
  9945   003AB6  2EE8               	decfsz	wreg,f,c
  9946   003AB8  D7FE               	bra	u4837
  9947   003ABA  D000               	nop2	
  9948   003ABC                     
  9949                           ;lcd.c: 109:     PORTEbits.RE1 = 0;
  9950   003ABC  9284               	bcf	132,1,c	;volatile
  9951   003ABE                     
  9952                           ;lcd.c: 110:     LcdOut(temp);
  9953   003ABE  5002               	movf	LcdPutChar@temp^0,w,c
  9954   003AC0  EC09  F01C         	call	_LcdOut
  9955   003AC4                     
  9956                           ;lcd.c: 111:     PORTEbits.RE1 = 1;
  9957   003AC4  8284               	bsf	132,1,c	;volatile
  9958   003AC6                     
  9959                           ;lcd.c: 112:     _delay((unsigned long)((40)*(20E6/4000000.0)));
  9960   003AC6  0E42               	movlw	66
  9961   003AC8                     u4847:
  9962   003AC8  2EE8               	decfsz	wreg,f,c
  9963   003ACA  D7FE               	bra	u4847
  9964   003ACC  D000               	nop2	
  9965   003ACE                     
  9966                           ;lcd.c: 113:     PORTEbits.RE1 = 0;
  9967   003ACE  9284               	bcf	132,1,c	;volatile
  9968   003AD0  0012               	return		;funcret
  9969   003AD2                     __end_of_LcdPutChar:
  9970                           	callstack 0
  9971                           
  9972 ;; *************** function _LcdOut *****************
  9973 ;; Defined at:
  9974 ;;		line 18 in file "lcd.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;  c               1    wreg     unsigned char 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;  c               1    0[COMRAM] unsigned char 
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  1    wreg      void 
  9981 ;; Registers used:
  9982 ;;		wreg
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9988 ;;      Params:         0       0       0       0       0       0       0
  9989 ;;      Locals:         1       0       0       0       0       0       0
  9990 ;;      Temps:          0       0       0       0       0       0       0
  9991 ;;      Totals:         1       0       0       0       0       0       0
  9992 ;;Total ram usage:        1 bytes
  9993 ;; Hardware stack levels used: 1
  9994 ;; Hardware stack levels required when called: 1
  9995 ;; This function calls:
  9996 ;;		Nothing
  9997 ;; This function is called by:
  9998 ;;		_LcdCmd
  9999 ;;		_LcdPutChar
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text54
 10004   003812                     __ptext54:
 10005                           	callstack 0
 10006   003812                     _LcdOut:
 10007                           	callstack 25
 10008                           
 10009                           ;incstack = 0
 10010                           ;LcdOut@c stored from wreg
 10011   003812  6E01               	movwf	LcdOut@c^0,c
 10012   003814                     
 10013                           ;lcd.c: 19:     if (c & 1) {
 10014   003814  A001               	btfss	LcdOut@c^0,0,c
 10015   003816  EF0F  F01C         	goto	u4041
 10016   00381A  EF11  F01C         	goto	u4040
 10017   00381E                     u4041:
 10018   00381E  EF14  F01C         	goto	l203
 10019   003822                     u4040:
 10020   003822                     
 10021                           ;lcd.c: 20:         PORTDbits.RD4 = 1;
 10022   003822  8883               	bsf	131,4,c	;volatile
 10023                           
 10024                           ;lcd.c: 21:     } else {
 10025   003824  EF15  F01C         	goto	l3885
 10026   003828                     l203:
 10027                           
 10028                           ;lcd.c: 22:         PORTDbits.RD4 = 0;
 10029   003828  9883               	bcf	131,4,c	;volatile
 10030   00382A                     l3885:
 10031                           
 10032                           ;lcd.c: 24:     if (c & 2) {
 10033   00382A  A201               	btfss	LcdOut@c^0,1,c
 10034   00382C  EF1A  F01C         	goto	u4051
 10035   003830  EF1C  F01C         	goto	u4050
 10036   003834                     u4051:
 10037   003834  EF1F  F01C         	goto	l205
 10038   003838                     u4050:
 10039   003838                     
 10040                           ;lcd.c: 25:         PORTDbits.RD5 = 1;
 10041   003838  8A83               	bsf	131,5,c	;volatile
 10042                           
 10043                           ;lcd.c: 26:     } else {
 10044   00383A  EF20  F01C         	goto	l3889
 10045   00383E                     l205:
 10046                           
 10047                           ;lcd.c: 27:         PORTDbits.RD5 = 0;
 10048   00383E  9A83               	bcf	131,5,c	;volatile
 10049   003840                     l3889:
 10050                           
 10051                           ;lcd.c: 29:     if (c & 4) {
 10052   003840  A401               	btfss	LcdOut@c^0,2,c
 10053   003842  EF25  F01C         	goto	u4061
 10054   003846  EF27  F01C         	goto	u4060
 10055   00384A                     u4061:
 10056   00384A  EF2A  F01C         	goto	l207
 10057   00384E                     u4060:
 10058   00384E                     
 10059                           ;lcd.c: 30:         PORTDbits.RD6 = 1;
 10060   00384E  8C83               	bsf	131,6,c	;volatile
 10061                           
 10062                           ;lcd.c: 31:     } else {
 10063   003850  EF2B  F01C         	goto	l3893
 10064   003854                     l207:
 10065                           
 10066                           ;lcd.c: 32:         PORTDbits.RD6 = 0;
 10067   003854  9C83               	bcf	131,6,c	;volatile
 10068   003856                     l3893:
 10069                           
 10070                           ;lcd.c: 34:     if (c & 8) {
 10071   003856  A601               	btfss	LcdOut@c^0,3,c
 10072   003858  EF30  F01C         	goto	u4071
 10073   00385C  EF32  F01C         	goto	u4070
 10074   003860                     u4071:
 10075   003860  EF35  F01C         	goto	l209
 10076   003864                     u4070:
 10077   003864                     
 10078                           ;lcd.c: 35:         PORTDbits.RD7 = 1;
 10079   003864  8E83               	bsf	131,7,c	;volatile
 10080                           
 10081                           ;lcd.c: 36:     } else {
 10082   003866  EF36  F01C         	goto	l211
 10083   00386A                     l209:
 10084                           
 10085                           ;lcd.c: 37:         PORTDbits.RD7 = 0;
 10086   00386A  9E83               	bcf	131,7,c	;volatile
 10087   00386C                     l211:
 10088   00386C  0012               	return		;funcret
 10089   00386E                     __end_of_LcdOut:
 10090                           	callstack 0
 10091                           
 10092 ;; *************** function _isr *****************
 10093 ;; Defined at:
 10094 ;;		line 26 in file "main.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;		None
 10097 ;; Auto vars:     Size  Location     Type
 10098 ;;		None
 10099 ;; Return value:  Size  Location     Type
 10100 ;;                  1    wreg      void 
 10101 ;; Registers used:
 10102 ;;		wreg, status,2, status,0
 10103 ;; Tracked objects:
 10104 ;;		On entry : 0/0
 10105 ;;		On exit  : 0/0
 10106 ;;		Unchanged: 0/0
 10107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10108 ;;      Params:         0       0       0       0       0       0       0
 10109 ;;      Locals:         0       0       0       0       0       0       0
 10110 ;;      Temps:          0       0       0       0       0       0       0
 10111 ;;      Totals:         0       0       0       0       0       0       0
 10112 ;;Total ram usage:        0 bytes
 10113 ;; Hardware stack levels used: 1
 10114 ;; This function calls:
 10115 ;;		Nothing
 10116 ;; This function is called by:
 10117 ;;		Interrupt level 2
 10118 ;; This function uses a non-reentrant model
 10119 ;;
 10120                           
 10121                           	psect	intcode
 10122   000008                     __pintcode:
 10123                           	callstack 0
 10124   000008                     _isr:
 10125                           	callstack 20
 10126                           
 10127                           ;incstack = 0
 10128   000008  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10129   00000A  ED37  F01C         	call	int_func,f	;refresh shadow registers
 10130                           
 10131                           	psect	intcode_body
 10132   00386E                     __pintcode_body:
 10133                           	callstack 20
 10134   00386E                     int_func:
 10135                           	callstack 20
 10136   00386E  0006               	pop		; remove dummy address from shadow register refresh
 10137   003870                     
 10138                           ;main.c: 27:     if (INTCONbits.TMR0IF) {
 10139   003870  A4F2               	btfss	242,2,c	;volatile
 10140   003872  EF3D  F01C         	goto	i2u473_41
 10141   003876  EF3F  F01C         	goto	i2u473_40
 10142   00387A                     i2u473_41:
 10143   00387A  EF60  F01C         	goto	i2l47
 10144   00387E                     i2u473_40:
 10145   00387E                     
 10146                           ;main.c: 29:         TMR0H = 0x66;
 10147   00387E  0E66               	movlw	102
 10148   003880  6ED7               	movwf	215,c	;volatile
 10149                           
 10150                           ;main.c: 30:         TMR0L = 0x5A;
 10151   003882  0E5A               	movlw	90
 10152   003884  6ED6               	movwf	214,c	;volatile
 10153   003886                     
 10154                           ;main.c: 33:         gstTimer1Seg.iContador++;
 10155   003886  0100               	movlb	0	; () banked
 10156   003888  4BFD               	infsnz	_gstTimer1Seg& (0+255),f,b
 10157   00388A  2BFE               	incf	(_gstTimer1Seg+1)& (0+255),f,b
 10158   00388C                     
 10159                           ; BSR set to: 0
 10160                           ;main.c: 34:         if (gstTimer1Seg.iContador == 4) {
 10161   00388C  0E04               	movlw	4
 10162   00388E  19FD               	xorwf	_gstTimer1Seg& (0+255),w,b
 10163   003890  11FE               	iorwf	(_gstTimer1Seg+1)& (0+255),w,b
 10164   003892  A4D8               	btfss	status,2,c
 10165   003894  EF4E  F01C         	goto	i2u474_41
 10166   003898  EF50  F01C         	goto	i2u474_40
 10167   00389C                     i2u474_41:
 10168   00389C  EF5F  F01C         	goto	i2l4507
 10169   0038A0                     i2u474_40:
 10170   0038A0                     
 10171                           ; BSR set to: 0
 10172                           ;main.c: 35:             gstTimer1Seg.fTimerOverflow = ~gstTimer1Seg.fTimerOverflow;
 10173   0038A0  05FF               	decf	(_gstTimer1Seg+2)& (0+255),w,b
 10174   0038A2  A4D8               	btfss	status,2,c
 10175   0038A4  EF56  F01C         	goto	i2u475_41
 10176   0038A8  EF59  F01C         	goto	i2u475_40
 10177   0038AC                     i2u475_41:
 10178   0038AC  0E01               	movlw	1
 10179   0038AE  EF5A  F01C         	goto	i2u476_40
 10180   0038B2                     i2u475_40:
 10181   0038B2  0E00               	movlw	0
 10182   0038B4                     i2u476_40:
 10183   0038B4  6FFF               	movwf	(_gstTimer1Seg+2)& (0+255),b
 10184   0038B6                     
 10185                           ; BSR set to: 0
 10186                           ;main.c: 36:             gstTimer1Seg.iContador = 0;
 10187   0038B6  0E00               	movlw	0
 10188   0038B8  6FFE               	movwf	(_gstTimer1Seg+1)& (0+255),b
 10189   0038BA  0E00               	movlw	0
 10190   0038BC  6FFD               	movwf	_gstTimer1Seg& (0+255),b
 10191   0038BE                     i2l4507:
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;main.c: 39:         INTCONbits.TMR0IF = 0;
 10195   0038BE  94F2               	bcf	242,2,c	;volatile
 10196   0038C0                     i2l47:
 10197   0038C0  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10198   0038C2  0011               	retfie		f
 10199   0038C4                     __end_of_isr:
 10200                           	callstack 0
 10201                           
 10202                           	psect	rparam
 10203   000000                     
 10204                           	psect	temp
 10205   00007E                     btemp:
 10206                           	callstack 0
 10207   00007E                     	ds	1
 10208   000000                     int$flags	set	btemp
 10209   000000                     wtemp8	set	btemp+1
 10210   000000                     ttemp5	set	btemp+1
 10211   000000                     ttemp6	set	btemp+4
 10212   000000                     ttemp7	set	btemp+8
 10213                           
 10214                           	psect	idloc
 10215                           
 10216                           ;Config register IDLOC0 @ 0x200000
 10217                           ;	unspecified, using default values
 10218   200000                     	org	2097152
 10219   200000  FF                 	db	255
 10220                           
 10221                           ;Config register IDLOC1 @ 0x200001
 10222                           ;	unspecified, using default values
 10223   200001                     	org	2097153
 10224   200001  FF                 	db	255
 10225                           
 10226                           ;Config register IDLOC2 @ 0x200002
 10227                           ;	unspecified, using default values
 10228   200002                     	org	2097154
 10229   200002  FF                 	db	255
 10230                           
 10231                           ;Config register IDLOC3 @ 0x200003
 10232                           ;	unspecified, using default values
 10233   200003                     	org	2097155
 10234   200003  FF                 	db	255
 10235                           
 10236                           ;Config register IDLOC4 @ 0x200004
 10237                           ;	unspecified, using default values
 10238   200004                     	org	2097156
 10239   200004  FF                 	db	255
 10240                           
 10241                           ;Config register IDLOC5 @ 0x200005
 10242                           ;	unspecified, using default values
 10243   200005                     	org	2097157
 10244   200005  FF                 	db	255
 10245                           
 10246                           ;Config register IDLOC6 @ 0x200006
 10247                           ;	unspecified, using default values
 10248   200006                     	org	2097158
 10249   200006  FF                 	db	255
 10250                           
 10251                           ;Config register IDLOC7 @ 0x200007
 10252                           ;	unspecified, using default values
 10253   200007                     	org	2097159
 10254   200007  FF                 	db	255
 10255                           
 10256                           	psect	config
 10257                           
 10258                           ; Padding undefined space
 10259   300000                     	org	3145728
 10260   300000  FF                 	db	255
 10261                           
 10262                           ;Config register CONFIG1H @ 0x300001
 10263                           ;	Oscillator Selection bits
 10264                           ;	OSC = XT, XT oscillator
 10265                           ;	Fail-Safe Clock Monitor Enable bit
 10266                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10267                           ;	Internal/External Oscillator Switchover bit
 10268                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10269   300001                     	org	3145729
 10270   300001  01                 	db	1
 10271                           
 10272                           ;Config register CONFIG2L @ 0x300002
 10273                           ;	Power-up Timer Enable bit
 10274                           ;	PWRT = OFF, PWRT disabled
 10275                           ;	Brown-out Reset Enable bits
 10276                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 10277                           ;	Brown Out Reset Voltage bits
 10278                           ;	BORV = 3, Minimum setting
 10279   300002                     	org	3145730
 10280   300002  1F                 	db	31
 10281                           
 10282                           ;Config register CONFIG2H @ 0x300003
 10283                           ;	Watchdog Timer Enable bit
 10284                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10285                           ;	Watchdog Timer Postscale Select bits
 10286                           ;	WDTPS = 32768, 1:32768
 10287   300003                     	org	3145731
 10288   300003  1E                 	db	30
 10289                           
 10290                           ; Padding undefined space
 10291   300004                     	org	3145732
 10292   300004  FF                 	db	255
 10293                           
 10294                           ;Config register CONFIG3H @ 0x300005
 10295                           ;	CCP2 MUX bit
 10296                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10297                           ;	PORTB A/D Enable bit
 10298                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10299                           ;	Low-Power Timer1 Oscillator Enable bit
 10300                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10301                           ;	MCLR Pin Enable bit
 10302                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10303   300005                     	org	3145733
 10304   300005  83                 	db	131
 10305                           
 10306                           ;Config register CONFIG4L @ 0x300006
 10307                           ;	Stack Full/Underflow Reset Enable bit
 10308                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10309                           ;	Single-Supply ICSP Enable bit
 10310                           ;	LVP = ON, Single-Supply ICSP enabled
 10311                           ;	Extended Instruction Set Enable bit
 10312                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10313                           ;	Background Debugger Enable bit
 10314                           ;	DEBUG = 0x1, unprogrammed default
 10315   300006                     	org	3145734
 10316   300006  85                 	db	133
 10317                           
 10318                           ; Padding undefined space
 10319   300007                     	org	3145735
 10320   300007  FF                 	db	255
 10321                           
 10322                           ;Config register CONFIG5L @ 0x300008
 10323                           ;	Code Protection bit
 10324                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 10325                           ;	Code Protection bit
 10326                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 10327                           ;	Code Protection bit
 10328                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 10329                           ;	Code Protection bit
 10330                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 10331   300008                     	org	3145736
 10332   300008  0F                 	db	15
 10333                           
 10334                           ;Config register CONFIG5H @ 0x300009
 10335                           ;	Boot Block Code Protection bit
 10336                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10337                           ;	Data EEPROM Code Protection bit
 10338                           ;	CPD = OFF, Data EEPROM not code-protected
 10339   300009                     	org	3145737
 10340   300009  C0                 	db	192
 10341                           
 10342                           ;Config register CONFIG6L @ 0x30000A
 10343                           ;	Write Protection bit
 10344                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 10345                           ;	Write Protection bit
 10346                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 10347                           ;	Write Protection bit
 10348                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 10349                           ;	Write Protection bit
 10350                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 10351   30000A                     	org	3145738
 10352   30000A  0F                 	db	15
 10353                           
 10354                           ;Config register CONFIG6H @ 0x30000B
 10355                           ;	Configuration Register Write Protection bit
 10356                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10357                           ;	Boot Block Write Protection bit
 10358                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
 10359                           ;	Data EEPROM Write Protection bit
 10360                           ;	WRTD = OFF, Data EEPROM not write-protected
 10361   30000B                     	org	3145739
 10362   30000B  E0                 	db	224
 10363                           
 10364                           ;Config register CONFIG7L @ 0x30000C
 10365                           ;	Table Read Protection bit
 10366                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 10367                           ;	Table Read Protection bit
 10368                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 10369                           ;	Table Read Protection bit
 10370                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 10371                           ;	Table Read Protection bit
 10372                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10373   30000C                     	org	3145740
 10374   30000C  0F                 	db	15
 10375                           
 10376                           ;Config register CONFIG7H @ 0x30000D
 10377                           ;	Boot Block Table Read Protection bit
 10378                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10379   30000D                     	org	3145741
 10380   30000D  40                 	db	64
 10381                           tosu	equ	0xFFF
 10382                           tosh	equ	0xFFE
 10383                           tosl	equ	0xFFD
 10384                           stkptr	equ	0xFFC
 10385                           pclatu	equ	0xFFB
 10386                           pclath	equ	0xFFA
 10387                           pcl	equ	0xFF9
 10388                           tblptru	equ	0xFF8
 10389                           tblptrh	equ	0xFF7
 10390                           tblptrl	equ	0xFF6
 10391                           tablat	equ	0xFF5
 10392                           prodh	equ	0xFF4
 10393                           prodl	equ	0xFF3
 10394                           indf0	equ	0xFEF
 10395                           postinc0	equ	0xFEE
 10396                           postdec0	equ	0xFED
 10397                           preinc0	equ	0xFEC
 10398                           plusw0	equ	0xFEB
 10399                           fsr0h	equ	0xFEA
 10400                           fsr0l	equ	0xFE9
 10401                           wreg	equ	0xFE8
 10402                           indf1	equ	0xFE7
 10403                           postinc1	equ	0xFE6
 10404                           postdec1	equ	0xFE5
 10405                           preinc1	equ	0xFE4
 10406                           plusw1	equ	0xFE3
 10407                           fsr1h	equ	0xFE2
 10408                           fsr1l	equ	0xFE1
 10409                           bsr	equ	0xFE0
 10410                           indf2	equ	0xFDF
 10411                           postinc2	equ	0xFDE
 10412                           postdec2	equ	0xFDD
 10413                           preinc2	equ	0xFDC
 10414                           plusw2	equ	0xFDB
 10415                           fsr2h	equ	0xFDA
 10416                           fsr2l	equ	0xFD9
 10417                           status	equ	0xFD8

Data Sizes:
    Strings     97
    Constant    0
    Data        0
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    124     125
    BANK0           128    125     128
    BANK1           256      0      96
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_11(CODE[4]), STR_8(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_11(CODE[4]), STR_8(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[15]), STR_5(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[15]), STR_5(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[15]), STR_5(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[15]), STR_5(CODE[14]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1096$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK0[11]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[15]), STR_5(CODE[14]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> DispSystemParam@szPercentDutyDisp(BANK0[16]), DispSystemParam@szAdcVoltageDisp(BANK0[16]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    S1009$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1009$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 16
		 -> DispSystemParam@szPercentDutyDisp(BANK0[16]), DispSystemParam@szAdcVoltageDisp(BANK0[16]), 

    memset@s	PTR unsigned char  size(2) Largest target is 16
		 -> DispSystemParam@szPercentDutyDisp(BANK0[16]), DispSystemParam@szAdcVoltageDisp(BANK0[16]), 

    LcdPutStr@str	PTR unsigned char  size(2) Largest target is 16
		 -> DispSystemParam@szPercentDutyDisp(BANK0[16]), DispSystemParam@szAdcVoltageDisp(BANK0[16]), STR_4(CODE[15]), STR_3(CODE[13]), 
		 -> STR_2(CODE[15]), STR_1(CODE[13]), 

    digitalRead@pcPort	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(BITBIGSFRllllll[1]), 

    digitalWrite@pcLat	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllll[1]), 

    pinMode@pcTris	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISB(ABS[1]), TRISC(ABS[1]), 

    sp__memset	PTR void  size(2) Largest target is 16
		 -> DispSystemParam@szPercentDutyDisp(BANK0[16]), DispSystemParam@szAdcVoltageDisp(BANK0[16]), 


Critical Paths under _main in COMRAM

    _main->_setup
    _configOutputs->_digitalWrite
    _configOutputs->_pinMode
    _MsgInicialLcd->_LcdPutStr
    _LcdInit->_LcdCmd
    _LcdClear->_LcdCmd
    _setLedsOn->_digitalWrite
    _readBuzzerState->_digitalRead
    _iPWMSetDuty->___fltol
    _fGetVoltage->___flmul
    _fGetPercentDuty->___flmul
    _changeBuzzerState->_digitalWrite
    _DispSystemParam->_snprintf
    _snprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___flmul
    ___flsub->___flmul
    ___flmul->___fldiv
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->___wmul
    _LcdSetCursor->_LcdCmd
    _LcdCmd->_LcdOut
    _LcdPutStr->_LcdPutChar
    _LcdPutChar->_LcdOut

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_SystemControl
    _setup->_DispSystemParam
    _SystemControl->_DispSystemParam
    _DispSystemParam->_snprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   81318
                      _SystemControl
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                               10    10      0   31522
                                            116 COMRAM     8     8      0
                 _ConfigTimerZeroISR
                    _DispSystemParam
                      _MsgInicialLcd
                      _configOutputs
                         _iConfigADC
                         _iConfigPWM
 ---------------------------------------------------------------------------------
 (2) _iConfigPWM                                           4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _iConfigADC                                           4     2      2     164
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _configOutputs                                        2     2      0    1679
                                              7 COMRAM     2     2      0
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              7     3      4     566
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _MsgInicialLcd                                        2     2      0    1781
                                             10 COMRAM     2     2      0
                           _LcdClear
                            _LcdInit
                          _LcdPutStr
                       _LcdSetCursor
 ---------------------------------------------------------------------------------
 (3) _LcdInit                                              1     1      0     110
                                              3 COMRAM     1     1      0
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (3) _LcdClear                                             0     0      0     110
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (2) _ConfigTimerZeroISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SystemControl                                       16    16      0   49796
                                            111 BANK0     14    14      0
                    _DispSystemParam
                            ___awdiv
                  _changeBuzzerState
                    _fGetPercentDuty
                        _fGetVoltage
                        _iAnalogRead
                        _iPWMSetDuty
                    _readBuzzerState
                          _setLedsOn
 ---------------------------------------------------------------------------------
 (2) _setLedsOn                                            6     6      0    1113
                                              7 COMRAM     6     6      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _readBuzzerState                                      0     0      0     196
                        _digitalRead
 ---------------------------------------------------------------------------------
 (3) _digitalRead                                          6     3      3     196
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _iPWMSetDuty                                          6     2      4    6769
                                             74 COMRAM     6     2      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _iAnalogRead                                          4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _fGetVoltage                                          4     0      4    6071
                                             64 COMRAM     4     0      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _fGetPercentDuty                                      4     0      4    6071
                                             64 COMRAM     4     0      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _changeBuzzerState                                    1     1      0    1044
                                              7 COMRAM     1     1      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         7     3      4    1022
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _DispSystemParam                                     40    32      8   27685
                                             71 BANK0     40    32      8
                          _LcdPutStr
                       _LcdSetCursor
                             _memset
                           _snprintf
 ---------------------------------------------------------------------------------
 (3) _snprintf                                            30    20     10   24421
                                            113 COMRAM     3     3      0
                                             44 BANK0     27    17     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   23515
                                            105 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           24    18      6   23151
                                             85 COMRAM    20    14      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              54    47      7   20083
                                             76 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2969
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     533
                                             64 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2889
                                             64 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    2960
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     790
                                             64 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2463
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 9     7      2    1080
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1175
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (3) _LcdSetCursor                                         5     4      1     836
                                              3 COMRAM     5     4      1
                             _LcdCmd
 ---------------------------------------------------------------------------------
 (4) _LcdCmd                                               2     2      0     110
                                              1 COMRAM     2     2      0
                             _LcdOut
 ---------------------------------------------------------------------------------
 (3) _LcdPutStr                                            6     4      2     725
                                              4 COMRAM     6     4      2
                         _LcdPutChar
 ---------------------------------------------------------------------------------
 (4) _LcdPutChar                                           3     3      0     178
                                              1 COMRAM     3     3      0
                             _LcdOut
 ---------------------------------------------------------------------------------
 (5) _LcdOut                                               1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isr                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SystemControl
     _DispSystemParam
       _LcdPutStr
         _LcdPutChar
           _LcdOut
       _LcdSetCursor
         _LcdCmd
           _LcdOut
       _memset
       _snprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _efgtoa
               ___fladd
               ___fldiv
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___fldiv (ARG)
                   ___xxtofl (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
                 ___fldiv (ARG)
                 ___flmul (ARG)
                 ___xxtofl (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _labs
               _memcpy
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
               _strcpy
             _fputc
             _isdigit
     ___awdiv
     _changeBuzzerState
       _digitalWrite
     _fGetPercentDuty
       ___fldiv
       ___flmul
       ___xxtofl
     _fGetVoltage
       ___fldiv
       ___flmul
       ___xxtofl
     _iAnalogRead
     _iPWMSetDuty
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
     _readBuzzerState
       _digitalRead
     _setLedsOn
       _digitalWrite
   _setup
     _ConfigTimerZeroISR
     _DispSystemParam
     _MsgInicialLcd
       _LcdClear
         _LcdCmd
       _LcdInit
         _LcdCmd
       _LcdPutStr
       _LcdSetCursor
     _configOutputs
       _digitalWrite
       _pinMode
     _iConfigADC
     _iConfigPWM

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      60       7       37.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7D      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7C      7D       1       99.2%
BITBIGSFRlllhlh     23      0       0      22        0.0%
BITBIGSFRlh         1A      0       0      17        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhhh       8      0       0      18        0.0%
BITBIGSFRllllh       6      0       0      23        0.0%
BITBIGSFRlllllh      5      0       0      24        0.0%
BITBIGSFRllhhl       5      0       0      19        0.0%
BITBIGSFRllllll      2      0       0      25        0.0%
BITBIGSFRlllhhh      1      0       0      20        0.0%
BITBIGSFRlllhhl      1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15D      26        0.0%
DATA                 0      0     15D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 28 23:38:59 2023

                    ___fldiv@aexp 0027                      ___fldiv@bexp 0026  
                    ___fldiv@sign 001F                                l50 3476  
                              l53 34E8                                l56 30F0  
                              l74 3552                                l59 2FB4  
                              l68 268E                                l69 270A  
                              l79 3BE0                      ___awdiv@sign 0006  
             ___wmul@multiplicand 0003                               l101 3350  
                             l110 374A                               l111 3726  
                             l104 338A                               l211 386C  
                             l203 3828                               l220 3BF8  
                             l205 383E                               l214 3B9C  
                             l207 3854                               l209 386A  
                             l217 3404                               l226 361E  
                             l235 3208                               l139 328A  
                             l148 2C66                               l172 3A60  
                             l164 3682                               l229 3AD0  
                             l181 36E6                               l190 3BDA  
                             l246 3BC8                               l249 3B58  
                             l169 37AE                               l177 330C  
                             l514 2B22                               l523 3A98  
                             l187 3BB4                               l508 305E  
                             l519 2B68                               l480 2EF2  
                             l546 2A64                               l803 144A  
                             l804 1438                               l831 1CF4  
                             l911 237C                               l904 22E4  
                             l833 1B54                               l842 1B9A  
                             l819 3958                               l907 2440  
                             l924 25B6                               l844 1C12  
                             l836 1B18                               l940 295E  
                             l845 1C00                               l870 17EC  
                             l918 23D8                               l863 15F6  
                             l880 191C                               l872 1864  
                             l873 1852                               l777 1260  
                             l945 2946                               l794 137A  
                             l786 1530                               l778 124E  
                             l867 195A                               l779 1214  
                             l985 3114                               l989 3182  
                             _PR2 000FCB                               _pad 30F2  
                             _isr 0008                               wreg 000FE8  
                    ___flmul@aexp 0039                      ___flmul@bexp 003A  
                    ___flmul@sign 0034                      ___flmul@temp 003F  
                    ___flmul@prod 003B                      ___fltol@exp1 004A  
                            l1000 1070                              l1003 09FE  
                            l1005 0844                              l1112 2854  
                            l1120 228C                              l1033 0E4A  
                            l1130 3B32                              l1123 21D0  
                            l1109 284C                              l3001 119E  
                            l1145 35A8                              l1138 399E  
                            l1154 3912                              l3003 11A2  
                            l3011 11B2                              l1075 3808  
                            l1148 35B8                              l1068 207A  
                            l1076 3810                              l3021 1222  
                            l3013 11B6                              l3005 11A6  
                            l1086 2D64                              l1166 2E2E  
                            l1174 39E2                              l3103 145A  
                            l3111 14B0                              l3031 124C  
                            l3023 122E                              l3015 11E0  
                            l3007 11AA                              l1183 3A22  
                            l3201 1A4E                              l3121 1502  
                            l3113 14C0                              l3105 1466  
                            l3041 12A2                              l3033 126E  
                            l3025 1232                              l3017 11FC  
                            l3009 11AE                              l1177 3BFA  
                            l4011 3B80                              l3211 1A7E  
                            l3203 1A56                              l3131 1520  
                            l3123 1508                              l3115 14D0  
                            l3107 1474                              l3051 12DC  
                            l3043 12B0                              l3035 127E  
                            l3027 1240                              l3019 120C  
                            l4021 3A9C                              l4101 31CC  
                            l4013 3B82                              l3221 1ABC  
                            l3213 1A7E                              l3205 1A5A  
                            l3301 154C                              l3125 150A  
                            l3117 14F0                              l3109 14AE  
                            l3061 1348                              l3053 12DE  
                            l3045 12BE                              l3029 1242  
                            l3141 39C2                              l1189 3B06  
                            l4031 3ABC                              l4023 3AA8  
                            l4015 3B88                              l4111 246C  
                            l3231 1B08                              l3223 1ACC  
                            l3311 1584                              l3303 154E  
                            l3127 1510                              l3119 14F4  
                            l3071 13A0                              l3063 134A  
                            l3055 12E8                              l3047 12CA  
                            l3039 1292                              l3135 39A0  
                            l3143 3AD2                              l4103 3BEC  
                            l4033 3ABE                              l4025 3AAA  
                            l4017 3B8A                              l4121 2514  
                            l4105 2442                              l3153 3B34  
                            l3241 1B52                              l3233 1B16  
                            l3225 1ADC                              l3217 1A92  
                            l3209 1A6E                              l3161 1968  
                            l3401 188E                              l3321 15B0  
                            l3313 1594                              l3305 155E  
                            l3129 151E                              l3081 13CE  
                            l3065 135A                              l3049 12CE  
                            l3057 12EE                              l3137 39AC  
                            l3145 3ADE                              l4041 37B0  
                            l4201 2366                              l4035 3AC4  
                            l4027 3AB2                              l4019 3B9A  
                            l4131 259A                              l4123 2540  
                            l4115 24A2                              l3155 3B50  
                            l3251 1B98                              l3243 1B64  
                            l3235 1B22                              l3227 1AE4  
                            l3219 1AAC                              l3171 19A8  
                            l3163 1976                              l3411 1904  
                            l3403 18B8                              l3331 1606  
                            l3323 15C0                              l3315 159A  
                            l3307 156E                              l3083 13DC  
                            l3075 13B4                              l3091 13FA  
                            l3059 1314                              l3067 136A  
                            l3139 39BE                              l3147 3AE2  
                            l4043 37B8                              l4211 23E6  
                            l4203 2372                              l4051 3394  
                            l4037 3AC6                              l4029 3AB4  
                            l4133 25A0                              l4117 24FA  
                            l4109 2460                              l3261 1BF8  
                            l3245 1B7A                              l3253 1BAA  
                            l3237 1B40                              l3229 1AF4  
                            l3181 19CE                              l3173 19AA  
                            l3165 1978                              l3413 1920  
                            l3421 1946                              l3405 18BC  
                            l3341 1640                              l3333 1616  
                            l3325 15D0                              l3317 15A0  
                            l3309 157E                              l3085 13E4  
                            l3077 13BE                              l3069 1390  
                            l3093 1408                              l3501 29F0  
                            l3149 3AFA                              l4045 37C6  
                            l4221 242E                              l4213 23E8  
                            l4205 23AE                              l4301 2C26  
                            l4061 33C4                              l4053 339A  
                            l4039 3ACE                              l4135 25A4  
                            l4127 255A                              l3271 1C66  
                            l3255 1BB8                              l3247 1B80  
                            l3239 1B42                              l3191 1A0E  
                            l3183 19DC                              l3167 1988  
                            l3175 19B2                              l3159 195C  
                            l3423 194A                              l3415 1930  
                            l3407 18D6                              l3351 1692  
                            l3343 1656                              l3327 15E0  
                            l3319 15AE                              l3095 140C  
                            l3087 13E8                              l3079 13CC  
                            l3511 2A18                              l3503 29FA  
                            l4047 37EC                              l4151 28C6  
                            l4143 2878                              l4223 2430  
                            l4215 23EC                              l4207 23BA  
                            l4231 3478                              l4303 2C52  
                            l4071 33EC                              l4063 33D4  
                            l4055 33A8                              l4081 35CC  
                            l4129 258E                              l3281 1CD0  
                            l3265 1C22                              l3273 1C6A  
                            l3257 1BBC                              l3249 1B8A  
                            l3193 1A10                              l3185 19DE  
                            l3177 19C2                              l3169 1998  
                            l3441 3032                              l3433 2FB6  
                            l3417 193E                              l3409 18EA  
                            l3361 16D8                              l3353 16A0  
                            l3345 1662                              l3337 162A  
                            l3329 15E6                              l3097 141A  
                            l3089 13F8                              l3513 2A24  
                            l3505 2A04                              l3601 38D8  
                            l4161 294E                              l4153 28EA  
                            l4145 289E                              l4137 2856  
                            l4217 2410                              l4209 23C8  
                            l4321 369A                              l4401 3BC4  
                            l4073 33F2                              l4065 33DA  
                            l4057 33AE                              l4049 338C  
                            l4241 3090                              l4091 3612  
                            l4083 35DE                              l3611 3B08  
                            l3283 1CD4                              l3275 1C84  
                            l3267 1C2E                              l3259 1BCA  
                            l3187 19EE                              l3195 1A18  
                            l3179 19C8                              l3443 3056  
                            l3435 2FE4                              l3451 2A94  
                            l3419 1940                              l3371 1746  
                            l3363 16F2                              l3355 16AC  
                            l3347 167A                              l3339 1636  
                            l3099 1430                              l3427 3914  
                            l3515 2A34                              l3603 38E4  
                            l3531 3134                              l3523 30F2  
                            l4155 28FE                              l4147 28AA  
                            l4139 286A                              l4411 2E4A  
                            l4171 374C                              l4219 2420  
                            l4227 3406                              l4307 2C5E  
                            l4323 36AA                              l4315 3686  
                            l4403 3BC6                              l4075 33F8  
                            l4067 33E0                              l4059 33BE  
                            l4251 30CA                              l4243 30A6  
                            l4235 3060                              l4093 3618  
                            l4085 35E4                              l3621 3994  
                            l3285 1CE2                              l3277 1C9A  
                            l3269 1C3C                              l3197 1A28  
                            l3189 19FE                              l3445 305C  
                            l3437 2FF4                              l3461 2B02  
                            l3453 2AA4                              l3381 17DC  
                            l3373 1770                              l3365 1702  
                            l3357 16BC                              l3349 1686  
                            l3429 3924                              l3517 2A44  
                            l3541 2C68                              l3605 38E8  
                            l3533 3138                              l3525 3100  
                            l3701 08FE                              l4157 290C  
                            l4149 28B6                              l4261 2F5A  
                            l4421 2E70                              l4413 2E4E  
                            l4405 2E30                              l4173 375C  
                            l4333 3BA0                              l4181 2290  
                            l4325 36BE                              l4317 3686  
                            l4077 33FE                              l4069 33E6  
                            l4253 30D6                              l4245 30AA  
                            l4237 306E                              l4165 3620  
                            l4341 329C                              l4095 3184  
                            l4087 35EE                              l4079 35BC  
                            l3623 3998                              l3615 395A  
                            l3287 1CE8                              l3279 1CB4  
                            l3199 1A3E                              l3439 3022  
                            l3463 2B10                              l3455 2AD2  
                            l3391 181C                              l3383 17EA  
                            l3375 17A6                              l3367 171E  
                            l3359 16C8                              l3471 3A62  
                            l3519 2A54                              l3543 2C88  
                            l3607 38F4                              l3535 3156  
                            l3527 310C                              l3703 093C  
                            l3631 067A                              l4159 2936  
                            l4263 2F88                              l4431 2EA6  
                            l4423 2E82                              l4415 2E5C  
                            l4407 2E34                              l4175 3784  
                            l4183 22A0                              l4271 36E8  
                            l4327 36C2                              l4255 30EC  
                            l4247 30B4                              l4239 307A  
                            l4167 3630                              l4343 32C4  
                            l4335 328C                              l4351 3328  
                            l4097 3198                              l4089 3600  
                            l3617 395E                              l3289 1CEA  
                            l3465 2B60                              l3457 2AE2  
                            l3449 2A66                              l3393 184A  
                            l3385 17FC                              l3377 17B4  
                            l3369 172A                              l3297 1532  
                            l3473 3A78                              l3481 2976  
                            l3545 2CC6                              l3553 2D06  
                            l3609 38F8                              l2921 2D78  
                            l3537 316A                              l3529 3120  
                            l3801 0E8C                              l3721 0A2C  
                            l3705 0950                              l3713 09CC  
                            l3641 06C2                              l3633 0688  
                            l4265 2F92                              l4257 2EF4  
                            l4433 2EBC                              l4425 2E8A  
                            l4441 2ED2                              l4417 2E64  
                            l4409 2E42                              l4193 231E  
                            l4185 22AE                              l4281 3724  
                            l4273 36F6                              l4177 3A24  
                            l4329 3BCA                              l4249 30C0  
                            l4169 365E                              l4345 32C8  
                            l4361 3382                              l4353 3344  
                            l4099 31C8                              l3619 3972  
                            l3467 2B66                              l3459 2AF0  
                            l3387 180A                              l3379 17D2  
                            l3299 153E                              l3475 3A88  
                            l3491 29C6                              l3555 2D18  
                            l3547 2CEE                              l3571 207C  
                            l2923 2D8A                              l3563 39E4  
                            l3811 0EBE                              l3803 0E9C  
                            l3731 0A72                              l3723 0A34  
                            l3715 0A06                              l3707 0984  
                            l3643 06D2                              l3651 06FA  
                            l3635 068C                              l3627 0664  
                            l4267 2F9E                              l4259 2F2C  
                            l4443 2EE2                              l4435 2EC4  
                            l4427 2E92                              l4419 2E68  
                            l4195 2326                              l4187 22F4  
                            l4283 3734                              l4275 3712  
                            l4291 2C02                              l4451 25E2  
                            l4347 32E4                              l4371 321E  
                            l3397 1874                              l3389 180E  
                            l2941 109E                              l2933 1072  
                            l3493 29CA                              l3485 298A  
                            l3549 2CFA                              l3573 209C  
                            l2925 2D94                              l3565 39F4  
                            l3821 0F66                              l3813 0ED0  
                            l3805 0EA0                              l3741 0AB8  
                            l3733 0A84                              l3725 0A3A  
                            l3717 0A16                              l3709 098C  
                            l3661 0744                              l3653 0720  
                            l3645 06E2                              l3637 06B0  
                            l3629 066A                              l3901 1D28  
                            l4269 2FA8                              l4445 2EEA  
                            l4437 2EC6                              l4429 2EA0  
                            l4197 2332                              l4189 230A  
                            l4293 2C0E                              l4461 2648  
                            l4453 25F6                              l4357 3352  
                            l4349 330E                              l4381 325A  
                            l4365 320A                              l4509 3BDC  
                            ?_pad 0011                              l3399 1880  
                            l2951 10D8                              l2943 10AE  
                            l2935 107E                              l3495 29D8  
                            l3487 29B4                              l3479 2960  
                            l3559 2D5C                              l3591 2244  
                            l3583 2184                              l3575 20F2  
                            l3567 3554                              l2927 2DB2  
                            l2919 2D66                              l3831 0FB4  
                            l3823 0F6E                              l3815 0ED4  
                            l3807 0EA6                              l3751 0BCC  
                            l3743 0B1C                              l3727 0A4C  
                            l3735 0A8C                              l3719 0A22  
                            l3671 07B4                              l3663 075C  
                            l3655 0732                              l3647 06EE  
                            l3639 06BA                              l3911 1D74  
                            l3903 1D36                              l4439 2ECC  
                            l4199 2364                              l4279 371E  
                            l4295 2C1A                              l4287 2B6A  
                            l4471 26C4                              l4463 264E  
                            l4359 337E                              l4383 3278  
                            l4367 320E                              l2961 1106  
                            l2953 10DE                              l2945 10BE  
                            l2937 108C                              l3489 29B6  
                            l3593 226C                              l3585 21C0  
                            l3577 2106                              l3569 3572  
                            l2929 2DE8                              l3841 102A  
                            l3833 0FC4                              l3817 0EDA  
                            l3809 0EAC                              l3825 0F72  
                            l3761 0C8A                              l3753 0C00  
                            l3745 0B74                              l3737 0A94  
                            l3729 0A5A                              l3673 07C6  
                            l3665 0766                              l3657 0736  
                            l3649 06F6                              l3921 1E00  
                            l3913 1D98                              l3905 1D3A  
                            l4289 2B82                              l4473 26E0  
                            l4465 2664                              l4457 260A  
                            l4449 25B8                              l4385 327C  
                            l4721 3240                              l4369 3216  
                            l4377 322A                              l4481 350E  
                            l4731 27A2                              l3851 2720  
                            l2971 113A                              l2963 1108  
                            l2955 10F0                              l2947 10C0  
                            l2939 108E                              l3595 227C  
                            l3579 2114                              l3587 21F4  
                            l3843 1040                              l3835 0FF4  
                            l3827 0F90                              l3819 0F32  
                            l3771 0D5E                              l3763 0C9A  
                            l3755 0C32                              l3747 0BA8  
                            l3739 0AA4                              l3675 07CA  
                            l3659 073C                              l3931 1E6A  
                            l3915 1DD2                              l3907 1D5E  
                            l3923 1E38                              l4723 2C3C  
                            l4475 2704                              l4467 2670  
                            l4459 2626                              l4387 3280  
                            l4379 3256                              l4491 352A  
                            l3861 277C                              l2981 1176  
                            l2965 1118                              l2973 1142  
                            l2957 10F2                              l2949 10C8  
                            l3589 2230                              l3845 1048  
                            l3837 1002                              l3829 0FAC  
                            l3781 0D94                              l3773 0D72  
                            l3765 0CCE                              l3757 0C48  
                            l3749 0BAE                              l3693 0854  
                            l3677 07D0                              l3669 078E  
                            l3941 1EF8                              l4725 1E86  
                            l3925 1E48                              l3917 1DF2  
                            l3909 1D66                              l4469 26A8  
                            l4397 3BB6                              l4389 3282  
                            l4493 354E                              l4485 351A  
                            l4477 34EA                              l3871 27EE  
                            l3863 2784                              l3855 2724  
                            l2991 118A                              l2983 117A  
                            l2975 1152                              l2967 1128  
                            l2959 10F8                              l3599 38C4  
                            l3839 101A                              l3791 0E5C  
                            l3783 0D9C                              l3767 0D24  
                            l3775 0D76                              l3759 0C7A  
                            l3695 085A                              l3679 07D8  
                            l3687 07F4                              l4727 1F40  
                            l3927 1E5A                              l3935 1E72  
                            l4399 3BC2                              l4479 350A  
                            l3881 3814                              l3873 281E  
                            l3865 27B8                              l3857 2740  
                            l3849 270C                              l2993 118E  
                            l2985 117E                              l2977 1164  
                            l2969 1138                              l3793 0E6A  
                            l3785 0DA8                              l3777 0D86  
                            l3769 0D2A                              l3697 088E  
                            l3689 080E                              l3961 200A  
                            l4729 1FCA                              l3945 1F2C  
                            l3929 1E62                              l3937 1EA4  
                            l4489 3526                              l3891 384E  
                            l3883 3822                              l3875 2830  
                            l3859 2774                              l2995 1192  
                            l2987 1182                              l2979 1172  
                            l3795 0E7A                              l3787 0E20  
                            l3779 0D8E                              l3699 08CC  
                            l3963 201E                              l3955 1FAC  
                            l3947 1F56                              l3939 1EC4  
                            l3893 3856                              l3885 382A  
                            l2997 1196                              l2989 1186  
                            l3797 0E7E                              l3789 0E40  
                            l3949 1F76                              l3957 1FD8  
                            l3973 2044                              l3895 3864  
                            l3887 3838                              l2999 119A  
                            l3799 0E84                              l3975 2068  
                            l3959 1FFC                              l3967 202A  
                            l3889 3840                              l3969 2038  
                            l3897 1CF6                              l3899 1D1A  
                            ?_isr 0001                              _ADON 007E10  
                            STR_1 063C                              STR_2 061F  
                            STR_3 0649                              STR_4 0610  
                            STR_5 062E                              STR_6 0601  
                            STR_7 065E                              STR_8 0656  
                            u3000 1BF8                              u3001 1BF4  
                            u3010 1C0E                              u3011 1C0A  
                            u3020 1C22                              u3100 15AE  
                            u3021 1C1E                              u3101 15AA  
                            u3030 1C3C                              u3110 15C0  
                            _LATB 000F8A                              u3031 1C38  
                            u3111 15BC                              _LATC 000F8B  
                            u4000 2740                              u3040 1C84  
                            u3200 1860                              u3120 15D0  
                            u2400 2D8A                              u4001 273C  
                            u3041 1C80                              u3201 185C  
                            u3121 15CC                              u2401 2D86  
                            u4010 2770                              u3050 1CB4  
                            u3210 1874                              u3130 1606  
                            u2410 2DB2                              u4011 276C  
                            u3051 1CB0                              u3211 1870  
                            u3131 1602                              u2411 2DAE  
                            u4020 281E                              u3060 1CE2  
                            u3300 2AD2                              u3220 188E  
                            u3140 1616                              u2500 1164  
                            u2420 2DE8                              u4100 1D98  
                            u4021 281A                              u3061 1CDE  
                            u3301 2ACE                              u3221 188A  
                            u3141 1612                              u2501 1160  
                            u2421 2DE4                              u4101 1D94  
                            u4030 2830                              u3310 2AF0  
                            u3230 18D6                              u3150 1790  
                            u3070 154C                              u2510 1172  
                            u2430 108C                              u4110 1E38  
                            u4031 282C                              u3311 2AEC  
                            u3231 18D2                              u3071 1548  
                            u2511 116E                              u2431 1088  
                            u4111 1E34                              u4040 3822  
                            u4200 245C                              u3320 2B10  
                            u3240 1904                              u3160 17EA  
                            u3080 155E                              u2600 12B0  
                            u2520 11E0                              u2440 109E  
                            u3400 2A34                              u4120 1EC0  
                            u4041 381E                              u4201 2458  
                            u3321 2B0C                              u3241 1900  
                            u3161 17E6                              u3081 155A  
                            u2601 12AC                              u2521 11DC  
                            u2441 109A                              u3401 2A30  
                            u4121 1EBC                              u4050 3838  
                            u4210 249E                              u3330 2B60  
                            u3250 193E                              u3170 180A  
                            u3090 156E                              u2610 12BE  
                            u2530 11F8                              u2450 10AE  
                            u3410 2A44                              u4130 1FFC  
                            u4051 3834                              u4211 249A  
                            u3331 2B5C                              u3251 193A  
                            u3171 1806                              u3155 1786  
                            u3091 156A                              u2611 12BA  
                            u2531 11F2                              u2451 10AA  
                            u3411 2A40                              u4131 1FF8  
                            u4060 384E                              u4220 2510  
                            u3260 2FE4                              u3180 181C  
                            u3340 3A78                              u2700 1408  
                            u2620 12DC                              u2540 11FA  
                            u2460 10F0                              u3500 2D54  
                            u3420 3100                              u4140 3808  
                            u4300 3630                              u4061 384A  
                            u4221 250C                              u3261 2FE0  
                            u3181 1818                              u3341 3A74  
                            u2701 1404                              u2621 12D8  
                            u2461 10EC                              u3421 30FC  
                            u4141 3804                              u4301 362C  
                            u4070 3864                              u4150 35CC  
                            u4230 2556                              u3270 3022  
                            u3190 184A                              u2710 141A  
                            u2630 1314                              u2550 1222  
                            u2470 1106                              u3350 2976  
                            u2390 2D78                              u3430 3156  
                            u3510 3A22                              u4071 3860  
                            u4151 35C8                              u4231 2552  
                            u3271 301E                              u3191 1846  
                            u2711 1416                              u2631 1310  
                            u2551 121E                              u2471 1102  
                            u3351 2972                              u2391 2D74  
                            u3431 3152                              u3511 3A1E  
                            u4160 3600                              u4240 25B6  
                            u3280 3056                              u2800 1502  
                            u2720 1430                              u2640 135A  
                            u2560 1240                              u2480 1118  
                            u3360 29AA                              u3440 2CA8  
                            u3600 2214                              u3520 3572  
                            u4080 1D1A                              u4400 22AE  
                            u4161 35FC                              u4241 25B2  
                            u3281 3052                              u2801 14FE  
                            u2721 142C                              u2641 1356  
                            u2561 123C                              u2481 1114  
                            u3521 356E                              u4081 1D16  
                            u4401 22AA                              u4170 31C4  
                            u3290 2A94                              u2810 151E  
                            u2730 1446                              u2650 1390  
                            u2570 1260                              u2490 1128  
                            u3370 29D8                              u3450 2CC6  
                            u3610 2230                              u3530 20C4  
                            u4090 1D5E                              u4250 286A  
                            u4330 375C                              u4410 230A  
                            u4314 3642                              u3291 2A90  
                            u2811 151A                              u2731 1442  
                            u2651 138C                              u2571 125C  
                            u2491 1124                              u3371 29D4  
                            u3451 2CC2                              u3611 222C  
                            u4091 1D5A                              u4251 2866  
                            u4331 3758                              u4411 2306  
                            u4315 363E                              u4180 31F8  
                            u2900 1A3E                              u2740 145A  
                            u2660 13A0                              u2580 126E  
                            u3380 29EC                              u3460 2CEE  
                            u3620 226C                              u3540 20F2  
                            u2820 39E2                              u3700 06E2  
                            u4260 289E                              u4420 2360  
                            u4500 3712                              u4324 3670  
                            u2901 1A3A                              u2741 1456  
                            u2661 139C                              u2581 126A  
                            u3381 29E8                              u3365 29A0  
                            u3461 2CEA                              u3445 2C9E  
                            u3621 2268                              u3605 220A  
                            u3541 20EE                              u2821 39DE  
                            u3701 06DE                              u4261 289A  
                            u4421 235C                              u4501 370E  
                            u4325 366C                              u4190 3208  
                            u2910 1A7E                              u2750 1474  
                            u2670 13CC                              u2590 127E  
                            u3390 2A14                              u3470 2D18  
                            u3550 2114                              u3630 3912  
                            u2830 3AFA                              u3710 0720  
                            u4270 28FE                              u4430 23AA  
                            u4510 3734                              u4191 3204  
                            u2911 1A7A                              u2751 1470  
                            u2671 13C8                              u2591 127A  
                            u3391 2A10                              u3471 2D14  
                            u3551 2110                              u3535 20BA  
                            u3631 390E                              u2831 3AF6  
                            u3711 071C                              u4271 28FA  
                            u4431 23A6                              u4511 3730  
                            u3640 3B2C                              u2920 1AF4  
                            u2840 1976                              u2760 14AE  
                            u2680 13DC                              u3800 09FE  
                            u3720 0732                              u4280 290C  
                            u4600 2E42                              u4344 376E  
                            u4440 23C8                              u4520 2B82  
                            u4177 31BA                              u3641 3B26  
                            u2921 1AF0                              u2841 1972  
                            u2761 14AA                              u2681 13D8  
                            u3801 09FA                              u3721 072E  
                            u4281 2908                              u4601 2E3E  
                            u4345 376A                              u4441 23C4  
                            u4521 2B7E                              u3650 3B2E  
                            u2930 1B16                              u2850 1988  
                            u2770 14C0                              u2690 13F8  
                            u3490 2D52                              u3570 2180  
                            u3810 0A16                              u3730 07B4  
                            u4290 2936                              u4610 2E5C  
                            u4354 3796                              u4450 23D8  
                            u4370 3A5E                              u4530 3696  
                            u4187 31EE                              u2931 1B12  
                            u2851 1984                              u2771 14BC  
                            u2691 13F4                              u3491 2D4C  
                            u3571 217C                              u3811 0A12  
                            u3731 07B0                              u4291 2932  
                            u4611 2E58                              u4355 3792  
                            u4451 23D4                              u4371 3A58  
                            u4531 3692                              u3660 3972  
                            u2940 1B40                              u2860 1998  
                            u2780 14D0                              u3580 21A4  
                            u3900 0D72                              u3820 0A4C  
                            u3740 07C6                              u4620 2E82  
                            u4460 23E6                              u4380 3A60  
                            u4364 3A42                              u4540 36E6  
                            u4700 2688                              u3661 396E  
                            u2941 1B3C                              u2861 1994  
                            u2781 14CC                              u3485 2D2A  
                            u3565 2128                              u3901 0D6E  
                            u3821 0A48                              u3741 07C2  
                            u4621 2E7E                              u4461 23E2  
                            u4365 3A3E                              u4541 36E2  
                            u3670 3994                              u2950 1B64  
                            u2870 19DC                              u2790 14F0  
                            u3590 21C0                              u3566 2132  
                            u3910 0E20                              u3830 0A5A  
                            u3750 0840                              u4630 2EA0  
                            u4470 2420                              u4390 22A0  
                            u4710 26A2                              u4550 32E4  
                            u3671 3990                              u2951 1B60  
                            u2871 19D8                              u2791 14EC  
                            u3591 21BC                              u3567 2142  
                            u3911 0E1C                              u3831 0A56  
                            u3751 083C                              u4631 2E9C  
                            u4471 241C                              u4391 229C  
                            u4711 269C                              u4551 32E0  
                            u2960 1B7A                              u2880 19EE  
                            u3920 0E5C                              u3840 0A84  
                            u3760 08CC                              u3680 0688  
                            u4640 2EBC                              u4480 242E  
                            u4720 26A4                              u4560 3328  
                            u2961 1B76                              u2881 19EA  
                            u3585 219A                              u3921 0E58  
                            u3841 0A80                              u3761 08C8  
                            u3681 0684                              u4641 2EB8  
                            u4481 242A                              u4561 3324  
                            u2970 1B98                              u2890 19FE  
                            u3930 0E6A                              u3850 0BCC  
                            u3770 08FE                              u3690 06D2  
                            u4650 2EE2                              u4490 36F6  
                            u4570 3344                              u2971 1B94  
                            u2891 19FA                              u3931 0E66  
                            u3851 0BC8                              u3771 08FA  
                            u3691 06CE                              u4651 2EDE  
                            u4491 36F2                              u4571 3340  
                            u2980 1BB8                              u3940 0EBE  
                            u3860 0C32                              u3780 093C  
                            u4660 25E2                              u2981 1BB4  
                            u3941 0EBA                              u3861 0C2E  
                            u3781 0938                              u4661 25DE  
                            u2990 1BCA                              u3950 0F90  
                            u3870 0C7A                              u3790 09C8  
                            u4670 2626                              u2991 1BC6  
                            u3951 0F8C                              u3871 0C76  
                            u3791 09C4                              u4671 2622  
                            u4807 33B4                              u3960 0FAC  
                            u3880 0C8A                              u4680 2664  
                            u4584 3374                              u3961 0FA8  
                            u3881 0C86                              u4681 2660  
                            u4817 33CA                              u4585 3370  
                            u3970 1014                              u3890 0D24  
                            u4690 2686                              u4594 326C  
                            u4827 3B90                              u3971 100E  
                            u3891 0D20                              u4691 2680  
                            u4595 3268                              u3980 1016  
                            u4837 3AB6                              u3990 102A  
                            i2l47 38C0                              u4847 3AC8  
                            u3991 1026                              u4777 309A  
                            u4787 30E0                              u4797 33A0  
                            _TMR2 000FCC                   _DispSystemParam 2EF4  
                            _dbuf 0110                              _labs 3554  
                            _atoi 270C                              _main 3BDC  
                            _prec 010C                              _nout 0108  
                            pad@i 0018                              pad@p 0015  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 001A  
                            fsr2l 000FD9                              btemp 007E  
                   ___fpclassifyf 2C68                              prodh 000FF4  
                            prodl 000FF3                     pinMode@pcTris 0001  
                            start 000E                   ___fldiv@new_exp 0020  
                 __end_of_LcdInit 3406                   _readBuzzerState 3BCA  
                    ___param_bank 000000              __end_of_LcdSetCursor 3620  
                           ??_pad 0017                             ??_isr 0001  
                      _LcdPutChar 3A9A                     ___fltol@sign1 0049  
                           ?_labs 0001                             ?_atoi 0007  
                 __end_of___fladd 1532                             ?_main 0001  
                 __end_of___fldiv 1CF6                   __end_of___awdiv 2EF4  
                 __end_of___flneg 3A9A                             STR_11 065A  
                 __end_of___flmul 195C                   __end_of___flsub 395A  
                 __end_of___fltol 2A66                             _T0CON 000FD5  
               _changeBuzzerState 3B9E                   ___awdiv@divisor 0003  
                           _T2CON 000FCA                   ___awdiv@counter 0005  
                    vfpfcnvrt@fmt 0058                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _PORTC 000F82  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                ?_changeBuzzerState 0001  
                           _flags 007D                             _errno 010E  
                           _fputc 2D66                             _fputs 39A0  
                 __end_of_isdigit 3B34                   __end_of_pinMode 3684  
                           labs@a 0001                   ??_configOutputs 0008  
                           _setup 34EA                             atoi@n 000E  
                           pad@fp 0011                             atoi@s 0007  
                           _width 010A                             _putch 3BFA  
                 __end_of_isspace 39A0               ??_changeBuzzerState 0008  
                   _snprintf$1046 00B6                             tablat 000FF5  
                           ttemp5 007F                             ttemp6 0082  
                           ttemp7 0086                             status 000FD8  
                           wtemp8 007F                    ?___fpclassifyf 0001  
                __end_of_LcdClear 3BFA                  LcdSetCursor@temp 0008  
               setup@fInitPwmDuty 0079              __end_of_digitalWrite 37B0  
                 __initialization 3B5A                 setup@fInitVoltage 0075  
                    __end_of_labs 35BA                      __end_of_atoi 2856  
                    __end_of_main 3BEC                    LcdPutChar@temp 0002  
       __end_of_changeBuzzerState 3BB6                            ??_labs 0005  
                          ??_atoi 0009                            ??_main 007D  
                   __activetblptr 000002           __end_of_DispSystemParam 2FB6  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            ?_fputc 0001  
                          ?_fputs 000A                            _ADRESH 000FC4  
                          _ADRESL 000FC3                            _CCPR1L 000FBE  
                          _CCPR2L 000FBB                  ___awdiv@dividend 0001  
                          ?_setup 0001                            ?_putch 0001  
                          i2l4501 388C                            i2l4503 38A0  
                          i2l4505 38B6                            i2l4507 38BE  
                          i2l4495 3870                            i2l4497 387E  
                          i2l4499 3886                 iConfigPWM@iNumPin 0001  
         __end_of_readBuzzerState 3BDC                         ??_LcdInit 0004  
                __end_of___xxtofl 2442                            _LcdCmd 3B7E  
          iConfigADC@iNumChannels 0001                            _LcdOut 3812  
                   ??_iPWMSetDuty 004F                      vfprintf@cfmt 0070  
                          ___flge 2A66                            ___fleq 2FB6  
                       ??___fladd 0009                            ___wmul 3B34  
                       ??___fldiv 0017                         ??___awdiv 0005  
                       ??___flneg 0005                         ??___flmul 0030  
                       ??___flsub 0049                         ??___fltol 0045  
                          _efgtoa 0664                            _floorf 207C  
                          _memcpy 38C4                            _memset 2442  
                     ?_LcdPutChar 0001                            clear_0 3B60  
                ___awdiv@quotient 0007                            isa$std 000001  
                          pad@buf 0013                    configOutputs@i 0008  
                   ??_fGetVoltage 0045                            _strcpy 39E4  
                          _strlen 3AD2                            fputc@c 0001  
                          fputs@c 000E                            fputs@i 000F  
                          fputs@s 000A                         ??_isdigit 0003  
                       ??_pinMode 0005                   ___fpclassifyf@e 0009  
                 ___fpclassifyf@u 000B                   ___fpclassifyf@x 0001  
                    __mediumconst 0000                         ??_isspace 0003  
                          tblptrh 000FF7                            tblptrl 000FF6  
                   _MsgInicialLcd 3060                            tblptru 000FF8  
                   ??_iAnalogRead 0003                        _iConfigADC 330E  
                          putch@c 0001                  __end_of_vfprintf 3812  
                      _iConfigPWM 320A                  __end_of_snprintf 2960  
                      ___flge@ff1 0041                        ___flge@ff2 0045  
                 ??___fpclassifyf 0005                      ___xxtofl@arg 000B  
                    ___xxtofl@exp 000A                      ___xxtofl@val 0001  
                      ___fleq@ff1 0001                        ___fleq@ff2 0005  
                      __accesstop 0080           __end_of__initialization 3B70  
                      ___flneg@f1 0001                     ___rparam_used 000001  
                      ___fltol@f1 0041        DispSystemParam@fAdcVoltage 00C7  
               __end_of_LcdPutStr 320A                    __pcstackCOMRAM 0001  
                   __end_of_fputc 2E30                     __end_of_fputs 39E4  
                   __end_of_setup 3554                     __end_of_putch 3BFC  
             __end_of_iPWMSetDuty 2C68             fGetPercentDuty@iValue 0041  
                  ?_MsgInicialLcd 0001                         ?_LcdClear 0001  
                ?_DispSystemParam 00C7               __end_of_fGetVoltage 3478  
                         ??_fputc 0005                           ??_fputs 000E  
                         ??_setup 0075                           ??_putch 0001  
                    _LcdSetCursor 35BA                        __pbssBANK0 00FD  
                      __pbssBANK1 0100                  ?_readBuzzerState 0001  
             __end_of_iAnalogRead 374C                           ?_LcdCmd 0001  
                         ?_LcdOut 0001                           ?___flge 0041  
                         ?___fleq 0001                           ?___wmul 0001  
                         ?_efgtoa 004D                 ??_fGetPercentDuty 0045  
                         _CCP1CON 000FBD                           _CCP2CON 000FBA  
                         ?_floorf 0028                           ?_memcpy 0001  
                         ?_memset 0001                           ?_strcpy 0001  
                         ?_strlen 0001                     _SystemControl 25B8  
                       ?___xxtofl 0001                           LcdCmd@c 0003  
                      ??_LcdClear 0004                           LcdOut@c 0001  
                    _digitalWrite 374C                       ?_iConfigADC 0001  
                     ?_iConfigPWM 0001                           _LcdInit 338C  
                         __Hparam 0000                       _iPWMSetDuty 2B6A  
                         __Lparam 0000                           ___fladd 1072  
                         ___fldiv 195C                           ___awdiv 2E30  
                         ___flneg 3A62                           ___flmul 1532  
                         ___flsub 3914                           ___fltol 2960  
                       ?_vfprintf 006A                      __psmallconst 0600  
                       ?_snprintf 00AC                           __pcinit 3B5A  
                         __ramtop 0600                           __ptext0 3BDC  
                         __ptext1 34EA                           __ptext2 320A  
                         __ptext3 330E                           __ptext4 328C  
                         __ptext5 3620                           __ptext6 3060  
                         __ptext7 338C                           __ptext8 3BEC  
                         __ptext9 3BB6                    ?_SystemControl 0001  
                 ??_MsgInicialLcd 000B                       _fGetVoltage 3406  
                       _T2CONbits 000FCA                           _isdigit 3B08  
                      ??___xxtofl 0005                           _pinMode 3620  
                         _isspace 395A                           efgtoa@c 0053  
                         efgtoa@d 008B                           efgtoa@e 008F  
                         efgtoa@f 004F                           efgtoa@g 00A4  
                         efgtoa@h 0099                           efgtoa@i 0097  
                         efgtoa@l 009D                           efgtoa@m 008D  
                         efgtoa@n 00A2                           efgtoa@p 0082  
                         efgtoa@t 0084                           efgtoa@u 00A8  
                         efgtoa@w 0091                           atoi@neg 000C  
                     _iAnalogRead 36E8                 __end_of_setLedsOn 36E8  
                  __pintcode_body 386E              end_of_initialization 3B70  
                         floorf@e 0036                           floorf@m 0032  
                         floorf@u 0038                           floorf@x 0028  
              iPWMSetDuty@iNumPin 004B             __end_of_configOutputs 330E  
                         memcpy@d 0007                           memcpy@n 0005  
                         memcpy@s 0009                           fputc@fp 0003  
                         memset@c 0003                           memset@k 0009  
                         memset@n 0005                           memset@s 000B  
                   __Lmediumconst 0000                           int_func 386E  
                         fputs@fp 000C       DispSystemParam@fPercentDuty 00CB  
               __end_of_vfpfcnvrt 207C                        efgtoa@mode 0089  
                      efgtoa@sign 00A1                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                  vfpfcnvrt@convarg 005F  
                      ??_vfprintf 0070                 fGetVoltage@iValue 0041  
                      ??_snprintf 0072                     ??_digitalRead 0004  
                    ??_LcdPutChar 0002                           strcpy@d 0007  
                         strlen@a 0003                           strcpy@s 0005  
                         strlen@s 0001                         _PORTDbits 000F83  
                       _PORTEbits 000F84                       ___fladd@grs 0010  
                   ___xxtofl@sign 0009         SystemControl@fPercentDuty 00F3  
                     ___fldiv@grs 0022                       ___fldiv@rem 001B  
                   LcdSetCursor@j 0007                     LcdSetCursor@k 0006  
                   LcdSetCursor@x 0005                     LcdSetCursor@y 0004  
                     ___flmul@grs 0035                __end_of_LcdPutChar 3AD2  
                    pinMode@fMode 0004                      pinMode@uiPin 0003  
                  __end_of_LcdCmd 3B9E                    __end_of_LcdOut 386E  
                       _LcdPutStr 3184                    __end_of___flge 2B6A  
                  __end_of___fleq 3060                   ??_SystemControl 0075  
                     vfpfcnvrt@ap 005A                       vfpfcnvrt@cp 0068  
                     vfpfcnvrt@fp 0056                    __end_of___wmul 3B5A  
                  __end_of_efgtoa 1072                    __end_of_floorf 228E  
                  __end_of_memcpy 3914                        floorf@F526 0100  
                  __end_of_memset 25B8                    __end_of_strcpy 3A24  
                  __end_of_strlen 3B08               start_initialization 3B5A  
             __end_of_digitalRead 3A62             SystemControl@fVoltage 00EF  
                     __end_of_pad 3184                       __end_of_isr 38C4  
           __end_of___fpclassifyf 2D66                   _fGetPercentDuty 3478  
                        ??_LcdCmd 0002                          ??_LcdOut 0001  
                     vfprintf@fmt 006C                          ??___flge 0049  
                        ??___fleq 0009                          ??___wmul 0005  
                      ?_LcdPutStr 0005                          ??_efgtoa 0054  
                iPWMSetDuty@iDuty 004D                          ??_floorf 002C  
                        ??_memcpy 0007                          ??_memset 0007  
                      memset@dest 0001                          ??_strcpy 0005  
                        ??_strlen 0003                         ___fladd@a 0005  
                       ___fladd@b 0001                         ___fldiv@a 0013  
                       ___fldiv@b 000F                         ___flmul@a 002C  
                       ___flmul@b 0028                       __pbssCOMRAM 007D  
                       ___flsub@a 0045                         ___flsub@b 0041  
      __end_of_ConfigTimerZeroISR 3BCA                     __pcstackBANK0 0080  
               digitalRead@pcPort 0001                       snprintf@cnt 00BA  
                    ??_iConfigADC 0003                       snprintf@fmt 00B0  
                    ??_iConfigPWM 0003                      _gstTimer1Seg 00FD  
                        ?_LcdInit 0001                       _efgtoa$1156 0086  
                    ?_iPWMSetDuty 004B                        setLedsOn@i 000C  
                       __pintcode 0008                          ?___fladd 0001  
                        ?___fldiv 000F                          ?___awdiv 0001  
                        ?___flneg 0001                          ?___flmul 0028  
                        ?___flsub 0041                          ?___fltol 0041  
              __end_of_iConfigADC 338C                __end_of_iConfigPWM 328C  
                     _digitalRead 3A24                      ?_fGetVoltage 0041  
                     __smallconst 0600                 _SystemControl$198 00F7  
                        ?_isdigit 0001                          ?_pinMode 0001  
                        ?_isspace 0001                setLedsOn@uiNumLeds 000B  
         __end_of_fGetPercentDuty 34EA                      ?_iAnalogRead 0001  
                  ___wmul@product 0005                         _setLedsOn 3684  
DispSystemParam@szPercentDutyDisp 00DF                          i2u473_40 387E  
                        i2u473_41 387A                          i2u474_40 38A0  
                        i2u474_41 389C                          i2u475_40 38B2  
                        i2u475_41 38AC                          i2u476_40 38B4  
                        _GO_nDONE 007E11                       ??_LcdPutStr 0007  
                       _vfpfcnvrt 1CF6                 ___wmul@multiplier 0001  
           __end_of_MsgInicialLcd 30F2                          _LcdClear 3BEC  
                    _isspace$1235 0005                        vfpfcnvrt@c 0067  
             iAnalogRead@iChannel 0001              SystemControl@iResult 00F9  
                      ?_setLedsOn 0001                          __Hrparam 0000  
                       memcpy@tmp 000B                        vfprintf@ap 006E  
                        __Lrparam 0000                        vfprintf@fp 006A  
               ??_DispSystemParam 0075                      LcdPutStr@str 0005  
                      ?_vfpfcnvrt 0056                        snprintf@ap 00B8  
                digitalRead@uiPin 0003                 ??_readBuzzerState 0007  
              ___fpclassifyf@F465 0104                digitalWrite@fState 0004  
                        ___xxtofl 228E   DispSystemParam@szAdcVoltageDisp 00CF  
                        __ptext10 25B8                          __ptext11 3684  
                        __ptext20 374C                          __ptext12 3BCA  
                        __ptext21 2E30                          __ptext13 3A24  
                        __ptext30 39A0                          __ptext22 2EF4  
                        __ptext14 2B6A                          __ptext31 2D66  
                        __ptext23 2856                          __ptext15 36E8  
                        __ptext40 3A62                          __ptext32 3BFA  
                        __ptext24 37B0                          __ptext16 3406  
                        __ptext41 1532                          __ptext33 38C4  
                        __ptext25 1CF6                          __ptext17 3478  
                        __ptext50 35BA                          __ptext42 2A66  
                        __ptext34 3554                          __ptext26 0664  
                        __ptext18 228E                          __ptext51 3B7E  
                        __ptext43 2FB6                          __ptext35 207C  
                        __ptext27 39E4                          __ptext19 3B9E  
                        __ptext52 3184                          __ptext44 195C  
                        __ptext36 2C68                          __ptext28 30F2  
                        __ptext53 3A9A                          __ptext45 270C  
                        __ptext37 2960                          __ptext29 3AD2  
                        __ptext54 3812                          __ptext46 395A  
                        __ptext38 3914                          __ptext47 3B08  
                        __ptext39 1072                          __ptext48 3B34  
                        __ptext49 2442                  ?_fGetPercentDuty 0041  
                   ?_LcdSetCursor 0004                        strcpy@dest 0001  
                        efgtoa@fp 004D                          efgtoa@ne 0080  
                        efgtoa@pp 0088                          efgtoa@ou 0093  
                        isa$xinst 000000                          int$flags 007E  
                        _vfprintf 37B0                          _snprintf 2856  
           __end_of_SystemControl 270C               SystemControl@iValue 00FB  
         changeBuzzerState@fState 0008                       LcdPutChar@c 0004  
                     LcdPutChar@y 0003                        _INTCONbits 000FF2  
                        memcpy@d1 0001                          memcpy@s1 0003  
                   ?_digitalWrite 0001                          isdigit@c 0001  
                  ??_LcdSetCursor 0005                         snprintf@f 00BC  
                       snprintf@n 00AE                         snprintf@s 00AC  
                        intlevel2 0000                 digitalWrite@pcLat 0001  
               digitalWrite@uiPin 0003                          isspace@c 0001  
                   _configOutputs 328C                       ??_setLedsOn 0008  
              _ConfigTimerZeroISR 3BB6                         strcpy@src 0003  
                     efgtoa@nmode 008A               ?_ConfigTimerZeroISR 0001  
                     ??_vfpfcnvrt 005C                      ?_digitalRead 0001  
                      LcdPutStr@i 0009                    ??_digitalWrite 0005  
            ??_ConfigTimerZeroISR 0001                     ___fladd@signs 000D  
                  ?_configOutputs 0001                      ___fladd@aexp 000E  
                    ___fladd@bexp 000F  
