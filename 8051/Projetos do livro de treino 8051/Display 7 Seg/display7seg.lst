
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	H:\Silvio Pasta\Projetos do livro de treino 8051\Display 7 Seg\display7seg.asm
	Object File:	H:\Silvio Pasta\Projetos do livro de treino 8051\Display 7 Seg\display7seg.hex
	List File:	H:\Silvio Pasta\Projetos do livro de treino 8051\Display 7 Seg\display7seg.lst



 Line  I  Addr  Code            Source

    1:				; ==================================================================================
    2:				; =================      ETEC Aristóteles Ferreira   ==================
    3:				; ================     Yhan Christian Souza Silva        ================
    4:				; =====            Programa_01  display7seg.asm  ver. 0.0 data: 03/04/13       ========

    5:				; ===================================================================================
    6:
    7:				;Rotina de inicialização
    8:	  0000	75 B0 00		mov		p3,#00h		;Apaga todos os segmentos
    9:	  0003	78 FF			mov		r0,#0ffh	;Armazena #0ffh em R0
   10:
   11:				;Rotina de leitura da palavra de entrada
   12:	  0005	E5 90		ciclo1:	mov		a,p1		;Leitura do port p1
   13:	  0007	54 0F			anl		a,#00001111b	;"reseta" os 4 bits+significativos do acc
   14:	  0009	B5 00 02		cjne		a,00h,ciclo2	;se entrada atual for diferente da anterior, vá
   15:									;para ciclo2, observe que 00H é o próprio R0
   16:	  000C	80 F7			sjmp		ciclo1		;caso contrário, volta a leitura do port p1
   17:	  000E	F8		ciclo2:	mov		r0,a		;armazena entrada atual em r0
   18:	  000F	80 00			sjmp		caract_0	;vá para caract_0
   19:
   20:
   21:				;Rotina de Varredura do caractere a ser mostrado
   22:
   23:	  0011	B4 00 05	caract_0:	cjne	a,#0000b,caract_1	;Se a palavra de entrada diferente de 0000b,vá para
				caract_1
   24:	  0014	75 B0 3F			mov	p3,#00111111b		;mostra caractere 0 no display (veja tabela)
   25:	  0017	80 EC				sjmp	ciclo1			;volta a rotina de leitura
   26:
   27:	  0019	B4 01 05	caract_1:	cjne	a,#0001b,caract_2	;Se a palavra de entrada diferente de 0001b,vá para
				caract_2
   28:	  001C	75 B0 06			mov	p3,#00000110b		;mostra caractere 1 no display
   29:	  001F	80 E4				sjmp	ciclo1			;volta a rotina de leitura
   30:
   31:	  0021	B4 02 05	caract_2:	cjne	a,#0010b,caract_3	;Se a palavra de entrada diferente de 0010b, vá para
				 caract_3
   32:	  0024	75 B0 5B			mov	p3,#01011011b		;mostra caractere 2 no display
   33:	  0027	80 DC				sjmp	ciclo1			;volta a rotina de leitura
   34:
   35:	  0029	B4 03 05	caract_3:	cjne	a,#0011b,caract_4	;Se a palavra de entrada diferente de 0011b, vá para
				 caract_4
   36:	  002C	75 B0 4F			mov	p3,#01001111b		;mostra caractere 3 no display
   37:	  002F	80 D4				sjmp	ciclo1			;volta a rotina de leitura
   38:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   39:	  0031	B4 04 05	caract_4:	cjne	a,#0100b,caract_5	;Se a palavra de entrada diferente de 0100b, vá para
				 caract_5
   40:	  0034	75 B0 66			mov	p3,#01100110b		;mostra caractere 4 no display
   41:	  0037	80 CC				sjmp	ciclo1			;volta a rotina de leitura
   42:
   43:	  0039	B4 05 05	caract_5:	cjne	a,#0101b,caract_6	;Se a palavra de entrada diferente de 0101b, vá para
				 caract_6
   44:	  003C	75 B0 6D			mov	p3,#01101101b		;mostra caractere 5 no display
   45:	  003F	80 C4				sjmp	ciclo1			;volta a rotina de leitura
   46:
   47:	  0041	B4 06 05	caract_6:	cjne	a,#0110b,caract_7	;Se a palavra de entrada diferente de 0110b, vá para
				 caract_7
   48:	  0044	75 B0 7D			mov	p3,#01111101b		;mostra caractere 6 no display
   49:	  0047	80 BC				sjmp	ciclo1			;volta a rotina de leitura
   50:
   51:	  0049	B4 07 05	caract_7:	cjne	a,#0111b,caract_8	;Se a palavra de entrada diferente de 0111b, vá para
				 caract_8
   52:	  004C	75 B0 07			mov	p3,#00000111b		;mostra caractere 7 no display
   53:	  004F	80 B4				sjmp	ciclo1			;volta a rotina de leitura
   54:
   55:	  0051	B4 08 05	caract_8:	cjne	a,#1000b,caract_9	;Se a palavra de entrada diferente de 1000b, vá para
				 caract_9
   56:	  0054	75 B0 7F			mov	p3,#01111111b		;mostra caractere 8 no display
   57:	  0057	80 AC				sjmp	ciclo1			;volta a rotina de leitura
   58:
   59:	  0059	B4 09 05	caract_9:	cjne	a,#1001b,caract_A	;Se a palavra de entrada diferente de 1001b, vá para
				 caract_A
   60:	  005C	75 B0 6F			mov	p3,#01101111b		;mostra caractere 9 no display
   61:	  005F	80 A4				sjmp	ciclo1			;volta a rotina de leitura
   62:
   63:	  0061	B4 0A 05	caract_A:	cjne	a,#1010b,caract_b	;Se a palavra de entrada diferente de 1010b, vá para
				 caract_b
   64:	  0064	75 B0 77			mov	p3,#01110111b		;mostra caractere A no display
   65:	  0067	80 9C				sjmp	ciclo1			;volta a rotina de leitura
   66:
   67:	  0069	B4 0B 06	caract_b:	cjne	a,#1011b,caract_C	;Se a palavra de entrada diferente de 1011b, vá para
				 caract_C
   68:	  006C	75 B0 7C			mov	p3,#01111100b		;mostra caractere B no display
   69:	  006F	02 00 05			ljmp	ciclo1			;volta a rotina de leitura
   70:
   71:	  0072	B4 0C 06	caract_C:	cjne	a,#1100b,caract_d	;Se a palavra de entrada diferente de 1100b, vá para
				 caract_D
   72:	  0075	75 B0 39			mov	p3,#00111001b		;mostra caractere C no display
   73:	  0078	02 00 05			ljmp	ciclo1			;volta a rotina de leitura
   74:
   75:	  007B	B4 0D 06	caract_d:	cjne	a,#1101b,caract_E	;Se a palavra de entrada diferente de 1101b, vá para
				 caract_E
   76:	  007E	75 B0 5E			mov	p3,#01011110b		;mostra caractere D no display
   77:	  0081	02 00 05			ljmp	ciclo1			;volta a rotina de leitura
   78:
   79:	  0084	B4 0E 06	caract_E:	cjne	a,#1110b,caract_F	;Se a palavra de entrada diferente de 1110b, vá para
				 caract_F
   80:	  0087	75 B0 79			mov	p3,#01111001b		;mostra caractere E no display
   81:	  008A	02 00 05			ljmp	ciclo1			;volta a rotina de leitura
   82:
   83:	  008D	B4 0F 03	caract_F:	cjne	a,#1111b,pulo		;Se a palavra de entrada diferente de 1111b, vá

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

   84:										;para pulo (rotina de leitura)
   85:	  0090	75 B0 71			mov	p3,#01110001b		;mostra caractere F no display
   86:	  0093	02 00 05	pulo:		ljmp	ciclo1			;volta a rotina de leitura
   87:
   88:						end				;fim do programa
   89:





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
CARACT_0			  CODE	    0011	  23
CARACT_1			  CODE	    0019	  27
CARACT_2			  CODE	    0021	  31
CARACT_3			  CODE	    0029	  35
CARACT_4			  CODE	    0031	  39
CARACT_5			  CODE	    0039	  43
CARACT_6			  CODE	    0041	  47
CARACT_7			  CODE	    0049	  51
CARACT_8			  CODE	    0051	  55
CARACT_9			  CODE	    0059	  59
CARACT_A			  CODE	    0061	  63
CARACT_B			  CODE	    0069	  67
CARACT_C			  CODE	    0072	  71
CARACT_D			  CODE	    007B	  75
CARACT_E			  CODE	    0084	  79
CARACT_F			  CODE	    008D	  83
CICLO1				  CODE	    0005	  12
CICLO2				  CODE	    000E	  17
CY				  BIT	      D7
DPH				  DATA	      83
DPL				  DATA	      82
EA				  BIT	      AF
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PCON				  DATA	      87

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PULO				  CODE	    0093	  86
PX0				  BIT	      B8
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
REN				  BIT	      9C
RESET				  CODE	    0000
RI				  BIT	      98
RS0				  BIT	      D3
RS1				  BIT	      D4
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1
WR				  BIT	      B6
